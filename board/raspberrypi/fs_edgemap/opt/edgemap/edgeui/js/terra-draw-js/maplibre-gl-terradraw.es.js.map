{"version":3,"file":"maplibre-gl-terradraw.es.js","sources":["../node_modules/terra-draw/dist/terra-draw.modern.js","../node_modules/terra-draw-maplibre-gl-adapter/dist/terra-draw-maplibre-gl-adapter.modern.js","../src/lib/constants/AvailableModes.ts","../src/lib/constants/defaultControlOptions.ts","../src/lib/constants/defaultMeasureControlOptions.ts","../src/lib/constants/getDefaultModeOptions.ts","../node_modules/@turf/helpers/dist/esm/index.js","../node_modules/@turf/meta/dist/esm/index.js","../node_modules/@turf/area/dist/esm/index.js","../src/lib/helpers/convertAreaUnit.ts","../src/lib/helpers/calcArea.ts","../node_modules/@turf/invariant/dist/esm/index.js","../node_modules/@turf/distance/dist/esm/index.js","../src/lib/helpers/getDistanceUnitName.ts","../src/lib/helpers/convertMetricDistance.ts","../src/lib/helpers/calcDistance.ts","../src/lib/helpers/capitalize.ts","../src/lib/helpers/cleanMaplibreStyle.ts","../src/lib/helpers/debounce.ts","../src/lib/helpers/queryElevationByPoint.ts","../node_modules/@watergis/terrain-rgb/dist/terrain-rgb.es.js","../src/lib/helpers/queryElevationFromRasterDEM.ts","../src/lib/helpers/roundFeatureCoordinates.ts","../src/lib/controls/MaplibreTerradrawControl.ts","../node_modules/@turf/centroid/dist/esm/index.js","../src/lib/controls/MaplibreMeasureControl.ts"],"sourcesContent":["function t(){return t=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var i=arguments[e];for(var o in i)({}).hasOwnProperty.call(i,o)&&(t[o]=i[o])}return t},t.apply(null,arguments)}var e;!function(t){t.Commit=\"commit\",t.Provisional=\"provisional\",t.Finish=\"finish\"}(e||(e={}));const i={SELECTED:\"selected\",MID_POINT:\"midPoint\",SELECTION_POINT:\"selectionPoint\"},o=\"edited\",s=\"closingPoint\",n=\"snappingPoint\",r=\"coordinatePoint\",a=\"coordinatePointIds\";function d(t){return Boolean(t&&\"object\"==typeof t&&null!==t&&!Array.isArray(t))}function h(t){return Boolean(t&&\"object\"==typeof t&&\"properties\"in t&&\"object\"==typeof t.properties&&null!==t.properties&&\"mode\"in t.properties)}function l(t){return!!function(t){return\"number\"==typeof t&&!isNaN(new Date(t).valueOf())}(t)}const c=\"Feature is not a Polygon\",u=\"Feature mode property does not match the mode being added to\";var p;!function(t){t.Drawing=\"drawing\",t.Select=\"select\",t.Static=\"static\",t.Render=\"render\"}(p||(p={}));class g{get state(){return this._state}set state(t){throw new Error(\"Please use the modes lifecycle methods\")}get styles(){return this._styles}set styles(t){if(\"object\"!=typeof t)throw new Error(\"Styling must be an object\");this.onStyleChange&&this.onStyleChange([],\"styling\"),this._styles=t}registerBehaviors(t){}constructor(t,e=!1){this._state=\"unregistered\",this._styles={},this.behaviors=[],this.validate=void 0,this.pointerDistance=40,this.coordinatePrecision=void 0,this.onStyleChange=void 0,this.store=void 0,this.projection=\"web-mercator\",this.setDoubleClickToZoom=void 0,this.unproject=void 0,this.project=void 0,this.setCursor=void 0,this.type=p.Drawing,this.mode=\"base\",e||this.updateOptions(t)}updateOptions(e){null!=e&&e.styles&&(this.styles=t({},this._styles,e.styles)),null!=e&&e.pointerDistance&&(this.pointerDistance=e.pointerDistance),null!=e&&e.validation&&(this.validate=e&&e.validation),null!=e&&e.projection&&(this.projection=e.projection)}setDrawing(){if(\"started\"!==this._state)throw new Error(\"Mode must be unregistered or stopped to start\");this._state=\"drawing\"}setStarted(){if(\"stopped\"!==this._state&&\"registered\"!==this._state&&\"drawing\"!==this._state&&\"selecting\"!==this._state)throw new Error(\"Mode must be unregistered or stopped to start\");this._state=\"started\",this.setDoubleClickToZoom(!1)}setStopped(){if(\"started\"!==this._state)throw new Error(\"Mode must be started to be stopped\");this._state=\"stopped\",this.setDoubleClickToZoom(!0)}register(t){if(\"unregistered\"!==this._state)throw new Error(\"Can not register unless mode is unregistered\");this._state=\"registered\",this.store=t.store,this.store.registerOnChange(t.onChange),this.setDoubleClickToZoom=t.setDoubleClickToZoom,this.project=t.project,this.unproject=t.unproject,this.onSelect=t.onSelect,this.onDeselect=t.onDeselect,this.setCursor=t.setCursor,this.onStyleChange=t.onChange,this.onFinish=t.onFinish,this.coordinatePrecision=t.coordinatePrecision,this.registerBehaviors({mode:t.mode,store:this.store,project:this.project,unproject:this.unproject,pointerDistance:this.pointerDistance,coordinatePrecision:t.coordinatePrecision,projection:this.projection})}validateFeature(t){return this.performFeatureValidation(t)}afterFeatureAdded(t){}performFeatureValidation(t){if(\"unregistered\"===this._state)throw new Error(\"Mode must be registered\");const i=function(t,e){let i;if(d(t))if(null==t.id)i=\"Feature has no id\";else if(\"string\"!=typeof t.id&&\"number\"!=typeof t.id)i=\"Feature must be string or number as per GeoJSON spec\";else if(e(t.id))if(d(t.geometry))if(d(t.properties))if(\"string\"==typeof t.geometry.type&&[\"Polygon\",\"LineString\",\"Point\"].includes(t.geometry.type))if(Array.isArray(t.geometry.coordinates)){if(!t.properties.mode||\"string\"!=typeof t.properties.mode)return{valid:!1,reason:\"Feature does not have a valid mode property\"}}else i=\"Feature coordinates is not an array\";else i=\"Feature is not Point, LineString or Polygon\";else i=\"Feature has no properties\";else i=\"Feature has no geometry\";else i=\"Feature must match the id strategy (default is UUID4)\";else i=\"Feature is not object\";return i?{valid:!1,reason:i}:{valid:!0}}(t,this.store.idStrategy.isValidId);if(this.validate){const o=this.validate(t,{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Provisional});return{valid:i.valid&&o.valid,reason:o.reason}}return{valid:i.valid,reason:i.reason}}validateModeFeature(t,e){const i=this.performFeatureValidation(t);return i.valid?t.properties.mode!==this.mode?{valid:!1,reason:u}:e(t):{valid:!1,reason:i.reason}}onFinish(t,e){}onDeselect(t){}onSelect(t){}onKeyDown(t){}onKeyUp(t){}onMouseMove(t){}onClick(t){}onDragStart(t,e){}onDrag(t,e){}onDragEnd(t,e){}getHexColorStylingValue(t,e,i){return this.getStylingValue(t,e,i)}getNumericStylingValue(t,e,i){return this.getStylingValue(t,e,i)}getStylingValue(t,e,i){return void 0===t?e:\"function\"==typeof t?t(i):t}}class y extends g{constructor(...t){super(...t),this.type=p.Select}}function m(t,e){const i=t=>t*Math.PI/180,o=i(t[1]),s=i(t[0]),n=i(e[1]),r=n-o,a=i(e[0])-s,d=Math.sin(r/2)*Math.sin(r/2)+Math.cos(o)*Math.cos(n)*Math.sin(a/2)*Math.sin(a/2);return 2*Math.atan2(Math.sqrt(d),Math.sqrt(1-d))*6371e3/1e3}const f=6371008.8;function C(t){return t%360*Math.PI/180}function v(t){return t/6371.0088}function P(t){return t%(2*Math.PI)*180/Math.PI}function I(t,e=9){const i=Math.pow(10,e);return Math.round(t*i)/i}const x=57.29577951308232,S=.017453292519943295,M=6378137,F=(t,e)=>({x:0===t?0:t*S*M,y:0===e?0:Math.log(Math.tan(Math.PI/4+e*S/2))*M}),E=(t,e)=>({lng:0===t?0:x*(t/M),lat:0===e?0:(2*Math.atan(Math.exp(e/M))-Math.PI/2)*x});function D(t,e,i){const o=C(t[0]),s=C(t[1]),n=C(i),r=v(e),a=Math.asin(Math.sin(s)*Math.cos(r)+Math.cos(s)*Math.sin(r)*Math.cos(n));return[P(o+Math.atan2(Math.sin(n)*Math.sin(r)*Math.cos(s),Math.cos(r)-Math.sin(s)*Math.sin(a))),P(a)]}function w(t){const{center:e,radiusKilometers:i,coordinatePrecision:o}=t,s=t.steps?t.steps:64,n=[];for(let t=0;t<s;t++){const r=D(e,i,-360*t/s);n.push([I(r[0],o),I(r[1],o)])}return n.push(n[0]),{type:\"Feature\",geometry:{type:\"Polygon\",coordinates:[n]},properties:{}}}function b(t){let e;if(\"Polygon\"===t.geometry.type)e=t.geometry.coordinates;else{if(\"LineString\"!==t.geometry.type)throw new Error(\"Self intersects only accepts Polygons and LineStrings\");e=[t.geometry.coordinates]}const i=[];for(let t=0;t<e.length;t++)for(let i=0;i<e[t].length-1;i++)for(let o=0;o<e.length;o++)for(let n=0;n<e[o].length-1;n++)s(t,i,o,n);return i.length>0;function o(t){return t<0||t>1}function s(t,s,n,r){const a=e[t][s],d=e[t][s+1],h=e[n][r],l=e[n][r+1],c=function(t,e,i,o){if(k(t,i)||k(t,o)||k(e,i)||k(o,i))return null;const s=t[0],n=t[1],r=e[0],a=e[1],d=i[0],h=i[1],l=o[0],c=o[1],u=(s-r)*(h-c)-(n-a)*(d-l);return 0===u?null:[((s*a-n*r)*(d-l)-(s-r)*(d*c-h*l))/u,((s*a-n*r)*(h-c)-(n-a)*(d*c-h*l))/u]}(a,d,h,l);if(null===c)return;let u,p;u=d[0]!==a[0]?(c[0]-a[0])/(d[0]-a[0]):(c[1]-a[1])/(d[1]-a[1]),p=l[0]!==h[0]?(c[0]-h[0])/(l[0]-h[0]):(c[1]-h[1])/(l[1]-h[1]),o(u)||o(p)||(c.toString(),i.push(c))}}function k(t,e){return t[0]===e[0]&&t[1]===e[1]}function O(t,e){return j(t[0])<=e&&j(t[1])<=e}function _(t){return 2===t.length&&\"number\"==typeof t[0]&&\"number\"==typeof t[1]&&Infinity!==t[0]&&Infinity!==t[1]&&(i=t[0])>=-180&&i<=180&&(e=t[1])>=-90&&e<=90;var e,i}function j(t){let e=1,i=0;for(;Math.round(t*e)/e!==t;)e*=10,i++;return i}const W=\"Feature has holes\",B=\"Feature has less than 4 coordinates\",N=\"Feature has invalid coordinates\",G=\"Feature coordinates are not closed\";function L(t,e){if(\"Polygon\"!==t.geometry.type)return{valid:!1,reason:\"Feature is not a Polygon\"};if(1!==t.geometry.coordinates.length)return{valid:!1,reason:W};if(t.geometry.coordinates[0].length<4)return{valid:!1,reason:B};for(let i=0;i<t.geometry.coordinates[0].length;i++){if(!_(t.geometry.coordinates[0][i]))return{valid:!1,reason:N};if(!O(t.geometry.coordinates[0][i],e))return{valid:!1,reason:\"Feature has coordinates with excessive precision\"}}return(i=t.geometry.coordinates[0][0])[0]!==(o=t.geometry.coordinates[0][t.geometry.coordinates[0].length-1])[0]||i[1]!==o[1]?{valid:!1,reason:G}:{valid:!0};var i,o}function V(t,e){const i=L(t,e);return i.valid?b(t)?{valid:!1,reason:\"Feature intersects itself\"}:{valid:!0}:i}const T={cancel:\"Escape\",finish:\"Enter\"},U={start:\"crosshair\"};class A extends g{constructor(t){super(t,!0),this.mode=\"circle\",this.center=void 0,this.clickCount=0,this.currentCircleId=void 0,this.keyEvents=T,this.cursors=U,this.startingRadiusKilometers=1e-5,this.cursorMovedAfterInitialCursorDown=!1,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents)),null!=e&&e.startingRadiusKilometers&&(this.startingRadiusKilometers=e.startingRadiusKilometers)}close(){if(void 0===this.currentCircleId)return;const t=this.currentCircleId;if(this.validate&&t){const i=this.store.getGeometryCopy(t);if(!this.validate({type:\"Feature\",id:t,geometry:i,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Finish}).valid)return}this.cursorMovedAfterInitialCursorDown=!1,this.center=void 0,this.currentCircleId=void 0,this.clickCount=0,\"drawing\"===this.state&&this.setStarted(),this.onFinish(t,{mode:this.mode,action:\"draw\"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onClick(t){if(0===this.clickCount){this.center=[t.lng,t.lat];const e=w({center:this.center,radiusKilometers:this.startingRadiusKilometers,coordinatePrecision:this.coordinatePrecision}),[i]=this.store.create([{geometry:e.geometry,properties:{mode:this.mode,radiusKilometers:this.startingRadiusKilometers}}]);this.currentCircleId=i,this.clickCount++,this.cursorMovedAfterInitialCursorDown=!1,this.setDrawing()}else 1===this.clickCount&&this.center&&void 0!==this.currentCircleId&&this.cursorMovedAfterInitialCursorDown&&this.updateCircle(t),this.close()}onMouseMove(t){this.cursorMovedAfterInitialCursorDown=!0,this.updateCircle(t)}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){const t=this.currentCircleId;this.center=void 0,this.currentCircleId=void 0,this.clickCount=0,\"drawing\"===this.state&&this.setStarted();try{void 0!==t&&this.store.delete([t])}catch(t){}}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});return\"Feature\"===e.type&&\"Polygon\"===e.geometry.type&&e.properties.mode===this.mode?(i.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,i.polygonFillColor,e),i.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,i.polygonOutlineColor,e),i.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,i.polygonOutlineWidth,e),i.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,i.polygonFillOpacity,e),i.zIndex=10,i):i}validateFeature(t){return this.validateModeFeature(t,t=>V(t,this.coordinatePrecision))}updateCircle(t){if(1===this.clickCount&&this.center&&this.currentCircleId){const i=m(this.center,[t.lng,t.lat]);let o;if(\"web-mercator\"===this.projection){const e=function(t,e){const i=1e3*m(t,e);if(0===i)return 1;const{x:o,y:s}=F(t[0],t[1]),{x:n,y:r}=F(e[0],e[1]);return Math.sqrt(Math.pow(n-o,2)+Math.pow(r-s,2))/i}(this.center,[t.lng,t.lat]);o=function(t){const{center:e,radiusKilometers:i,coordinatePrecision:o}=t,s=t.steps?t.steps:64,n=1e3*i,[r,a]=e,{x:d,y:h}=F(r,a),l=[];for(let t=0;t<s;t++){const e=360*t/s*Math.PI/180,i=n*Math.cos(e),r=n*Math.sin(e),[a,c]=[d+i,h+r],{lng:u,lat:p}=E(a,c);l.push([I(u,o),I(p,o)])}return l.push(l[0]),{type:\"Feature\",geometry:{type:\"Polygon\",coordinates:[l]},properties:{}}}({center:this.center,radiusKilometers:i*e,coordinatePrecision:this.coordinatePrecision})}else{if(\"globe\"!==this.projection)throw new Error(\"Invalid projection\");o=w({center:this.center,radiusKilometers:i,coordinatePrecision:this.coordinatePrecision})}if(this.validate&&!this.validate({type:\"Feature\",id:this.currentCircleId,geometry:o.geometry,properties:{radiusKilometers:i}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Provisional}).valid)return;this.store.updateGeometry([{id:this.currentCircleId,geometry:o.geometry}]),this.store.updateProperty([{id:this.currentCircleId,property:\"radiusKilometers\",value:i}])}}}const R=(t,e)=>{const{x:i,y:o}=t,{x:s,y:n}=e,r=s-i,a=n-o;return Math.sqrt(a*a+r*r)};function K(t){const e=function(t){const e=t.coordinates[0];let i=0;for(let t=0;t<e.length-1;t++){const[o,s]=e[t],[n,r]=e[t+1];i+=(n-o)*(r+s)}return i<0}(t);if(!e)return{type:\"Polygon\",coordinates:[t.coordinates[0].reverse()]}}const X={cancel:\"Escape\",finish:\"Enter\"},z={start:\"crosshair\",close:\"pointer\"};class Y extends g{constructor(t){super(t,!0),this.mode=\"freehand\",this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,this.minDistance=20,this.keyEvents=X,this.cursors=z,this.preventPointsNearClose=!0,this.autoClose=!1,this.autoCloseTimeout=500,this.hasLeftStartingPoint=!1,this.preventNewFeature=!1,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.minDistance&&(this.minDistance=e.minDistance),void 0!==(null==e?void 0:e.preventPointsNearClose)&&(this.preventPointsNearClose=e.preventPointsNearClose),void 0!==(null==e?void 0:e.autoClose)&&(this.autoClose=e.autoClose),null!=e&&e.autoCloseTimeout&&(this.autoCloseTimeout=e.autoCloseTimeout),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents)),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors))}close(){if(void 0===this.currentId)return;if(this.currentId){const t=K(this.store.getGeometryCopy(this.currentId));t&&this.store.updateGeometry([{id:this.currentId,geometry:t}])}const t=this.currentId;if(this.validate&&t){const i=this.store.getGeometryCopy(t);if(!this.validate({type:\"Feature\",id:t,geometry:i,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Finish}).valid)return}this.closingPointId&&this.store.delete([this.closingPointId]),this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,this.hasLeftStartingPoint=!1,\"drawing\"===this.state&&this.setStarted(),this.onFinish(t,{mode:this.mode,action:\"draw\"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onMouseMove(t){if(void 0===this.currentId||!1===this.startingClick)return;const i=this.store.getGeometryCopy(this.currentId),o=i.coordinates[0].length-2,[s,n]=i.coordinates[0][o],{x:r,y:a}=this.project(s,n),d=R({x:r,y:a},{x:t.containerX,y:t.containerY}),[h,l]=i.coordinates[0][0],{x:c,y:u}=this.project(h,l);if(R({x:c,y:u},{x:t.containerX,y:t.containerY})<this.pointerDistance){if(this.autoClose&&this.hasLeftStartingPoint&&(this.preventNewFeature=!0,setTimeout(()=>{this.preventNewFeature=!1},this.autoCloseTimeout),this.close()),this.setCursor(this.cursors.close),this.preventPointsNearClose)return}else this.hasLeftStartingPoint=!0,this.setCursor(this.cursors.start);if(d<this.minDistance)return;i.coordinates[0].pop();const p={type:\"Polygon\",coordinates:[[...i.coordinates[0],[t.lng,t.lat],i.coordinates[0][0]]]};this.validate&&!this.validate({type:\"Feature\",id:this.currentId,geometry:p,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Provisional}).valid||this.store.updateGeometry([{id:this.currentId,geometry:p}])}onClick(t){if(!this.preventNewFeature){if(!1===this.startingClick){const[e,i]=this.store.create([{geometry:{type:\"Polygon\",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode}},{geometry:{type:\"Point\",coordinates:[t.lng,t.lat]},properties:{mode:this.mode,[s]:!0}}]);return this.currentId=e,this.closingPointId=i,this.startingClick=!0,void this.setDrawing()}this.close()}}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&!0===this.startingClick&&this.close()}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){const t=this.currentId,e=this.closingPointId;this.closingPointId=void 0,this.currentId=void 0,this.startingClick=!1,\"drawing\"===this.state&&this.setStarted();try{void 0!==t&&this.store.delete([t]),void 0!==e&&this.store.delete([e])}catch(t){}}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});return\"Feature\"===e.type&&\"Polygon\"===e.geometry.type&&e.properties.mode===this.mode?(i.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,i.polygonFillColor,e),i.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,i.polygonOutlineColor,e),i.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,i.polygonOutlineWidth,e),i.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,i.polygonFillOpacity,e),i.zIndex=10,i):\"Feature\"===e.type&&\"Point\"===e.geometry.type&&e.properties.mode===this.mode?(i.pointWidth=this.getNumericStylingValue(this.styles.closingPointWidth,i.pointWidth,e),i.pointColor=this.getHexColorStylingValue(this.styles.closingPointColor,i.pointColor,e),i.pointOutlineColor=this.getHexColorStylingValue(this.styles.closingPointOutlineColor,i.pointOutlineColor,e),i.pointOutlineWidth=this.getNumericStylingValue(this.styles.closingPointOutlineWidth,2,e),i.zIndex=40,i):i}validateFeature(t){return this.validateModeFeature(t,t=>L(t,this.coordinatePrecision))}}class H{constructor({store:t,mode:e,project:i,unproject:o,pointerDistance:s,coordinatePrecision:n,projection:r}){this.store=void 0,this.mode=void 0,this.project=void 0,this.unproject=void 0,this.pointerDistance=void 0,this.coordinatePrecision=void 0,this.projection=void 0,this.store=t,this.mode=e,this.project=i,this.unproject=o,this.pointerDistance=s,this.coordinatePrecision=n,this.projection=r}}function q({unproject:t,point:e,pointerDistance:i}){const o=i/2,{x:s,y:n}=e;return{type:\"Feature\",properties:{},geometry:{type:\"Polygon\",coordinates:[[t(s-o,n-o),t(s+o,n-o),t(s+o,n+o),t(s-o,n+o),t(s-o,n-o)].map(t=>[t.lng,t.lat])]}}}class $ extends H{constructor(t){super(t)}create(t){const{containerX:e,containerY:i}=t;return q({unproject:this.unproject,point:{x:e,y:i},pointerDistance:this.pointerDistance})}}class Z extends H{constructor(t){super(t)}measure(t,e){const{x:i,y:o}=this.project(e[0],e[1]);return R({x:i,y:o},{x:t.containerX,y:t.containerY})}}class J extends H{constructor(t,e,i){super(t),this.config=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.getSnappableCoordinateFirstClick=t=>this.getSnappable(t,t=>Boolean(t.properties&&t.properties.mode===this.mode)).coordinate,this.getSnappableCoordinate=(t,e)=>this.getSnappable(t,t=>Boolean(t.properties&&t.properties.mode===this.mode&&t.id!==e)).coordinate,this.config=t,this.pixelDistance=e,this.clickBoundingBox=i}getSnappable(t,e){const i=this.clickBoundingBox.create(t),o=this.store.search(i,e),s={featureId:void 0,featureCoordinateIndex:void 0,coordinate:void 0,minDist:Infinity};return o.forEach(e=>{let i;if(\"Polygon\"===e.geometry.type)i=e.geometry.coordinates[0];else{if(\"LineString\"!==e.geometry.type)return;i=e.geometry.coordinates}i.forEach((i,o)=>{const n=this.pixelDistance.measure(t,i);n<s.minDist&&n<this.pointerDistance&&(s.coordinate=i,s.minDist=n,s.featureId=e.id,s.featureCoordinateIndex=o)})}),s}}function Q(t,e,i){const o=C(t[0]),s=C(t[1]),n=C(i),r=v(e),a=Math.asin(Math.sin(s)*Math.cos(r)+Math.cos(s)*Math.sin(r)*Math.cos(n));return[P(o+Math.atan2(Math.sin(n)*Math.sin(r)*Math.cos(s),Math.cos(r)-Math.sin(s)*Math.sin(a))),P(a)]}function tt({x:t,y:e},i,o){const s=C(o);return{x:t+i*Math.cos(s),y:e+i*Math.sin(s)}}function et(t,e){const i=C(t[0]),o=C(e[0]),s=C(t[1]),n=C(e[1]),r=Math.sin(o-i)*Math.cos(n),a=Math.cos(s)*Math.sin(n)-Math.sin(s)*Math.cos(n)*Math.cos(o-i);return P(Math.atan2(r,a))}function it({x:t,y:e},{x:i,y:o}){let s=Math.atan2(o-e,i-t);return s*=180/Math.PI,s>180?s-=360:s<-180&&(s+=360),s}function ot(t){return(t+360)%360}function st(t,e,i){const o=[],s=t.length;let n,r,a,d=0;for(let s=0;s<t.length&&!(e>=d&&s===t.length-1);s++){if(d>e&&0===o.length){if(n=e-d,!n)return o.push(t[s]),o;r=et(t[s],t[s-1])-180,a=Q(t[s],n,r),o.push(a)}if(d>=i)return n=i-d,n?(r=et(t[s],t[s-1])-180,a=Q(t[s],n,r),o.push(a),o):(o.push(t[s]),o);if(d>=e&&o.push(t[s]),s===t.length-1)return o;d+=m(t[s],t[s+1])}if(d<e&&t.length===s)throw new Error(\"Start position is beyond line\");const h=t[t.length-1];return[h,h]}function nt(t){return t*(Math.PI/180)}function rt(t){return t*(180/Math.PI)}class at extends H{constructor(t){super(t),this.config=void 0,this.config=t}generateInsertionCoordinates(t,e,i){const o=[t,e];let s=0;for(let t=0;t<o.length-1;t++)s+=m(o[0],o[1]);if(s<=i)return o;let n=s/i-1;Number.isInteger(n)||(n=Math.floor(n)+1);const r=[];for(let t=0;t<n;t++){const e=st(o,i*t,i*(t+1));r.push(e)}const a=[];for(let t=0;t<r.length;t++)a.push(r[t][1]);return this.limitCoordinates(a)}generateInsertionGeodesicCoordinates(t,e,i){const o=m(t,e),s=function(t,e,i){const o=[],s=nt(t[1]),n=nt(t[0]),r=nt(e[1]),a=nt(e[0]);i+=1;const d=2*Math.asin(Math.sqrt(Math.sin((r-s)/2)**2+Math.cos(s)*Math.cos(r)*Math.sin((a-n)/2)**2));if(0===d||isNaN(d))return o;for(let t=0;t<=i;t++){const e=t/i,h=Math.sin((1-e)*d)/Math.sin(d),l=Math.sin(e*d)/Math.sin(d),c=h*Math.cos(s)*Math.cos(n)+l*Math.cos(r)*Math.cos(a),u=h*Math.cos(s)*Math.sin(n)+l*Math.cos(r)*Math.sin(a),p=h*Math.sin(s)+l*Math.sin(r);if(isNaN(c)||isNaN(u)||isNaN(p))continue;const g=Math.atan2(p,Math.sqrt(c**2+u**2)),y=Math.atan2(u,c);isNaN(g)||isNaN(y)||o.push([rt(y),rt(g)])}return o.slice(1,-1)}(t,e,Math.floor(o/i));return this.limitCoordinates(s)}limitCoordinates(t){return t.map(t=>[I(t[0],this.config.coordinatePrecision),I(t[1],this.config.coordinatePrecision)])}}function dt(t,e){return t[0]===e[0]&&t[1]===e[1]}function ht(t,e){if(\"LineString\"!==t.geometry.type)return{valid:!1,reason:\"Feature is not a LineString\"};if(t.geometry.coordinates.length<2)return{valid:!1,reason:\"Feature has less than 2 coordinates\"};for(let i=0;i<t.geometry.coordinates.length;i++){if(!_(t.geometry.coordinates[i]))return{valid:!1,reason:\"Feature has invalid coordinates\"};if(!O(t.geometry.coordinates[i],e))return{valid:!1,reason:\"Feature has coordinates with excessive precision\"}}return{valid:!0}}function lt(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2))}function ct(t,e){const i=function(t,e){const[i,o,s]=t,[n,r,a]=e;return i*n+o*r+s*a}(t,e)/(lt(t)*lt(e));return Math.acos(Math.min(Math.max(i,-1),1))}function ut(t){const e=C(t[1]),i=C(t[0]);return[Math.cos(e)*Math.cos(i),Math.cos(e)*Math.sin(i),Math.sin(e)]}function pt(t){const[e,i,o]=t,s=P(Math.asin(o));return[P(Math.atan2(i,e)),s]}function gt(t,e,i){const o=ut(t),s=ut(e),n=ut(i),[r,a,d]=n,[h,l,c]=function(t,e){const[i,o,s]=t,[n,r,a]=e;return[o*a-s*r,s*n-i*a,i*r-o*n]}(o,s),u=l*d-c*a,p=c*r-h*d,g=h*a-l*r,y=g*l-p*c,f=u*c-g*h,C=p*h-u*l,v=1/Math.sqrt(Math.pow(y,2)+Math.pow(f,2)+Math.pow(C,2)),P=[y*v,f*v,C*v],I=[-1*y*v,-1*f*v,-1*C*v],x=ct(o,s),S=ct(o,P),M=ct(s,P),F=ct(o,I),E=ct(s,I);let D;return D=S<F&&S<E||M<F&&M<E?P:I,ct(o,D)>x||ct(s,D)>x?m(pt(D),pt(o))<=m(pt(D),pt(s))?[pt(o),!0,!1]:[pt(s),!1,!0]:[pt(D),!1,!1]}function yt(t,e,i){const o=e.x-t.x,s=e.y-t.y,n=Math.max(0,Math.min(1,((i.x-t.x)*o+(i.y-t.y)*s)/(o*o+s*s)));return{x:t.x+n*o,y:t.y+n*s}}class mt extends H{constructor(t,e,i){super(t),this.config=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.getSnappableCoordinateFirstClick=t=>this.getSnappable(t,t=>Boolean(t.properties&&t.properties.mode===this.mode)).coordinate,this.getSnappableCoordinate=(t,e)=>this.getSnappable(t,t=>Boolean(t.properties&&t.properties.mode===this.mode&&t.id!==e)).coordinate,this.config=t,this.pixelDistance=e,this.clickBoundingBox=i}getSnappable(t,e){const i=this.clickBoundingBox.create(t),o=this.store.search(i,e),s={featureId:void 0,featureCoordinateIndex:void 0,coordinate:void 0,minDistance:Infinity};return o.forEach(e=>{let i;if(\"Polygon\"===e.geometry.type)i=e.geometry.coordinates[0];else{if(\"LineString\"!==e.geometry.type)return;i=e.geometry.coordinates}const o=[];for(let t=0;t<i.length-1;t++)o.push([i[t],i[t+1]]);let n;const r=[t.lng,t.lat];if(\"web-mercator\"===this.config.projection?n=function(t,e){let i=[Infinity,Infinity],o=Infinity,s=0;for(let n of e){const r=n[0],a=n[1];let d,h=Infinity;const l=F(r[0],r[1]),c=F(a[0],a[1]),u=F(t[0],t[1]);if(r[0]===t[0]&&r[1]===t[1])d=r;else if(a[0]===t[0]&&a[1]===t[1])d=a;else{const{x:t,y:e}=yt(l,c,u),{lng:i,lat:o}=E(t,e);d=[i,o]}d&&(h=R(u,F(d[0],d[1])),h<o&&(i=d,o=h,s=e.indexOf(n)))}return Infinity===o?void 0:{coordinate:i,lineIndex:s,distance:o}}(r,o):\"globe\"===this.config.projection&&(n=function(t,e){let i=[Infinity,Infinity],o=Infinity,s=0;for(let n of e){const r=n[0],a=n[1];let d,h=Infinity;r[0]===t[0]&&r[1]===t[1]?d=r:a[0]===t[0]&&a[1]===t[1]?d=a:[d]=gt(r,a,t),d&&(h=m(t,d),h<o&&(i=d,o=h,s=e.indexOf(n)))}return Infinity===o?void 0:{coordinate:i,distance:o,lineIndex:s}}(r,o)),!n)return;const a=this.pixelDistance.measure(t,n.coordinate);a<s.minDistance&&a<this.pointerDistance&&(s.featureId=e.id,s.coordinate=n.coordinate,s.featureCoordinateIndex=n.lineIndex,s.minDistance=a)}),s}}const ft={cancel:\"Escape\",finish:\"Enter\"},Ct={start:\"crosshair\",close:\"pointer\",dragStart:\"grabbing\",dragEnd:\"crosshair\"};class vt extends g{constructor(t){super(t,!0),this.mode=\"linestring\",this.currentCoordinate=0,this.currentId=void 0,this.closingPointId=void 0,this.keyEvents=ft,this.snapping=void 0,this.cursors=Ct,this.mouseMove=!1,this.insertCoordinates=void 0,this.lastCommitedCoordinates=void 0,this.snappedPointId=void 0,this.editable=!1,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedSnapType=void 0,this.editedInsertIndex=void 0,this.editedPointId=void 0,this.coordinateSnapping=void 0,this.insertPoint=void 0,this.lineSnapping=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors)),null!=e&&e.snapping&&(this.snapping=e.snapping),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents)),null!=e&&e.insertCoordinates&&(this.insertCoordinates=e.insertCoordinates),e&&e.editable&&(this.editable=e.editable)}close(){if(void 0===this.currentId)return;const t=this.store.getGeometryCopy(this.currentId);t.coordinates.pop(),this.updateGeometries([...t.coordinates],void 0,e.Commit);const i=this.currentId;this.closingPointId&&this.store.delete([this.closingPointId]),this.snappedPointId&&this.store.delete([this.snappedPointId]),this.currentCoordinate=0,this.currentId=void 0,this.closingPointId=void 0,this.snappedPointId=void 0,this.lastCommitedCoordinates=void 0,\"drawing\"===this.state&&this.setStarted(),this.onFinish(i,{mode:this.mode,action:\"draw\"})}updateGeometries(t,e,i){if(!this.currentId)return;const o={type:\"LineString\",coordinates:t};if(this.validate&&!this.validate({type:\"Feature\",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid)return;const s=[{id:this.currentId,geometry:o}];this.closingPointId&&e&&s.push({id:this.closingPointId,geometry:{type:\"Point\",coordinates:e}}),\"commit\"===i&&(this.lastCommitedCoordinates=o.coordinates),this.store.updateGeometry(s)}generateInsertCoordinates(t,e){if(!this.insertCoordinates||!this.lastCommitedCoordinates)throw new Error(\"Not able to insert coordinates\");if(\"amount\"!==this.insertCoordinates.strategy)throw new Error(\"Strategy does not exist\");const i=m(t,e)/(this.insertCoordinates.value+1);let o=[];return\"globe\"===this.projection?o=this.insertPoint.generateInsertionGeodesicCoordinates(t,e,i):\"web-mercator\"===this.projection&&(o=this.insertPoint.generateInsertionCoordinates(t,e,i)),o}createLine(t){const[e]=this.store.create([{geometry:{type:\"LineString\",coordinates:[t,t]},properties:{mode:this.mode}}]);this.lastCommitedCoordinates=[t,t],this.currentId=e,this.currentCoordinate++,this.setDrawing()}firstUpdateToLine(t){if(!this.currentId)return;const i=this.store.getGeometryCopy(this.currentId).coordinates,[o]=this.store.create([{geometry:{type:\"Point\",coordinates:[...t]},properties:{mode:this.mode}}]);this.closingPointId=o,this.setCursor(this.cursors.close);const s=[...i,t];this.updateGeometries(s,void 0,e.Commit),this.currentCoordinate++}updateToLine(t,i){if(!this.currentId)return;const o=this.store.getGeometryCopy(this.currentId).coordinates,[s,n]=this.lastCommitedCoordinates?this.lastCommitedCoordinates[this.lastCommitedCoordinates.length-1]:o[o.length-2],{x:r,y:a}=this.project(s,n);if(R({x:r,y:a},{x:i.x,y:i.y})<this.pointerDistance)return void this.close();this.setCursor(this.cursors.close);const d=[...o,t];this.updateGeometries(d,o[o.length-1],e.Commit),this.currentCoordinate++}registerBehaviors(t){this.coordinateSnapping=new J(t,new Z(t),new $(t)),this.insertPoint=new at(t),this.clickBoundingBox=new $(t),this.pixelDistance=new Z(t),this.lineSnapping=new mt(t,this.pixelDistance,this.clickBoundingBox),this.coordinateSnapping=new J(t,this.pixelDistance,this.clickBoundingBox)}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onMouseMove(t){this.mouseMove=!0,this.setCursor(this.cursors.start);const i=this.snapCoordinate(t);if(i){if(this.snappedPointId)this.store.updateGeometry([{id:this.snappedPointId,geometry:{type:\"Point\",coordinates:i}}]);else{const[t]=this.store.create([{geometry:{type:\"Point\",coordinates:i},properties:{mode:this.mode,[n]:!0}}]);this.snappedPointId=t}t.lng=i[0],t.lat=i[1]}else this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0);const o=i||[t.lng,t.lat];if(void 0===this.currentId||0===this.currentCoordinate)return;const s=this.store.getGeometryCopy(this.currentId).coordinates;if(s.pop(),this.closingPointId){const[e,i]=s[s.length-1],{x:o,y:n}=this.project(e,i);R({x:o,y:n},{x:t.containerX,y:t.containerY})<this.pointerDistance&&this.setCursor(this.cursors.close)}let r=[...s,o];if(this.insertCoordinates&&this.currentId&&this.lastCommitedCoordinates){const t=this.lastCommitedCoordinates[this.lastCommitedCoordinates.length-1],e=o;if(!dt(t,e)){const i=this.generateInsertCoordinates(t,e);r=[...this.lastCommitedCoordinates.slice(0,-1),...i,o]}}this.updateGeometries(r,void 0,e.Provisional)}onRightClick(t){if(!this.editable||\"started\"!==this.state)return;const{featureId:i,featureCoordinateIndex:o}=this.coordinateSnapping.getSnappable(t,t=>this.lineStringFilter(t));if(!i||void 0===o)return;const s=this.store.getGeometryCopy(i);let n;if(\"LineString\"===s.type&&(n=s.coordinates,!(n.length<=2))){if(n.splice(o,1),this.validate&&!this.validate({id:i,type:\"Feature\",geometry:s,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Commit}).valid)return;this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:i,geometry:s}]),this.onFinish(i,{mode:this.mode,action:\"edit\"})}}onLeftClick(t){this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0);const e=this.snapCoordinate(t)||[t.lng,t.lat];0===this.currentCoordinate?this.createLine(e):1===this.currentCoordinate&&this.currentId?this.firstUpdateToLine(e):this.currentId&&this.updateToLine(e,{x:t.containerX,y:t.containerY})}onClick(t){this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,\"right\"===t.button?this.onRightClick(t):\"left\"===t.button&&this.onLeftClick(t)}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel&&this.cleanUp(),t.key===this.keyEvents.finish&&this.close()}onDragStart(t,e){if(!this.editable)return;let i;if(\"started\"===this.state){const e=this.lineSnapping.getSnappable(t,t=>this.lineStringFilter(t));e.coordinate&&(this.editedSnapType=\"line\",this.editedFeatureCoordinateIndex=e.featureCoordinateIndex,this.editedFeatureId=e.featureId,i=e.coordinate);const o=this.coordinateSnapping.getSnappable(t,t=>this.lineStringFilter(t));o.coordinate&&(this.editedSnapType=\"coordinate\",this.editedFeatureCoordinateIndex=o.featureCoordinateIndex,this.editedFeatureId=o.featureId,i=o.coordinate)}if(this.editedFeatureId&&i){if(!this.editedPointId){const[t]=this.store.create([{geometry:{type:\"Point\",coordinates:i},properties:{mode:this.mode,[o]:!0}}]);this.editedPointId=t}this.setCursor(this.cursors.dragStart),e(!1)}}onDrag(t,i){if(void 0===this.editedFeatureId||void 0===this.editedFeatureCoordinateIndex)return;const s=this.store.getGeometryCopy(this.editedFeatureId);\"coordinate\"===this.editedSnapType||\"line\"===this.editedSnapType&&void 0!==this.editedInsertIndex?s.coordinates[this.editedFeatureCoordinateIndex]=[t.lng,t.lat]:\"line\"===this.editedSnapType&&void 0===this.editedInsertIndex&&(this.editedInsertIndex=this.editedFeatureCoordinateIndex+1,s.coordinates.splice(this.editedInsertIndex,0,[t.lng,t.lat]),this.editedFeatureCoordinateIndex++);const n={type:\"LineString\",coordinates:s.coordinates};this.validate&&!this.validate({type:\"Feature\",geometry:n,properties:this.store.getPropertiesCopy(this.editedFeatureId)},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Provisional}).valid||(this.snapping&&this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:this.editedFeatureId,geometry:n}]),this.editedPointId&&this.store.updateGeometry([{id:this.editedPointId,geometry:{type:\"Point\",coordinates:[t.lng,t.lat]}}]),this.store.updateProperty([{id:this.editedFeatureId,property:o,value:!0}]),i(!0))}onDragEnd(t,e){void 0!==this.editedFeatureId&&(this.setCursor(this.cursors.dragEnd),this.editedPointId&&(this.store.delete([this.editedPointId]),this.editedPointId=void 0),this.store.updateProperty([{id:this.editedFeatureId,property:o,value:!1}]),this.onFinish(this.editedFeatureId,{mode:this.mode,action:\"edit\"}),this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedInsertIndex=void 0,this.editedSnapType=void 0,e(!0))}cleanUp(){const t=this.currentId,e=this.closingPointId,i=this.snappedPointId;this.closingPointId=void 0,this.snappedPointId=void 0,this.currentId=void 0,this.currentCoordinate=0,\"drawing\"===this.state&&this.setStarted();try{void 0!==t&&this.store.delete([t]),void 0!==i&&this.store.delete([i]),void 0!==e&&this.store.delete([e])}catch(t){}}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});if(\"Feature\"===e.type&&\"LineString\"===e.geometry.type&&e.properties.mode===this.mode)return i.lineStringColor=this.getHexColorStylingValue(this.styles.lineStringColor,i.lineStringColor,e),i.lineStringWidth=this.getNumericStylingValue(this.styles.lineStringWidth,i.lineStringWidth,e),i.zIndex=10,i;if(\"Feature\"===e.type&&\"Point\"===e.geometry.type&&e.properties.mode===this.mode){const t=e.properties[s];return i.pointColor=this.getHexColorStylingValue(t?this.styles.closingPointColor:this.styles.snappingPointColor,i.pointColor,e),i.pointWidth=this.getNumericStylingValue(t?this.styles.closingPointWidth:this.styles.snappingPointWidth,i.pointWidth,e),i.pointOutlineColor=this.getHexColorStylingValue(t?this.styles.closingPointOutlineColor:this.styles.snappingPointOutlineColor,\"#ffffff\",e),i.pointOutlineWidth=this.getNumericStylingValue(t?this.styles.closingPointOutlineWidth:this.styles.snappingPointOutlineWidth,2,e),i.zIndex=40,i}return i}validateFeature(t){return this.validateModeFeature(t,t=>ht(t,this.coordinatePrecision))}lineStringFilter(t){return Boolean(\"LineString\"===t.geometry.type&&t.properties&&t.properties.mode===this.mode)}snapCoordinate(t){var e,i;let o;return null!=(e=this.snapping)&&e.toCoordinate&&(o=this.currentId?this.coordinateSnapping.getSnappableCoordinate(t,this.currentId):this.coordinateSnapping.getSnappableCoordinateFirstClick(t)),null!=(i=this.snapping)&&i.toCustom&&(o=this.snapping.toCustom(t)),o}}const Pt=\"Feature is not a Point\",It=\"Feature has invalid coordinates\",xt=\"Feature has coordinates with excessive precision\";function St(t,e){return\"Point\"!==t.geometry.type?{valid:!1,reason:Pt}:_(t.geometry.coordinates)?O(t.geometry.coordinates,e)?{valid:!0}:{valid:!1,reason:xt}:{valid:!1,reason:It}}const Mt={create:\"crosshair\",dragStart:\"grabbing\",dragEnd:\"crosshair\"};class Ft extends g{constructor(t){super(t,!0),this.mode=\"point\",this.cursors=Mt,this.editable=!1,this.editedFeatureId=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors)),null!=e&&e.editable&&(this.editable=e.editable)}start(){this.setStarted(),this.setCursor(this.cursors.create)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onClick(t){if(!this.store)throw new Error(\"Mode must be registered first\");\"right\"===t.button?this.onRightClick(t):\"left\"===t.button&&this.onLeftClick(t)}onMouseMove(){}onKeyDown(){}onKeyUp(){}cleanUp(){this.editedFeatureId=void 0}onDragStart(t,e){if(this.editable){const e=this.getNearestPointFeature(t);this.editedFeatureId=null==e?void 0:e.id}this.editedFeatureId&&(this.setCursor(this.cursors.dragStart),e(!1))}onDrag(t,i){void 0!==this.editedFeatureId&&(this.validate&&!this.validate({type:\"Feature\",geometry:{type:\"Point\",coordinates:[t.lng,t.lat]},properties:this.store.getPropertiesCopy(this.editedFeatureId)},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Finish}).valid||(this.store.updateGeometry([{id:this.editedFeatureId,geometry:{type:\"Point\",coordinates:[t.lng,t.lat]}}]),this.store.updateProperty([{id:this.editedFeatureId,property:o,value:!0}]),i(!0)))}onDragEnd(t,e){void 0!==this.editedFeatureId&&(this.onFinish(this.editedFeatureId,{mode:this.mode,action:\"edit\"}),this.setCursor(this.cursors.dragEnd),this.store.updateProperty([{id:this.editedFeatureId,property:o,value:!1}]),this.editedFeatureId=void 0,e(!0))}registerBehaviors(t){this.pixelDistance=new Z(t),this.clickBoundingBox=new $(t)}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});if(\"Feature\"===e.type&&\"Point\"===e.geometry.type&&e.properties.mode===this.mode){const t=Boolean(e.id&&this.editedFeatureId===e.id);i.pointWidth=this.getNumericStylingValue(t?this.styles.editedPointWidth:this.styles.pointWidth,i.pointWidth,e),i.pointColor=this.getHexColorStylingValue(t?this.styles.editedPointColor:this.styles.pointColor,i.pointColor,e),i.pointOutlineColor=this.getHexColorStylingValue(t?this.styles.editedPointOutlineColor:this.styles.pointOutlineColor,i.pointOutlineColor,e),i.pointOutlineWidth=this.getNumericStylingValue(t?this.styles.editedPointOutlineWidth:this.styles.pointOutlineWidth,2,e),i.zIndex=30}return i}validateFeature(t){return this.validateModeFeature(t,t=>St(t,this.coordinatePrecision))}onLeftClick(t){const i={type:\"Point\",coordinates:[t.lng,t.lat]},o={mode:this.mode};if(this.validate&&!this.validate({type:\"Feature\",geometry:i,properties:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Finish}).valid)return;const[s]=this.store.create([{geometry:i,properties:o}]);this.onFinish(s,{mode:this.mode,action:\"draw\"})}onRightClick(t){if(!this.editable)return;const e=this.getNearestPointFeature(t);e&&this.store.delete([e.id])}getNearestPointFeature(t){const e=this.clickBoundingBox.create(t),i=this.store.search(e);let o,s=Infinity;for(let e=0;e<i.length;e++){const n=i[e];if(\"Point\"!==n.geometry.type||n.properties.mode!==this.mode)continue;const r=this.pixelDistance.measure(t,n.geometry.coordinates);r>s||r>this.pointerDistance||(s=r,o=n)}return o}}class Et extends H{constructor(t,e){super(t),this.config=void 0,this.pixelDistance=void 0,this._startEndPoints=[],this.config=t,this.pixelDistance=e}get ids(){return this._startEndPoints.concat()}set ids(t){}create(t,e){if(this.ids.length)throw new Error(\"Opening and closing points already created\");if(t.length<=3)throw new Error(\"Requires at least 4 coordinates\");this._startEndPoints=this.store.create([{geometry:{type:\"Point\",coordinates:t[0]},properties:{mode:e,[s]:!0}},{geometry:{type:\"Point\",coordinates:t[t.length-2]},properties:{mode:e,[s]:!0}}])}delete(){this.ids.length&&(this.store.delete(this.ids),this._startEndPoints=[])}update(t){if(2!==this.ids.length)throw new Error(\"No closing points to update\");this.store.updateGeometry([{id:this.ids[0],geometry:{type:\"Point\",coordinates:t[0]}},{id:this.ids[1],geometry:{type:\"Point\",coordinates:t[t.length-3]}}])}isClosingPoint(t){const e=this.store.getGeometryCopy(this.ids[0]),i=this.store.getGeometryCopy(this.ids[1]),o=this.pixelDistance.measure(t,e.coordinates),s=this.pixelDistance.measure(t,i.coordinates);return{isClosing:o<this.pointerDistance,isPreviousClosing:s<this.pointerDistance}}}class Dt extends H{constructor(t){super(t)}createOrUpdate(t){const e=this.store.getGeometryCopy(t),i=this.store.getPropertiesCopy(t);let o;if(\"Polygon\"===e.type)o=e.coordinates[0].slice(0,-1);else{if(\"LineString\"!==e.type)return;o=e.coordinates}const s=this.store.getPropertiesCopy(t),n=s.coordinatePointIds;if(n)if(n&&n.every(t=>this.store.has(t))){const e=s.coordinatePointIds,n=e.map(t=>this.store.getGeometryCopy(t).coordinates);if(e.length!==o.length){this.deleteCoordinatePoints(e);const s=this.createPoints(o,i.mode);this.setFeatureCoordinatePoints(t,s)}else o.forEach((t,i)=>{t[0]===n[i][0]&&t[1]===n[i][1]||this.store.updateGeometry([{id:e[i],geometry:{type:\"Point\",coordinates:t}}])})}else{const e=n.filter(t=>this.store.has(t));e.length&&this.deleteCoordinatePoints(e);const s=this.createPoints(o,i.mode);this.setFeatureCoordinatePoints(t,s)}else{const e=this.createPoints(o,i.mode);this.setFeatureCoordinatePoints(t,e)}}deletePointsByFeatureIds(t){for(const e of t)this.deleteIfPresent(e)}getUpdated(e,i){const o=this.store.getPropertiesCopy(e);if(o.coordinatePointIds)return o.coordinatePointIds.map((e,o)=>({id:e,geometry:t({},this.store.getGeometryCopy(e),{coordinates:i[o]})}))}createPoints(t,e){return this.store.create(t.map(t=>({geometry:{type:\"Point\",coordinates:t},properties:{mode:e,[r]:!0}})))}setFeatureCoordinatePoints(t,e){this.store.updateProperty([{id:t,property:a,value:e}])}deleteCoordinatePoints(t){const e=t.filter(t=>this.store.has(t));this.store.delete(e)}deleteIfPresent(t){const e=this.store.getPropertiesCopy(t).coordinatePointIds;e&&(this.deleteCoordinatePoints(e),this.setFeatureCoordinatePoints(t,null))}}const wt={cancel:\"Escape\",finish:\"Enter\"},bt={start:\"crosshair\",close:\"pointer\",dragStart:\"grabbing\",dragEnd:\"crosshair\"};class kt extends g{constructor(t){super(t,!0),this.mode=\"polygon\",this.currentCoordinate=0,this.currentId=void 0,this.keyEvents=wt,this.cursors=bt,this.mouseMove=!1,this.showCoordinatePoints=!1,this.snapping=void 0,this.snappedPointId=void 0,this.editable=!1,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedSnapType=void 0,this.editedInsertIndex=void 0,this.editedPointId=void 0,this.coordinatePoints=void 0,this.lineSnapping=void 0,this.coordinateSnapping=void 0,this.pixelDistance=void 0,this.closingPoints=void 0,this.clickBoundingBox=void 0,this.updateOptions(t)}updateOptions(e){if(super.updateOptions(e),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents)),null!=e&&e.snapping&&(this.snapping=e.snapping),void 0!==(null==e?void 0:e.editable)&&(this.editable=e.editable),void 0!==(null==e?void 0:e.showCoordinatePoints))if(this.showCoordinatePoints=e.showCoordinatePoints,this.coordinatePoints&&!0===e.showCoordinatePoints)this.store.copyAllWhere(t=>t.mode===this.mode).map(t=>t.id).forEach(t=>{this.coordinatePoints.createOrUpdate(t)});else if(this.coordinatePoints&&!1===this.showCoordinatePoints){const t=this.store.copyAllWhere(t=>t.mode===this.mode&&Boolean(t[a]));this.coordinatePoints.deletePointsByFeatureIds(t.map(t=>t.id))}}close(){if(void 0===this.currentId)return;const t=this.store.getGeometryCopy(this.currentId).coordinates[0];if(t.length<5)return;if(!this.updatePolygonGeometry([...t.slice(0,-2),t[0]],e.Finish))return;const i=this.currentId;if(this.currentId){const t=K(this.store.getGeometryCopy(this.currentId));t&&this.store.updateGeometry([{id:this.currentId,geometry:t}])}this.snappedPointId&&this.store.delete([this.snappedPointId]),this.currentCoordinate=0,this.currentId=void 0,this.snappedPointId=void 0,this.closingPoints.delete(),\"drawing\"===this.state&&this.setStarted(),this.onFinish(i,{mode:this.mode,action:\"draw\"})}registerBehaviors(t){this.clickBoundingBox=new $(t),this.pixelDistance=new Z(t),this.lineSnapping=new mt(t,this.pixelDistance,this.clickBoundingBox),this.coordinateSnapping=new J(t,this.pixelDistance,this.clickBoundingBox),this.closingPoints=new Et(t,this.pixelDistance),this.coordinatePoints=new Dt(t)}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onMouseMove(t){this.mouseMove=!0,this.setCursor(this.cursors.start);const i=this.snapCoordinate(t);if(i){if(this.snappedPointId)this.store.updateGeometry([{id:this.snappedPointId,geometry:{type:\"Point\",coordinates:i}}]);else{const[t]=this.store.create([{geometry:{type:\"Point\",coordinates:i},properties:{mode:this.mode,[n]:!0}}]);this.snappedPointId=t}t.lng=i[0],t.lat=i[1]}else this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0);if(void 0===this.currentId||0===this.currentCoordinate)return;const o=this.store.getGeometryCopy(this.currentId).coordinates[0];let s;if(1===this.currentCoordinate){const e=1/Math.pow(10,this.coordinatePrecision-1),i=Math.max(1e-6,e);s=[o[0],[t.lng,t.lat],[t.lng,t.lat-i],o[0]]}else if(2===this.currentCoordinate)s=[o[0],o[1],[t.lng,t.lat],o[0]];else{const{isClosing:e,isPreviousClosing:i}=this.closingPoints.isClosingPoint(t);i||e?(this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.setCursor(this.cursors.close),s=[...o.slice(0,-2),o[0],o[0]]):s=[...o.slice(0,-2),[t.lng,t.lat],o[0]]}this.updatePolygonGeometry(s,e.Provisional)}updatePolygonGeometry(t,e){if(!this.currentId)return!1;const i={type:\"Polygon\",coordinates:[t]};return!(this.validate&&!this.validate({type:\"Feature\",geometry:i},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e}).valid||(this.store.updateGeometry([{id:this.currentId,geometry:i}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(this.currentId),0))}snapCoordinate(t){var e,i,o;let s;if(null!=(e=this.snapping)&&e.toLine){let e;e=this.currentId?this.lineSnapping.getSnappableCoordinate(t,this.currentId):this.lineSnapping.getSnappableCoordinateFirstClick(t),e&&(s=e)}if(null!=(i=this.snapping)&&i.toCoordinate){let e;e=this.currentId?this.coordinateSnapping.getSnappableCoordinate(t,this.currentId):this.coordinateSnapping.getSnappableCoordinateFirstClick(t),e&&(s=e)}return null!=(o=this.snapping)&&o.toCustom&&(s=this.snapping.toCustom(t,{currentCoordinate:this.currentCoordinate,currentId:this.currentId,getCurrentGeometrySnapshot:this.currentId?()=>this.store.getGeometryCopy(this.currentId):()=>null,project:this.project,unproject:this.unproject})),s}polygonFilter(t){return Boolean(\"Polygon\"===t.geometry.type&&t.properties&&t.properties.mode===this.mode)}onRightClick(t){if(!this.editable)return;const{featureId:i,featureCoordinateIndex:o}=this.coordinateSnapping.getSnappable(t,t=>this.polygonFilter(t));if(!i||void 0===o)return;const s=this.store.getGeometryCopy(i);let n;\"Polygon\"===s.type&&(n=s.coordinates[0],n.length<=4||(\"Polygon\"!==s.type||0!==o&&o!==n.length-1?n.splice(o,1):(n.shift(),n.pop(),n.push([n[0][0],n[0][1]])),(!this.validate||this.validate({id:i,type:\"Feature\",geometry:s,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Commit}).valid)&&(this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:i,geometry:s}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(i),this.onFinish(i,{mode:this.mode,action:\"edit\"}))))}onLeftClick(t){if(this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),0===this.currentCoordinate){const e=this.snapCoordinate(t);e&&(t.lng=e[0],t.lat=e[1]);const[i]=this.store.create([{geometry:{type:\"Polygon\",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode}}]);this.currentId=i,this.currentCoordinate++,this.setDrawing()}else if(1===this.currentCoordinate&&this.currentId){const i=this.snapCoordinate(t);i&&(t.lng=i[0],t.lat=i[1]);const o=this.store.getGeometryCopy(this.currentId);if(dt([t.lng,t.lat],o.coordinates[0][0]))return;if(!this.updatePolygonGeometry([o.coordinates[0][0],[t.lng,t.lat],[t.lng,t.lat],o.coordinates[0][0]],e.Commit))return;this.currentCoordinate++}else if(2===this.currentCoordinate&&this.currentId){const i=this.snapCoordinate(t);i&&(t.lng=i[0],t.lat=i[1]);const o=this.store.getGeometryCopy(this.currentId).coordinates[0];if(dt([t.lng,t.lat],o[1]))return;if(!this.updatePolygonGeometry([o[0],o[1],[t.lng,t.lat],[t.lng,t.lat],o[0]],e.Commit))return;2===this.currentCoordinate&&this.closingPoints.create(o,\"polygon\"),this.currentCoordinate++}else if(this.currentId){const i=this.store.getGeometryCopy(this.currentId).coordinates[0],{isClosing:o,isPreviousClosing:s}=this.closingPoints.isClosingPoint(t);if(s||o)this.close();else{const o=this.snapCoordinate(t);if(o&&(t.lng=o[0],t.lat=o[1]),dt([t.lng,t.lat],i[this.currentCoordinate-1]))return;const s=function(t=[[[0,0],[0,1],[1,1],[1,0],[0,0]]]){return{type:\"Feature\",geometry:{type:\"Polygon\",coordinates:t},properties:{}}}([[...i.slice(0,-1),[t.lng,t.lat],i[0]]]);if(!this.updatePolygonGeometry(s.geometry.coordinates[0],e.Commit))return;this.currentCoordinate++,this.closingPoints.ids.length&&this.closingPoints.update(s.geometry.coordinates[0])}}}onClick(t){this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,\"right\"!==t.button?\"left\"!==t.button||this.onLeftClick(t):this.onRightClick(t)}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onKeyDown(){}onDragStart(t,e){if(!this.editable)return;let i;if(\"started\"===this.state){const e=this.lineSnapping.getSnappable(t,t=>this.polygonFilter(t));e.coordinate&&(this.editedSnapType=\"line\",this.editedFeatureCoordinateIndex=e.featureCoordinateIndex,this.editedFeatureId=e.featureId,i=e.coordinate);const o=this.coordinateSnapping.getSnappable(t,t=>this.polygonFilter(t));o.coordinate&&(this.editedSnapType=\"coordinate\",this.editedFeatureCoordinateIndex=o.featureCoordinateIndex,this.editedFeatureId=o.featureId,i=o.coordinate)}if(this.editedFeatureId&&i){if(!this.editedPointId){const[t]=this.store.create([{geometry:{type:\"Point\",coordinates:i},properties:{mode:this.mode,[o]:!0}}]);this.editedPointId=t}this.setCursor(this.cursors.dragStart),e(!1)}}onDrag(t,i){if(void 0===this.editedFeatureId||void 0===this.editedFeatureCoordinateIndex)return;const s=this.store.getGeometryCopy(this.editedFeatureId),n=s.coordinates[0];\"coordinate\"===this.editedSnapType||\"line\"===this.editedSnapType&&void 0!==this.editedInsertIndex?0===this.editedFeatureCoordinateIndex||this.editedFeatureCoordinateIndex===s.coordinates[0].length-1?(n[0]=[t.lng,t.lat],n[n.length-1]=[t.lng,t.lat]):n[this.editedFeatureCoordinateIndex]=[t.lng,t.lat]:\"line\"===this.editedSnapType&&void 0===this.editedInsertIndex&&(this.editedInsertIndex=this.editedFeatureCoordinateIndex+1,s.coordinates[0].splice(this.editedInsertIndex,0,[t.lng,t.lat]),this.editedFeatureCoordinateIndex++);const r={type:\"Polygon\",coordinates:s.coordinates};this.validate&&!this.validate({type:\"Feature\",geometry:r,properties:this.store.getPropertiesCopy(this.editedFeatureId)},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Provisional}).valid||(this.snapping&&this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:this.editedFeatureId,geometry:r}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(this.editedFeatureId),this.editedPointId&&this.store.updateGeometry([{id:this.editedPointId,geometry:{type:\"Point\",coordinates:[t.lng,t.lat]}}]),this.store.updateProperty([{id:this.editedFeatureId,property:o,value:!0}]),i(!0))}onDragEnd(t,e){void 0!==this.editedFeatureId&&(this.setCursor(this.cursors.dragEnd),this.editedPointId&&(this.store.delete([this.editedPointId]),this.editedPointId=void 0),this.store.updateProperty([{id:this.editedFeatureId,property:o,value:!1}]),this.onFinish(this.editedFeatureId,{mode:this.mode,action:\"edit\"}),this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedInsertIndex=void 0,this.editedSnapType=void 0,e(!0))}cleanUp(){const t=this.currentId,e=this.snappedPointId,i=this.editedPointId;this.currentId=void 0,this.snappedPointId=void 0,this.editedPointId=void 0,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedInsertIndex=void 0,this.editedSnapType=void 0,this.currentCoordinate=0,\"drawing\"===this.state&&this.setStarted();try{t&&this.coordinatePoints.deletePointsByFeatureIds([t]),void 0!==t&&this.store.delete([t]),void 0!==i&&this.store.delete([i]),void 0!==e&&this.store.delete([e]),this.closingPoints.ids.length&&this.closingPoints.delete()}catch(t){}}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});if(e.properties.mode===this.mode){if(\"Polygon\"===e.geometry.type)return i.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,i.polygonFillColor,e),i.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,i.polygonOutlineColor,e),i.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,i.polygonOutlineWidth,e),i.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,i.polygonFillOpacity,e),i.zIndex=10,i;if(\"Point\"===e.geometry.type){const t=e.properties[o],a=e.properties[r],d=t?\"editedPoint\":e.properties[s]?\"closingPoint\":e.properties[n]?\"snappingPoint\":a?\"coordinatePoint\":void 0;if(!d)return i;const h={editedPoint:{width:this.styles.editedPointOutlineWidth,color:this.styles.editedPointColor,outlineColor:this.styles.editedPointOutlineColor,outlineWidth:this.styles.editedPointOutlineWidth},closingPoint:{width:this.styles.closingPointWidth,color:this.styles.closingPointColor,outlineColor:this.styles.closingPointOutlineColor,outlineWidth:this.styles.closingPointOutlineWidth},snappingPoint:{width:this.styles.snappingPointWidth,color:this.styles.snappingPointColor,outlineColor:this.styles.snappingPointOutlineColor,outlineWidth:this.styles.snappingPointOutlineWidth},coordinatePoint:{width:this.styles.coordinatePointWidth,color:this.styles.coordinatePointColor,outlineColor:this.styles.coordinatePointOutlineColor,outlineWidth:this.styles.coordinatePointOutlineWidth}};return i.pointWidth=this.getNumericStylingValue(h[d].width,i.pointWidth,e),i.pointColor=this.getHexColorStylingValue(h[d].color,i.pointColor,e),i.pointOutlineColor=this.getHexColorStylingValue(h[d].outlineColor,i.pointOutlineColor,e),i.pointOutlineWidth=this.getNumericStylingValue(h[d].outlineWidth,2,e),i.zIndex=t?35:a?25:30,i}}return i}afterFeatureAdded(t){this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(t.id)}validateFeature(t){return this.validateModeFeature(t,t=>L(t,this.coordinatePrecision))}}const Ot={cancel:\"Escape\",finish:\"Enter\"},_t={start:\"crosshair\"};class jt extends g{constructor(t){super(t,!0),this.mode=\"rectangle\",this.center=void 0,this.clickCount=0,this.currentRectangleId=void 0,this.keyEvents=Ot,this.cursors=_t,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents))}updateRectangle(t,e){if(1===this.clickCount&&this.center&&this.currentRectangleId){const i=this.store.getGeometryCopy(this.currentRectangleId).coordinates[0][0],o={type:\"Polygon\",coordinates:[[i,[t.lng,i[1]],[t.lng,t.lat],[i[0],t.lat],i]]};if(this.validate&&!this.validate({id:this.currentRectangleId,geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e}).valid)return;this.store.updateGeometry([{id:this.currentRectangleId,geometry:o}])}}close(){const t=this.currentRectangleId;if(t){const e=K(this.store.getGeometryCopy(t));e&&this.store.updateGeometry([{id:t,geometry:e}])}this.center=void 0,this.currentRectangleId=void 0,this.clickCount=0,\"drawing\"===this.state&&this.setStarted(),void 0!==t&&this.onFinish(t,{mode:this.mode,action:\"draw\"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onClick(t){if(0===this.clickCount){this.center=[t.lng,t.lat];const[e]=this.store.create([{geometry:{type:\"Polygon\",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode}}]);this.currentRectangleId=e,this.clickCount++,this.setDrawing()}else this.updateRectangle(t,e.Finish),this.close()}onMouseMove(t){this.updateRectangle(t,e.Provisional)}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){const t=this.currentRectangleId;this.center=void 0,this.currentRectangleId=void 0,this.clickCount=0,\"drawing\"===this.state&&this.setStarted(),void 0!==t&&this.store.delete([t])}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});return\"Feature\"===e.type&&\"Polygon\"===e.geometry.type&&e.properties.mode===this.mode?(i.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,i.polygonFillColor,e),i.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,i.polygonOutlineColor,e),i.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,i.polygonOutlineWidth,e),i.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,i.polygonFillOpacity,e),i.zIndex=10,i):i}validateFeature(t){return this.validateModeFeature(t,t=>V(t,this.coordinatePrecision))}}class Wt extends g{constructor(t){if(!t.modeName)throw new Error(\"Mode name is required for TerraDrawRenderMode\");super(t,!0),this.type=p.Render,this.mode=\"render\",this.updateOptions(t)}updateOptions(t){super.updateOptions(t),null!=t&&t.modeName&&(this.mode=t.modeName)}registerBehaviors(t){this.mode=t.mode}start(){this.setStarted()}stop(){this.setStopped()}onKeyUp(){}onKeyDown(){}onClick(){}onDragStart(){}onDrag(){}onDragEnd(){}onMouseMove(){}cleanUp(){}styleFeature(t){return{pointColor:this.getHexColorStylingValue(this.styles.pointColor,\"#3f97e0\",t),pointWidth:this.getNumericStylingValue(this.styles.pointWidth,6,t),pointOutlineColor:this.getHexColorStylingValue(this.styles.pointOutlineColor,\"#ffffff\",t),pointOutlineWidth:this.getNumericStylingValue(this.styles.pointOutlineWidth,0,t),polygonFillColor:this.getHexColorStylingValue(this.styles.polygonFillColor,\"#3f97e0\",t),polygonFillOpacity:this.getNumericStylingValue(this.styles.polygonFillOpacity,.3,t),polygonOutlineColor:this.getHexColorStylingValue(this.styles.polygonOutlineColor,\"#3f97e0\",t),polygonOutlineWidth:this.getNumericStylingValue(this.styles.polygonOutlineWidth,4,t),lineStringWidth:this.getNumericStylingValue(this.styles.lineStringWidth,4,t),lineStringColor:this.getHexColorStylingValue(this.styles.lineStringColor,\"#3f97e0\",t),zIndex:this.getNumericStylingValue(this.styles.zIndex,0,t)}}validateFeature(t){const e=super.validateFeature(t);if(e.valid){const e=t,i=St(e,this.coordinatePrecision).valid||L(e,this.coordinatePrecision).valid||ht(e,this.coordinatePrecision).valid;return i?{valid:!0}:{valid:i,reason:\"Feature is not a valid Point, Polygon or LineString feature\"}}return e}}function Bt(t,e){const i=t,o=e,s=C(i[1]),n=C(o[1]);let r=C(o[0]-i[0]);r>Math.PI&&(r-=2*Math.PI),r<-Math.PI&&(r+=2*Math.PI);const a=Math.log(Math.tan(n/2+Math.PI/4)/Math.tan(s/2+Math.PI/4)),d=(P(Math.atan2(r,a))+360)%360;return d>180?-(360-d):d}function Nt(t,e,i){let o=e;e<0&&(o=-Math.abs(o));const s=o/f,n=t[0]*Math.PI/180,r=C(t[1]),a=C(i),d=s*Math.cos(a);let h=r+d;Math.abs(h)>Math.PI/2&&(h=h>0?Math.PI-h:-Math.PI-h);const l=Math.log(Math.tan(h/2+Math.PI/4)/Math.tan(r/2+Math.PI/4)),c=Math.abs(l)>1e-11?d/l:Math.cos(r),u=[(180*(n+s*Math.sin(a)/c)/Math.PI+540)%360-180,180*h/Math.PI];return u[0]+=u[0]-t[0]>180?-360:t[0]-u[0]>180?360:0,u}function Gt(t,e,i,o,s){const n=o(t[0],t[1]),r=o(e[0],e[1]),{lng:a,lat:d}=s((n.x+r.x)/2,(n.y+r.y)/2);return[I(a,i),I(d,i)]}function Lt(t,e,i){const o=Nt(t,1e3*m(t,e)/2,Bt(t,e));return[I(o[0],i),I(o[1],i)]}function Vt({featureCoords:t,precision:e,unproject:i,project:o,projection:s}){const n=[];for(let r=0;r<t.length-1;r++){let a;if(\"web-mercator\"===s)a=Gt(t[r],t[r+1],e,o,i);else{if(\"globe\"!==s)throw new Error(\"Invalid projection\");a=Lt(t[r],t[r+1],e)}n.push(a)}return n}class Tt extends H{constructor(t,e,i){super(t),this.config=void 0,this.selectionPointBehavior=void 0,this.coordinatePointBehavior=void 0,this._midPoints=[],this.config=t,this.selectionPointBehavior=e,this.coordinatePointBehavior=i}get ids(){return this._midPoints.concat()}set ids(t){}insert(t,e,i){const o=this.store.getGeometryCopy(e),{midPointFeatureId:s,midPointSegment:n}=this.store.getPropertiesCopy(e),r=this.store.getGeometryCopy(s),d=\"Polygon\"===r.type?r.coordinates[0]:r.coordinates;d.splice(n+1,0,o.coordinates),r.coordinates=\"Polygon\"===r.type?[d]:d,this.store.updateGeometry([{id:s,geometry:r}]),this.store.getPropertiesCopy(t)[a]&&this.coordinatePointBehavior.createOrUpdate(t),this.store.delete([...this._midPoints,...this.selectionPointBehavior.ids]),this.create(d,s,i),this.selectionPointBehavior.create(d,r.type,s)}create(t,e,o){if(!this.store.has(e))throw new Error(\"Store does not have feature with this id\");this._midPoints=this.store.create(function(t,e,i,o,s,n){return Vt({featureCoords:t,precision:i,project:o,unproject:s,projection:n}).map((t,i)=>({geometry:{type:\"Point\",coordinates:t},properties:e(i)}))}(t,t=>({mode:this.mode,[i.MID_POINT]:!0,midPointSegment:t,midPointFeatureId:e}),o,this.config.project,this.config.unproject,this.projection))}delete(){this._midPoints.length&&(this.store.delete(this._midPoints),this._midPoints=[])}getUpdated(t){if(0!==this._midPoints.length)return Vt({featureCoords:t,precision:this.coordinatePrecision,project:this.config.project,unproject:this.config.unproject,projection:this.config.projection}).map((t,e)=>({id:this._midPoints[e],geometry:{type:\"Point\",coordinates:t}}))}}class Ut extends H{constructor(t){super(t),this._selectionPoints=[]}get ids(){return this._selectionPoints.concat()}set ids(t){}create(t,e,i){this._selectionPoints=this.store.create(function(t,e,i){const o=[],s=\"Polygon\"===e?t.length-1:t.length;for(let e=0;e<s;e++)o.push({geometry:{type:\"Point\",coordinates:t[e]},properties:i(e)});return o}(t,e,t=>({mode:this.mode,selectionPoint:!0,selectionPointFeatureId:i,index:t})))}delete(){this.ids.length&&(this.store.delete(this.ids),this._selectionPoints=[])}getUpdated(t){if(0!==this._selectionPoints.length)return this._selectionPoints.map((e,i)=>({id:e,geometry:{type:\"Point\",coordinates:t[i]}}))}getOneUpdated(t,e){if(void 0!==this._selectionPoints[t])return{id:this._selectionPoints[t],geometry:{type:\"Point\",coordinates:e}}}}function At(t,e){let i=!1;for(let r=0,a=e.length;r<a;r++){const a=e[r];for(let e=0,r=a.length,d=r-1;e<r;d=e++)(s=a[e])[1]>(o=t)[1]!=(n=a[d])[1]>o[1]&&o[0]<(n[0]-s[0])*(o[1]-s[1])/(n[1]-s[1])+s[0]&&(i=!i)}var o,s,n;return i}const Rt=(t,e,i)=>{const o=t=>t*t,s=(t,e)=>o(t.x-e.x)+o(t.y-e.y);return Math.sqrt(((t,e,i)=>{const o=s(e,i);if(0===o)return s(t,e);let n=((t.x-e.x)*(i.x-e.x)+(t.y-e.y)*(i.y-e.y))/o;return n=Math.max(0,Math.min(1,n)),s(t,{x:e.x+n*(i.x-e.x),y:e.y+n*(i.y-e.y)})})(t,e,i))};class Kt extends H{constructor(t,e,i){super(t),this.config=void 0,this.createClickBoundingBox=void 0,this.pixelDistance=void 0,this.config=t,this.createClickBoundingBox=e,this.pixelDistance=i}find(t,e){let o,s,n,r,a=Infinity,d=Infinity,h=Infinity;const l=this.createClickBoundingBox.create(t),c=this.store.search(l);for(let l=0;l<c.length;l++){const u=c[l],p=u.geometry;if(\"Point\"===p.type){if(u.properties.selectionPoint||u.properties.coordinatePoint||!e&&u.properties[i.MID_POINT])continue;const s=this.pixelDistance.measure(t,p.coordinates);u.properties[i.MID_POINT]&&s<this.pointerDistance&&s<h?(h=s,n=u):!u.properties[i.MID_POINT]&&s<this.pointerDistance&&s<a&&(a=s,o=u)}else if(\"LineString\"===p.type){if(o)continue;for(let e=0;e<p.coordinates.length-1;e++){const i=p.coordinates[e],o=p.coordinates[e+1],n=Rt({x:t.containerX,y:t.containerY},this.project(i[0],i[1]),this.project(o[0],o[1]));n<this.pointerDistance&&n<d&&(d=n,s=u)}}else if(\"Polygon\"===p.type){if(o||s)continue;At([t.lng,t.lat],p.coordinates)&&(r=u)}}return{clickedFeature:o||s||r,clickedMidPoint:n}}}class Xt extends H{constructor(t,e,i,o,s){super(t),this.config=void 0,this.featuresAtCursorEvent=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.draggedFeatureId=null,this.dragPosition=void 0,this.config=t,this.featuresAtCursorEvent=e,this.selectionPoints=i,this.midPoints=o,this.coordinatePoints=s}startDragging(t,e){this.draggedFeatureId=e,this.dragPosition=[t.lng,t.lat]}stopDragging(){this.draggedFeatureId=null,this.dragPosition=void 0}isDragging(){return null!==this.draggedFeatureId}canDrag(t,e){const{clickedFeature:i}=this.featuresAtCursorEvent.find(t,!0);return!(!i||i.id!==e)}drag(t,i){if(!this.draggedFeatureId)return;const o=this.store.getGeometryCopy(this.draggedFeatureId),s=[t.lng,t.lat];if(\"Polygon\"===o.type||\"LineString\"===o.type){let n,r;if(\"Polygon\"===o.type?(n=o.coordinates[0],r=n.length-1):(n=o.coordinates,r=n.length),!this.dragPosition)return!1;for(let t=0;t<r;t++){const e=n[t];let i,o;if(\"web-mercator\"===this.config.projection){const t=F(this.dragPosition[0],this.dragPosition[1]),n=F(s[0],s[1]),r=F(e[0],e[1]),a={x:t.x-n.x,y:t.y-n.y},d=r.x-a.x,h=r.y-a.y,{lng:l,lat:c}=E(d,h);i=l,o=c}else{const t=[this.dragPosition[0]-s[0],this.dragPosition[1]-s[1]];i=e[0]-t[0],o=e[1]-t[1]}if(i=I(i,this.config.coordinatePrecision),o=I(o,this.config.coordinatePrecision),i>180||i<-180||o>90||o<-90)return!1;n[t]=[i,o]}\"Polygon\"===o.type&&(n[n.length-1]=[n[0][0],n[0][1]]);const a=this.selectionPoints.getUpdated(n)||[],d=this.midPoints.getUpdated(n)||[],h=this.coordinatePoints.getUpdated(this.draggedFeatureId,n)||[];if(i&&!i({type:\"Feature\",id:this.draggedFeatureId,geometry:o,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:e.Provisional}).valid)return!1;this.store.updateGeometry([{id:this.draggedFeatureId,geometry:o},...a,...d,...h]),this.dragPosition=[t.lng,t.lat]}else\"Point\"===o.type&&(this.store.updateGeometry([{id:this.draggedFeatureId,geometry:{type:\"Point\",coordinates:s}}]),this.dragPosition=[t.lng,t.lat])}}class zt extends H{constructor(t,e,i,o,s,n){super(t),this.config=void 0,this.pixelDistance=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.coordinateSnapping=void 0,this.draggedCoordinate={id:null,index:-1},this.config=t,this.pixelDistance=e,this.selectionPoints=i,this.midPoints=o,this.coordinatePoints=s,this.coordinateSnapping=n}getClosestCoordinate(t,e){const i={dist:Infinity,index:-1,isFirstOrLastPolygonCoord:!1};let o;if(\"LineString\"===e.type)o=e.coordinates;else{if(\"Polygon\"!==e.type)return i;o=e.coordinates[0]}for(let s=0;s<o.length;s++){const n=this.pixelDistance.measure(t,o[s]);if(n<this.pointerDistance&&n<i.dist){const t=\"Polygon\"===e.type&&(s===o.length-1||0===s);i.dist=n,i.index=t?0:s,i.isFirstOrLastPolygonCoord=t}}return i}getDraggableIndex(t,e){const i=this.store.getGeometryCopy(e),o=this.getClosestCoordinate(t,i);return-1===o.index?-1:o.index}drag(t,i,o,s){if(null===this.draggedCoordinate.id)return!1;const n=this.draggedCoordinate.index,r=this.store.getGeometryCopy(this.draggedCoordinate.id),a=this.store.getPropertiesCopy(this.draggedCoordinate.id),d=\"LineString\"===r.type?r.coordinates:r.coordinates[0],h=\"Polygon\"===r.type&&(n===d.length-1||0===n);let l=[t.lng,t.lat];if(s){let e;e=this.coordinateSnapping.getSnappable(t,t=>Boolean(t.properties&&t.properties.mode===a.mode&&t.id!==this.draggedCoordinate.id)).coordinate,e&&(l=e)}if(t.lng>180||t.lng<-180||t.lat>90||t.lat<-90)return!1;if(h){const t=d.length-1;d[0]=l,d[t]=l}else d[n]=l;const c=this.selectionPoints.getOneUpdated(n,l),u=c?[c]:[],p=this.midPoints.getUpdated(d)||[],g=this.coordinatePoints.getUpdated(this.draggedCoordinate.id,d)||[];return!(\"Point\"!==r.type&&!i&&b({type:\"Feature\",geometry:r,properties:{}})||o&&!o({type:\"Feature\",id:this.draggedCoordinate.id,geometry:r,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:e.Provisional}).valid||(this.store.updateGeometry([{id:this.draggedCoordinate.id,geometry:r},...u,...p,...g]),0))}isDragging(){return null!==this.draggedCoordinate.id}startDragging(t,e){this.draggedCoordinate={id:t,index:e}}stopDragging(){this.draggedCoordinate={id:null,index:-1}}}function Yt(t){let e=0,i=0,o=0;return(\"Polygon\"===t.geometry.type?t.geometry.coordinates[0].slice(0,-1):t.geometry.coordinates).forEach(t=>{e+=t[0],i+=t[1],o++},!0),[e/o,i/o]}function Ht(t,e){t[0]+=t[0]-e[0]>180?-360:e[0]-t[0]>180?360:0;const i=f,o=e[1]*Math.PI/180,s=t[1]*Math.PI/180,n=s-o;let r=Math.abs(t[0]-e[0])*Math.PI/180;r>Math.PI&&(r-=2*Math.PI);const a=Math.log(Math.tan(s/2+Math.PI/4)/Math.tan(o/2+Math.PI/4)),d=Math.abs(a)>1e-11?n/a:Math.cos(o);return Math.sqrt(n*n+d*d*r*r)*i}function qt(t){const e=(\"Polygon\"===t.geometry.type?t.geometry.coordinates[0]:t.geometry.coordinates).map(t=>{const{x:e,y:i}=F(t[0],t[1]);return[e,i]});return\"Polygon\"===t.geometry.type?function(t){let e=0,i=0,o=0;const s=t.length;for(let n=0;n<s-1;n++){const[s,r]=t[n],[a,d]=t[n+1],h=s*d-a*r;e+=h,i+=(s+a)*h,o+=(r+d)*h}return e/=2,i/=6*e,o/=6*e,{x:i,y:o}}(e):function(t){const e=t.length;let i=0,o=0;for(let s=0;s<e;s++){const[e,n]=t[s];i+=e,o+=n}return{x:i/e,y:o/e}}(e)}class $t extends H{constructor(t,e,i,o){super(t),this.config=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.lastBearing=void 0,this.config=t,this.selectionPoints=e,this.midPoints=i,this.coordinatePoints=o}reset(){this.lastBearing=void 0}rotate(t,i,o){const s=this.store.getGeometryCopy(i);if(\"Polygon\"!==s.type&&\"LineString\"!==s.type)return;const n=[t.lng,t.lat];let r;const a={type:\"Feature\",geometry:s,properties:{}};if(\"web-mercator\"===this.config.projection){if(r=it(qt(a),F(t.lng,t.lat)),!this.lastBearing)return void(this.lastBearing=r);((t,e)=>{if(0===e||360===e||-360===e)return t;const i=.017453292519943295*e,o=(\"Polygon\"===t.geometry.type?t.geometry.coordinates[0]:t.geometry.coordinates).map(([t,e])=>F(t,e)),s=o.reduce((t,e)=>({x:t.x+e.x,y:t.y+e.y}),{x:0,y:0});s.x/=o.length,s.y/=o.length;const n=o.map(t=>({x:s.x+(t.x-s.x)*Math.cos(i)-(t.y-s.y)*Math.sin(i),y:s.y+(t.x-s.x)*Math.sin(i)+(t.y-s.y)*Math.cos(i)})).map(({x:t,y:e})=>[E(t,e).lng,E(t,e).lat]);\"Polygon\"===t.geometry.type?t.geometry.coordinates[0]=n:t.geometry.coordinates=n})(a,-(this.lastBearing-r))}else{if(\"globe\"!==this.config.projection)throw new Error(\"Unsupported projection\");if(r=Bt(Yt({type:\"Feature\",geometry:s,properties:{}}),n),!this.lastBearing)return void(this.lastBearing=r+180);!function(t,e){if(0===e||360===e||-360===e)return t;const i=Yt(t);(\"Polygon\"===t.geometry.type?t.geometry.coordinates[0]:t.geometry.coordinates).forEach(t=>{const o=Bt(i,t)+e,s=Ht(i,t),n=Nt(i,s,o);t[0]=n[0],t[1]=n[1]})}(a,-(this.lastBearing-(r+180)))}const d=\"Polygon\"===s.type?s.coordinates[0]:s.coordinates;d.forEach(t=>{t[0]=I(t[0],this.coordinatePrecision),t[1]=I(t[1],this.coordinatePrecision)});const h=this.midPoints.getUpdated(d)||[],l=this.selectionPoints.getUpdated(d)||[],c=this.coordinatePoints.getUpdated(i,d)||[];if(o&&!o({id:i,type:\"Feature\",geometry:s,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:e.Provisional}))return!1;this.store.updateGeometry([{id:i,geometry:s},...l,...h,...c]),\"web-mercator\"===this.projection?this.lastBearing=r:\"globe\"===this.projection&&(this.lastBearing=r+180)}}class Zt extends H{constructor(t,e,i,o){super(t),this.config=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.lastDistance=void 0,this.config=t,this.selectionPoints=e,this.midPoints=i,this.coordinatePoints=o}reset(){this.lastDistance=void 0}scale(t,i,o){const s=this.store.getGeometryCopy(i);if(\"Polygon\"!==s.type&&\"LineString\"!==s.type)return;const n=[t.lng,t.lat],r={type:\"Feature\",geometry:s,properties:{}};let a;const d=qt(r);if(\"web-mercator\"===this.config.projection){const e=F(t.lng,t.lat);a=R(d,e)}else{if(\"globe\"!==this.config.projection)throw new Error(\"Invalid projection\");a=m(Yt({type:\"Feature\",geometry:s,properties:{}}),n)}if(!this.lastDistance)return void(this.lastDistance=a);const h=1-(this.lastDistance-a)/a;if(\"web-mercator\"===this.config.projection){const{lng:t,lat:e}=E(d.x,d.y);!function(t,e,i){if(1===e)return t;const o=(\"Polygon\"===t.geometry.type?t.geometry.coordinates[0]:t.geometry.coordinates).map(([t,e])=>F(t,e)),s=F(i[0],i[1]),n=o.map(t=>({x:s.x+(t.x-s.x)*e,y:s.y+(t.y-s.y)*e})).map(({x:t,y:e})=>[E(t,e).lng,E(t,e).lat]);\"Polygon\"===t.geometry.type?t.geometry.coordinates[0]=n:t.geometry.coordinates=n}(r,h,[t,e])}else\"globe\"===this.config.projection&&function(t,e,i,o=\"xy\"){1===e||(\"Polygon\"===t.geometry.type?t.geometry.coordinates[0]:t.geometry.coordinates).forEach(t=>{const s=Ht(i,t),n=Bt(i,t),r=Nt(i,s*e,n);\"x\"!==o&&\"xy\"!==o||(t[0]=r[0]),\"y\"!==o&&\"xy\"!==o||(t[1]=r[1])})}(r,h,Yt(r));const l=\"Polygon\"===s.type?s.coordinates[0]:s.coordinates;l.forEach(t=>{t[0]=I(t[0],this.coordinatePrecision),t[1]=I(t[1],this.coordinatePrecision)});const c=this.midPoints.getUpdated(l)||[],u=this.selectionPoints.getUpdated(l)||[],p=this.coordinatePoints.getUpdated(i,l)||[];if(o&&!o({id:i,type:\"Feature\",geometry:s,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:e.Provisional}))return!1;this.store.updateGeometry([{id:i,geometry:s},...u,...c,...p]),this.lastDistance=a}}class Jt extends H{constructor(t,e,i,o,s){super(t),this.config=void 0,this.pixelDistance=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.minimumScale=1e-4,this.draggedCoordinate={id:null,index:-1},this.boundingBoxMaps={opposite:{0:4,1:5,2:6,3:7,4:0,5:1,6:2,7:3}},this.config=t,this.pixelDistance=e,this.selectionPoints=i,this.midPoints=o,this.coordinatePoints=s}getClosestCoordinate(t,e){const i={dist:Infinity,index:-1,isFirstOrLastPolygonCoord:!1};let o;if(\"LineString\"===e.type)o=e.coordinates;else{if(\"Polygon\"!==e.type)return i;o=e.coordinates[0]}for(let s=0;s<o.length;s++){const n=this.pixelDistance.measure(t,o[s]);if(n<this.pointerDistance&&n<i.dist){const t=\"Polygon\"===e.type&&(s===o.length-1||0===s);i.dist=n,i.index=t?0:s,i.isFirstOrLastPolygonCoord=t}}return i}isValidDragWebMercator(t,e,i){switch(t){case 0:if(e<=0||i>=0)return!1;break;case 1:if(i>=0)return!1;break;case 2:if(e>=0||i>=0)return!1;break;case 3:if(e>=0)return!1;break;case 4:if(e>=0||i<=0)return!1;break;case 5:if(i<=0)return!1;break;case 6:if(e<=0||i<=0)return!1;break;case 7:if(e<=0)return!1}return!0}getSelectedFeatureDataWebMercator(){if(!this.draggedCoordinate.id||-1===this.draggedCoordinate.index)return null;const t=this.getFeature(this.draggedCoordinate.id);if(!t)return null;const e=this.getNormalisedCoordinates(t.geometry);return{boundingBox:this.getBBoxWebMercator(e),feature:t,updatedCoords:e,selectedCoordinate:e[this.draggedCoordinate.index]}}centerWebMercatorDrag(t){const e=this.getSelectedFeatureDataWebMercator();if(!e)return null;const{feature:i,boundingBox:o,updatedCoords:s,selectedCoordinate:n}=e,r=qt(i);if(!r)return null;const a=F(n[0],n[1]),{closestBBoxIndex:d}=this.getIndexesWebMercator(o,a),h=F(t.lng,t.lat);return this.scaleWebMercator({closestBBoxIndex:d,updatedCoords:s,webMercatorCursor:h,webMercatorSelected:a,webMercatorOrigin:r}),s}centerFixedWebMercatorDrag(t){const e=this.getSelectedFeatureDataWebMercator();if(!e)return null;const{feature:i,boundingBox:o,updatedCoords:s,selectedCoordinate:n}=e,r=qt(i);if(!r)return null;const a=F(n[0],n[1]),{closestBBoxIndex:d}=this.getIndexesWebMercator(o,a),h=F(t.lng,t.lat);return this.scaleFixedWebMercator({closestBBoxIndex:d,updatedCoords:s,webMercatorCursor:h,webMercatorSelected:a,webMercatorOrigin:r}),s}scaleFixedWebMercator({closestBBoxIndex:t,webMercatorOrigin:e,webMercatorSelected:i,webMercatorCursor:o,updatedCoords:s}){if(!this.isValidDragWebMercator(t,e.x-o.x,e.y-o.y))return null;let n=R(e,o)/R(e,i);return n<0&&(n=this.minimumScale),this.performWebMercatorScale(s,e.x,e.y,n,n),s}oppositeFixedWebMercatorDrag(t){const e=this.getSelectedFeatureDataWebMercator();if(!e)return null;const{boundingBox:i,updatedCoords:o,selectedCoordinate:s}=e,n=F(s[0],s[1]),{oppositeBboxIndex:r,closestBBoxIndex:a}=this.getIndexesWebMercator(i,n),d={x:i[r][0],y:i[r][1]},h=F(t.lng,t.lat);return this.scaleFixedWebMercator({closestBBoxIndex:a,updatedCoords:o,webMercatorCursor:h,webMercatorSelected:n,webMercatorOrigin:d}),o}oppositeWebMercatorDrag(t){const e=this.getSelectedFeatureDataWebMercator();if(!e)return null;const{boundingBox:i,updatedCoords:o,selectedCoordinate:s}=e,n=F(s[0],s[1]),{oppositeBboxIndex:r,closestBBoxIndex:a}=this.getIndexesWebMercator(i,n),d={x:i[r][0],y:i[r][1]},h=F(t.lng,t.lat);return this.scaleWebMercator({closestBBoxIndex:a,updatedCoords:o,webMercatorCursor:h,webMercatorSelected:n,webMercatorOrigin:d}),o}scaleWebMercator({closestBBoxIndex:t,webMercatorOrigin:e,webMercatorSelected:i,webMercatorCursor:o,updatedCoords:s}){const n=e.x-o.x,r=e.y-o.y;if(!this.isValidDragWebMercator(t,n,r))return null;let a=1;0!==n&&1!==t&&5!==t&&(a=1-(e.x-i.x-n)/n);let d=1;return 0!==r&&3!==t&&7!==t&&(d=1-(e.y-i.y-r)/r),this.validateScale(a,d)?(a<0&&(a=this.minimumScale),d<0&&(d=this.minimumScale),this.performWebMercatorScale(s,e.x,e.y,a,d),s):null}getFeature(t){if(null===this.draggedCoordinate.id)return null;const e=this.store.getGeometryCopy(t);return\"Polygon\"!==e.type&&\"LineString\"!==e.type?null:{id:t,type:\"Feature\",geometry:e,properties:{}}}getNormalisedCoordinates(t){return\"Polygon\"===t.type?t.coordinates[0]:t.coordinates}validateScale(t,e){const i=!isNaN(t)&&e<Number.MAX_SAFE_INTEGER,o=!isNaN(e)&&e<Number.MAX_SAFE_INTEGER;return i&&o}performWebMercatorScale(t,e,i,o,s){t.forEach(t=>{const{x:n,y:r}=F(t[0],t[1]),a=e+(n-e)*o,d=i+(r-i)*s,{lng:h,lat:l}=E(a,d);t[0]=h,t[1]=l})}getBBoxWebMercator(t){const e=[Infinity,Infinity,-Infinity,-Infinity];(t=t.map(t=>{const{x:e,y:i}=F(t[0],t[1]);return[e,i]})).forEach(([t,i])=>{t<e[0]&&(e[0]=t),i<e[1]&&(e[1]=i),t>e[2]&&(e[2]=t),i>e[3]&&(e[3]=i)});const[i,o,s,n]=e;return[[i,n],[(i+s)/2,n],[s,n],[s,n+(o-n)/2],[s,o],[(i+s)/2,o],[i,o],[i,n+(o-n)/2]]}getIndexesWebMercator(t,e){let i,o=Infinity;for(let s=0;s<t.length;s++){const n=R({x:e.x,y:e.y},{x:t[s][0],y:t[s][1]});n<o&&(i=s,o=n)}if(void 0===i)throw new Error(\"No closest coordinate found\");return{oppositeBboxIndex:this.boundingBoxMaps.opposite[i],closestBBoxIndex:i}}isDragging(){return null!==this.draggedCoordinate.id}startDragging(t,e){this.draggedCoordinate={id:t,index:e}}stopDragging(){this.draggedCoordinate={id:null,index:-1}}getDraggableIndex(t,e){const i=this.store.getGeometryCopy(e),o=this.getClosestCoordinate(t,i);return-1===o.index?-1:o.index}drag(t,i,o){if(!this.draggedCoordinate.id)return!1;const s=this.getFeature(this.draggedCoordinate.id);if(!s)return!1;let n=null;if(\"center\"===i?n=this.centerWebMercatorDrag(t):\"opposite\"===i?n=this.oppositeWebMercatorDrag(t):\"center-fixed\"===i?n=this.centerFixedWebMercatorDrag(t):\"opposite-fixed\"===i&&(n=this.oppositeFixedWebMercatorDrag(t)),!n)return!1;for(let t=0;t<n.length;t++){const e=n[t];if(e[0]=I(e[0],this.coordinatePrecision),e[1]=I(e[1],this.coordinatePrecision),!O(e,this.coordinatePrecision))return!1}const r=this.midPoints.getUpdated(n)||[],a=this.selectionPoints.getUpdated(n)||[],d=this.coordinatePoints.getUpdated(s.id,n)||[],h={type:s.geometry.type,coordinates:\"Polygon\"===s.geometry.type?[n]:n};return!(o&&!o({id:this.draggedCoordinate.id,type:\"Feature\",geometry:h,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:e.Provisional}).valid||(this.store.updateGeometry([{id:this.draggedCoordinate.id,geometry:h},...a,...r,...d]),0))}}const Qt={deselect:\"Escape\",delete:\"Delete\",rotate:[\"Control\",\"r\"],scale:[\"Control\",\"s\"]},te={pointerOver:\"move\",dragStart:\"move\",dragEnd:\"move\",insertMidpoint:\"crosshair\"};class ee extends y{constructor(t){super(t,!0),this.mode=\"select\",this.allowManualDeselection=!0,this.dragEventThrottle=5,this.dragEventCount=0,this.selected=[],this.flags={},this.keyEvents=Qt,this.cursors=te,this.validations={},this.selectionPoints=void 0,this.midPoints=void 0,this.coordinateSnap=void 0,this.featuresAtMouseEvent=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.dragFeature=void 0,this.dragCoordinate=void 0,this.rotateFeature=void 0,this.scaleFeature=void 0,this.dragCoordinateResizeFeature=void 0,this.coordinatePoints=void 0,this.updateOptions(t)}updateOptions(e){if(super.updateOptions(e),this.cursors=e&&e.cursors?t({},this.cursors,e.cursors):te,null===(null==e?void 0:e.keyEvents)?this.keyEvents={deselect:null,delete:null,rotate:null,scale:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents)),void 0!==(null==e?void 0:e.dragEventThrottle)&&(this.dragEventThrottle=e.dragEventThrottle),void 0!==(null==e?void 0:e.allowManualDeselection)&&(this.allowManualDeselection=e.allowManualDeselection),null!=e&&e.flags){this.flags=t({},this.flags,e.flags),this.validations={};for(const t in this.flags){const e=this.flags[t].feature;e&&e.validation&&(this.validations[t]=e.validation)}}}createOrUpdateCoordinatePoint(t){const e=this.store.getPropertiesCopy(t);e.coordinatePointIds&&this.store.delete(e.coordinatePointIds);const i=this.store.getGeometryCopy(t),o=this.store.create(i.coordinates[0].map(t=>({geometry:{type:\"Point\",coordinates:t},properties:{mode:this.mode,[r]:!0}})));this.store.updateProperty([{id:t,property:\"coordinatePointIds\",value:o}])}selectFeature(t){this.select(t,!1)}setSelecting(){if(\"started\"!==this._state)throw new Error(\"Mode must be started to move to selecting state\");this._state=\"selecting\"}registerBehaviors(t){this.pixelDistance=new Z(t),this.clickBoundingBox=new $(t),this.featuresAtMouseEvent=new Kt(t,this.clickBoundingBox,this.pixelDistance),this.selectionPoints=new Ut(t),this.coordinatePoints=new Dt(t),this.midPoints=new Tt(t,this.selectionPoints,this.coordinatePoints),this.coordinateSnap=new J(t,this.pixelDistance,this.clickBoundingBox),this.rotateFeature=new $t(t,this.selectionPoints,this.midPoints,this.coordinatePoints),this.scaleFeature=new Zt(t,this.selectionPoints,this.midPoints,this.coordinatePoints),this.dragFeature=new Xt(t,this.featuresAtMouseEvent,this.selectionPoints,this.midPoints,this.coordinatePoints),this.dragCoordinate=new zt(t,this.pixelDistance,this.selectionPoints,this.midPoints,this.coordinatePoints,this.coordinateSnap),this.dragCoordinateResizeFeature=new Jt(t,this.pixelDistance,this.selectionPoints,this.midPoints,this.coordinatePoints)}deselectFeature(){this.deselect()}deselect(){const t=this.selected.filter(t=>this.store.has(t)).map(t=>({id:t,property:i.SELECTED,value:!1}));this.store.updateProperty(t),this.onDeselect(this.selected[0]),this.selected=[],this.selectionPoints.delete(),this.midPoints.delete()}deleteSelected(){this.store.delete(this.selected),this.selected=[]}onRightClick(t){if(!this.selectionPoints.ids.length)return;let i,o=Infinity;if(this.selectionPoints.ids.forEach(e=>{const s=this.store.getGeometryCopy(e),n=this.pixelDistance.measure(t,s.coordinates);n<this.pointerDistance&&n<o&&(o=n,i=this.store.getPropertiesCopy(e))}),!i)return;const s=i.selectionPointFeatureId,n=i.index,r=this.store.getPropertiesCopy(s),a=this.flags[r.mode],d=this.validations[r.mode];if(!(a&&a.feature&&a.feature.coordinates&&a.feature.coordinates.deletable))return;const h=this.store.getGeometryCopy(s);let l;if(\"Polygon\"===h.type){if(l=h.coordinates[0],l.length<=4)return}else if(\"LineString\"===h.type&&(l=h.coordinates,l.length<=2))return;if(!l)return;if(\"Polygon\"!==h.type||0!==n&&n!==l.length-1?l.splice(n,1):(l.shift(),l.pop(),l.push([l[0][0],l[0][1]])),d&&!d({id:s,type:\"Feature\",geometry:h,properties:r},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Commit}).valid)return;const c=[...this.midPoints.ids,...this.selectionPoints.ids];this.store.delete(c),this.store.updateGeometry([{id:s,geometry:h}]),r.coordinatePointIds&&this.coordinatePoints.createOrUpdate(s),this.selectionPoints.create(l,h.type,s),a&&a.feature&&a.feature.coordinates&&a.feature.coordinates.midpoints&&this.midPoints.create(l,s,this.coordinatePrecision)}select(t,e=!0){if(this.selected[0]===t)return;const{mode:o}=this.store.getPropertiesCopy(t),s=this.flags[o];if(!s||!s.feature)return;const n=this.selected[0];if(n){if(n===t)return;this.deselect()}e&&this.setCursor(this.cursors.pointerOver),this.selected=[t],this.store.updateProperty([{id:t,property:i.SELECTED,value:!0}]),this.onSelect(t);const{type:r,coordinates:a}=this.store.getGeometryCopy(t);if(\"LineString\"!==r&&\"Polygon\"!==r)return;const d=\"LineString\"===r?a:a[0];d&&s&&s.feature.coordinates&&(this.selectionPoints.create(d,r,t),s.feature.coordinates.midpoints&&this.midPoints.create(d,t,this.coordinatePrecision))}onLeftClick(t){const{clickedFeature:e,clickedMidPoint:i}=this.featuresAtMouseEvent.find(t,this.selected.length>0);if(this.selected.length&&i)this.midPoints.insert(this.selected[0],i.id,this.coordinatePrecision);else if(e&&e.id)this.select(e.id,!0);else if(this.selected.length&&this.allowManualDeselection)return void this.deselect()}start(){this.setStarted(),this.setSelecting()}stop(){this.cleanUp(),this.setStarted(),this.setStopped()}onClick(t){\"right\"!==t.button?\"left\"===t.button&&this.onLeftClick(t):this.onRightClick(t)}canScale(t){return this.keyEvents.scale&&this.keyEvents.scale.every(e=>t.heldKeys.includes(e))}canRotate(t){return this.keyEvents.rotate&&this.keyEvents.rotate.every(e=>t.heldKeys.includes(e))}preventDefaultKeyEvent(t){const e=this.canRotate(t),i=this.canScale(t);(e||i)&&t.preventDefault()}onKeyDown(t){this.preventDefaultKeyEvent(t)}onKeyUp(t){if(this.preventDefaultKeyEvent(t),this.keyEvents.delete&&t.key===this.keyEvents.delete){if(!this.selected.length)return;this.onDeselect(this.selected[0]),this.deleteSelected(),this.selectionPoints.delete(),this.midPoints.delete()}else this.keyEvents.deselect&&t.key===this.keyEvents.deselect&&this.cleanUp()}cleanUp(){this.selected.length&&this.deselect()}onDragStart(t,e){if(!this.selected.length)return;const i=this.store.getPropertiesCopy(this.selected[0]),o=this.flags[i.mode];if(!(o&&o.feature&&(o.feature.draggable||o.feature.coordinates&&o.feature.coordinates.draggable||o.feature.coordinates&&o.feature.coordinates.resizable||o.feature.coordinates&&\"object\"==typeof o.feature.coordinates.midpoints&&o.feature.coordinates.midpoints.draggable)))return;this.dragEventCount=0;const s=this.selected[0],n=this.dragCoordinate.getDraggableIndex(t,s);if(o&&o.feature&&o.feature.coordinates&&(o.feature.coordinates.draggable||o.feature.coordinates.resizable)&&-1!==n)return this.setCursor(this.cursors.dragStart),o.feature.coordinates.resizable?this.dragCoordinateResizeFeature.startDragging(s,n):this.dragCoordinate.startDragging(s,n),void e(!1);if(o&&o.feature&&o.feature.coordinates&&\"object\"==typeof o.feature.coordinates.midpoints&&o.feature.coordinates.midpoints.draggable){const{clickedMidPoint:i}=this.featuresAtMouseEvent.find(t,this.selected.length>0);if(this.selected.length&&i){this.midPoints.insert(s,i.id,this.coordinatePrecision);const o=this.dragCoordinate.getDraggableIndex(t,s);return this.dragCoordinate.startDragging(s,o),void e(!1)}}return o&&o.feature&&o.feature.draggable&&this.dragFeature.canDrag(t,s)?(this.setCursor(this.cursors.dragStart),this.dragFeature.startDragging(t,s),void e(!1)):void 0}onDrag(t,e){const i=this.selected[0];if(!i)return;const o=this.store.getPropertiesCopy(i),s=this.flags[o.mode],n=!0===(s&&s.feature&&s.feature.selfIntersectable);if(this.dragEventCount++,this.dragEventCount%this.dragEventThrottle==0)return;const r=this.validations[o.mode];if(s&&s.feature&&s.feature.rotateable&&this.canRotate(t))return e(!1),void this.rotateFeature.rotate(t,i,r);if(s&&s.feature&&s.feature.scaleable&&this.canScale(t))return e(!1),void this.scaleFeature.scale(t,i,r);if(this.dragCoordinateResizeFeature.isDragging()&&s.feature&&s.feature.coordinates&&s.feature.coordinates.resizable){if(\"globe\"===this.projection)throw new Error(\"Globe is currently unsupported projection for resizable\");return e(!1),void this.dragCoordinateResizeFeature.drag(t,s.feature.coordinates.resizable,r)}if(this.dragCoordinate.isDragging()){var a;const e=Boolean(null==(a=s.feature)||null==(a=a.coordinates)?void 0:a.snappable);this.dragCoordinate.drag(t,n,r,e)}else this.dragFeature.isDragging()?this.dragFeature.drag(t,r):e(!0)}onDragEnd(t,e){this.setCursor(this.cursors.dragEnd),this.dragCoordinate.isDragging()?this.onFinish(this.selected[0],{mode:this.mode,action:\"dragCoordinate\"}):this.dragFeature.isDragging()?this.onFinish(this.selected[0],{mode:this.mode,action:\"dragFeature\"}):this.dragCoordinateResizeFeature.isDragging()&&this.onFinish(this.selected[0],{mode:this.mode,action:\"dragCoordinateResize\"}),this.dragCoordinate.stopDragging(),this.dragFeature.stopDragging(),this.dragCoordinateResizeFeature.stopDragging(),this.rotateFeature.reset(),this.scaleFeature.reset(),e(!0)}onMouseMove(t){if(!this.selected.length)return void this.setCursor(\"unset\");if(this.dragFeature.isDragging())return;let e=!1;this.midPoints.ids.forEach(i=>{if(e)return;const o=this.store.getGeometryCopy(i);this.pixelDistance.measure(t,o.coordinates)<this.pointerDistance&&(e=!0)});let i=!1;if(this.selectionPoints.ids.forEach(o=>{const s=this.store.getGeometryCopy(o);this.pixelDistance.measure(t,s.coordinates)<this.pointerDistance&&(e=!1,i=!0)}),e)return void this.setCursor(this.cursors.insertMidpoint);const{clickedFeature:o}=this.featuresAtMouseEvent.find(t,!0);this.setCursor(this.selected.length>0&&(o&&o.id===this.selected[0]||i)?this.cursors.pointerOver:\"unset\")}styleFeature(e){const o=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});if(e.properties.mode===this.mode&&\"Point\"===e.geometry.type){if(e.properties.selectionPoint)return o.pointColor=this.getHexColorStylingValue(this.styles.selectionPointColor,o.pointColor,e),o.pointOutlineColor=this.getHexColorStylingValue(this.styles.selectionPointOutlineColor,o.pointOutlineColor,e),o.pointWidth=this.getNumericStylingValue(this.styles.selectionPointWidth,o.pointWidth,e),o.pointOutlineWidth=this.getNumericStylingValue(this.styles.selectionPointOutlineWidth,2,e),o.zIndex=30,o;if(e.properties.midPoint)return o.pointColor=this.getHexColorStylingValue(this.styles.midPointColor,o.pointColor,e),o.pointOutlineColor=this.getHexColorStylingValue(this.styles.midPointOutlineColor,o.pointOutlineColor,e),o.pointWidth=this.getNumericStylingValue(this.styles.midPointWidth,4,e),o.pointOutlineWidth=this.getNumericStylingValue(this.styles.midPointOutlineWidth,2,e),o.zIndex=40,o}else if(e.properties[i.SELECTED]){if(\"Polygon\"===e.geometry.type)return o.polygonFillColor=this.getHexColorStylingValue(this.styles.selectedPolygonColor,o.polygonFillColor,e),o.polygonOutlineWidth=this.getNumericStylingValue(this.styles.selectedPolygonOutlineWidth,o.polygonOutlineWidth,e),o.polygonOutlineColor=this.getHexColorStylingValue(this.styles.selectedPolygonOutlineColor,o.polygonOutlineColor,e),o.polygonFillOpacity=this.getNumericStylingValue(this.styles.selectedPolygonFillOpacity,o.polygonFillOpacity,e),o.zIndex=10,o;if(\"LineString\"===e.geometry.type)return o.lineStringColor=this.getHexColorStylingValue(this.styles.selectedLineStringColor,o.lineStringColor,e),o.lineStringWidth=this.getNumericStylingValue(this.styles.selectedLineStringWidth,o.lineStringWidth,e),o.zIndex=10,o;if(\"Point\"===e.geometry.type)return o.pointWidth=this.getNumericStylingValue(this.styles.selectedPointWidth,o.pointWidth,e),o.pointColor=this.getHexColorStylingValue(this.styles.selectedPointColor,o.pointColor,e),o.pointOutlineColor=this.getHexColorStylingValue(this.styles.selectedPointOutlineColor,o.pointOutlineColor,e),o.pointOutlineWidth=this.getNumericStylingValue(this.styles.selectedPointOutlineWidth,o.pointOutlineWidth,e),o.zIndex=10,o}return o}}class ie extends g{constructor(...t){super(...t),this.type=p.Static,this.mode=\"static\"}start(){}stop(){}onKeyUp(){}onKeyDown(){}onClick(){}onDragStart(){}onDrag(){}onDragEnd(){}onMouseMove(){}cleanUp(){}styleFeature(){return t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0})}}function oe(t,e,i,o,s){for(;o>i;){if(o-i>600){const n=o-i+1,r=e-i+1,a=Math.log(n),d=.5*Math.exp(2*a/3),h=.5*Math.sqrt(a*d*(n-d)/n)*(r-n/2<0?-1:1);oe(t,e,Math.max(i,Math.floor(e-r*d/n+h)),Math.min(o,Math.floor(e+(n-r)*d/n+h)),s)}const n=t[e];let r=i,a=o;for(se(t,i,e),s(t[o],n)>0&&se(t,i,o);r<a;){for(se(t,r,a),r++,a--;s(t[r],n)<0;)r++;for(;s(t[a],n)>0;)a--}0===s(t[i],n)?se(t,i,a):(a++,se(t,a,o)),a<=e&&(i=a+1),e<=a&&(o=a-1)}}function se(t,e,i){const o=t[e];t[e]=t[i],t[i]=o}function ne(t,e){re(t,0,t.children.length,e,t)}function re(t,e,i,o,s){s||(s=ye([])),s.minX=Infinity,s.minY=Infinity,s.maxX=-Infinity,s.maxY=-Infinity;for(let n=e;n<i;n++){const e=t.children[n];ae(s,t.leaf?o(e):e)}return s}function ae(t,e){return t.minX=Math.min(t.minX,e.minX),t.minY=Math.min(t.minY,e.minY),t.maxX=Math.max(t.maxX,e.maxX),t.maxY=Math.max(t.maxY,e.maxY),t}function de(t,e){return t.minX-e.minX}function he(t,e){return t.minY-e.minY}function le(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function ce(t){return t.maxX-t.minX+(t.maxY-t.minY)}function ue(t,e){const i=Math.max(t.minX,e.minX),o=Math.max(t.minY,e.minY),s=Math.min(t.maxX,e.maxX),n=Math.min(t.maxY,e.maxY);return Math.max(0,s-i)*Math.max(0,n-o)}function pe(t,e){return t.minX<=e.minX&&t.minY<=e.minY&&e.maxX<=t.maxX&&e.maxY<=t.maxY}function ge(t,e){return e.minX<=t.maxX&&e.minY<=t.maxY&&e.maxX>=t.minX&&e.maxY>=t.minY}function ye(t){return{children:t,height:1,leaf:!0,minX:Infinity,minY:Infinity,maxX:-Infinity,maxY:-Infinity}}function me(t,e,i,o,s){const n=[e,i];for(;n.length;){if((i=n.pop())-(e=n.pop())<=o)continue;const r=e+Math.ceil((i-e)/o/2)*o;oe(t,r,e,i,s),n.push(e,r,r,i)}}class fe{constructor(t){this._maxEntries=void 0,this._minEntries=void 0,this.data=void 0,this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()}search(t){let e=this.data;const i=[];if(!ge(t,e))return i;const o=this.toBBox,s=[];for(;e;){for(let n=0;n<e.children.length;n++){const r=e.children[n],a=e.leaf?o(r):r;ge(t,a)&&(e.leaf?i.push(r):pe(t,a)?this._all(r,i):s.push(r))}e=s.pop()}return i}collides(t){let e=this.data;if(ge(t,e)){const i=[];for(;e;){for(let o=0;o<e.children.length;o++){const s=e.children[o],n=e.leaf?this.toBBox(s):s;if(ge(t,n)){if(e.leaf||pe(t,n))return!0;i.push(s)}}e=i.pop()}}return!1}load(t){if(t.length<this._minEntries){for(let e=0;e<t.length;e++)this.insert(t[e]);return}let e=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===e.height)this._splitRoot(this.data,e);else{if(this.data.height<e.height){const t=this.data;this.data=e,e=t}this._insert(e,this.data.height-e.height-1,!0)}else this.data=e}insert(t){this._insert(t,this.data.height-1)}clear(){this.data=ye([])}remove(t){let e=this.data;const i=this.toBBox(t),o=[],s=[];let n,r,a=!1;for(;e||o.length;){if(e||(e=o.pop(),r=o[o.length-1],n=s.pop(),a=!0),e.leaf){const i=e.children.indexOf(t);-1!==i&&(e.children.splice(i,1),o.push(e),this._condense(o))}a||e.leaf||!pe(e,i)?r?(n++,e=r.children[n],a=!1):e=null:(o.push(e),s.push(n),n=0,r=e,e=e.children[0])}}toBBox(t){return t}compareMinX(t,e){return t.minX-e.minX}compareMinY(t,e){return t.minY-e.minY}_all(t,e){const i=[];for(;t;)t.leaf?e.push(...t.children):i.push(...t.children),t=i.pop();return e}_build(t,e,i,o){const s=i-e+1;let n,r=this._maxEntries;if(s<=r)return n=ye(t.slice(e,i+1)),ne(n,this.toBBox),n;o||(o=Math.ceil(Math.log(s)/Math.log(r)),r=Math.ceil(s/Math.pow(r,o-1))),n=ye([]),n.leaf=!1,n.height=o;const a=Math.ceil(s/r),d=a*Math.ceil(Math.sqrt(r));me(t,e,i,d,this.compareMinX);for(let s=e;s<=i;s+=d){const e=Math.min(s+d-1,i);me(t,s,e,a,this.compareMinY);for(let i=s;i<=e;i+=a){const s=Math.min(i+a-1,e);n.children.push(this._build(t,i,s,o-1))}}return ne(n,this.toBBox),n}_chooseSubtree(t,e,i,o){for(;o.push(e),!e.leaf&&o.length-1!==i;){let i,o=Infinity,r=Infinity;for(let a=0;a<e.children.length;a++){const d=e.children[a],h=le(d),l=(s=t,n=d,(Math.max(n.maxX,s.maxX)-Math.min(n.minX,s.minX))*(Math.max(n.maxY,s.maxY)-Math.min(n.minY,s.minY))-h);l<r?(r=l,o=h<o?h:o,i=d):l===r&&h<o&&(o=h,i=d)}e=i||e.children[0]}var s,n;return e}_insert(t,e,i){const o=i?t:this.toBBox(t),s=[],n=this._chooseSubtree(o,this.data,e,s);for(n.children.push(t),ae(n,o);e>=0&&s[e].children.length>this._maxEntries;)this._split(s,e),e--;this._adjustParentBBoxes(o,s,e)}_split(t,e){const i=t[e],o=i.children.length,s=this._minEntries;this._chooseSplitAxis(i,s,o);const n=this._chooseSplitIndex(i,s,o),r=ye(i.children.splice(n,i.children.length-n));r.height=i.height,r.leaf=i.leaf,ne(i,this.toBBox),ne(r,this.toBBox),e?t[e-1].children.push(r):this._splitRoot(i,r)}_splitRoot(t,e){this.data=ye([t,e]),this.data.height=t.height+1,this.data.leaf=!1,ne(this.data,this.toBBox)}_chooseSplitIndex(t,e,i){let o,s=Infinity,n=Infinity;for(let r=e;r<=i-e;r++){const e=re(t,0,r,this.toBBox),a=re(t,r,i,this.toBBox),d=ue(e,a),h=le(e)+le(a);d<s?(s=d,o=r,n=h<n?h:n):d===s&&h<n&&(n=h,o=r)}return o||i-e}_chooseSplitAxis(t,e,i){const o=t.leaf?this.compareMinX:de,s=t.leaf?this.compareMinY:he;this._allDistMargin(t,e,i,o)<this._allDistMargin(t,e,i,s)&&t.children.sort(o)}_allDistMargin(t,e,i,o){t.children.sort(o);const s=this.toBBox,n=re(t,0,e,s),r=re(t,i-e,i,s);let a=ce(n)+ce(r);for(let o=e;o<i-e;o++){const e=t.children[o];ae(n,t.leaf?s(e):e),a+=ce(n)}for(let o=i-e-1;o>=e;o--){const e=t.children[o];ae(r,t.leaf?s(e):e),a+=ce(r)}return a}_adjustParentBBoxes(t,e,i){for(let o=i;o>=0;o--)ae(e[o],t)}_condense(t){for(let e,i=t.length-1;i>=0;i--)0===t[i].children.length?i>0?(e=t[i-1].children,e.splice(e.indexOf(t[i]),1)):this.clear():ne(t[i],this.toBBox)}}class Ce{constructor(t){this.tree=void 0,this.idToNode=void 0,this.nodeToId=void 0,this.tree=new fe(t&&t.maxEntries?t.maxEntries:9),this.idToNode=new Map,this.nodeToId=new Map}setMaps(t,e){this.idToNode.set(t.id,e),this.nodeToId.set(e,t.id)}toBBox(t){const e=[],i=[];let o;if(\"Polygon\"===t.geometry.type)o=t.geometry.coordinates[0];else if(\"LineString\"===t.geometry.type)o=t.geometry.coordinates;else{if(\"Point\"!==t.geometry.type)throw new Error(\"Not a valid feature to turn into a bounding box\");o=[t.geometry.coordinates]}for(let t=0;t<o.length;t++)i.push(o[t][1]),e.push(o[t][0]);const s=Math.min(...i),n=Math.max(...i);return{minX:Math.min(...e),minY:s,maxX:Math.max(...e),maxY:n}}insert(t){if(this.idToNode.get(String(t.id)))throw new Error(\"Feature already exists\");const e=this.toBBox(t);this.setMaps(t,e),this.tree.insert(e)}load(t){const e=[],i=new Set;t.forEach(t=>{const o=this.toBBox(t);if(this.setMaps(t,o),i.has(String(t.id)))throw new Error(`Duplicate feature ID found ${t.id}`);i.add(String(t.id)),e.push(o)}),this.tree.load(e)}update(t){this.remove(t.id);const e=this.toBBox(t);this.setMaps(t,e),this.tree.insert(e)}remove(t){const e=this.idToNode.get(t);if(!e)throw new Error(`${t} not inserted into the spatial index`);this.tree.remove(e)}clear(){this.tree.clear()}search(t){return this.tree.search(this.toBBox(t)).map(t=>this.nodeToId.get(t))}collides(t){return this.tree.collides(this.toBBox(t))}}const ve={getId:()=>\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g,function(t){const e=16*Math.random()|0;return(\"x\"==t?e:3&e|8).toString(16)}),isValidId:t=>\"string\"==typeof t&&36===t.length};class Pe{constructor(t){this.idStrategy=void 0,this.tracked=void 0,this.spatialIndex=void 0,this.store=void 0,this._onChange=()=>{},this.store={},this.spatialIndex=new Ce,this.tracked=!t||!1!==t.tracked,this.idStrategy=t&&t.idStrategy?t.idStrategy:ve}clone(t){return JSON.parse(JSON.stringify(t))}getId(){return this.idStrategy.getId()}has(t){return Boolean(this.store[t])}load(t,e,i,o){if(0===t.length)return[];let s=this.clone(t);const n=[],r=[];return s=s.filter(t=>{null==t.id&&(t.id=this.idStrategy.getId());const o=t.id;if(e){const i=e(t);if(!i.valid)return r.push({id:o,valid:!1,reason:i.reason}),!1}if(this.tracked){if(t.properties.createdAt){if(!l(t.properties.createdAt))return r.push({id:t.id,valid:!1,reason:\"createdAt is not a valid numeric timestamp\"}),!1}else t.properties.createdAt=+new Date;if(t.properties.updatedAt){if(!l(t.properties.updatedAt))return r.push({id:t.id,valid:!1,reason:\"updatedAt is not a valid numeric timestamp\"}),!1}else t.properties.updatedAt=+new Date}return this.has(o)?(r.push({id:o,valid:!1,reason:`Feature already exists with this id: ${o}`}),!1):(this.store[o]=t,n.push(o),i&&i(t),r.push({id:o,valid:!0}),!0)}),this.spatialIndex.load(s),n.length>0&&this._onChange(n,\"create\",o),r}search(t,e){const i=this.spatialIndex.search(t).map(t=>this.store[t]);return this.clone(e?i.filter(e):i)}registerOnChange(t){this._onChange=(e,i,o)=>{t(e,i,o)}}getGeometryCopy(t){const e=this.store[t];if(!e)throw new Error(`No feature with this id (${t}), can not get geometry copy`);return this.clone(e.geometry)}getPropertiesCopy(t){const e=this.store[t];if(!e)throw new Error(`No feature with this id (${t}), can not get properties copy`);return this.clone(e.properties)}updateProperty(t,e){const i=[];t.forEach(({id:t,property:e,value:o})=>{const s=this.store[t];if(!s)throw new Error(`No feature with this (${t}), can not update geometry`);i.push(t),s.properties[e]=o,this.tracked&&(s.properties.updatedAt=+new Date)}),this._onChange&&this._onChange(i,\"update\",e)}updateGeometry(t,e){const i=[];t.forEach(({id:t,geometry:e})=>{i.push(t);const o=this.store[t];if(!o)throw new Error(`No feature with this (${t}), can not update geometry`);o.geometry=this.clone(e),this.spatialIndex.update(o),this.tracked&&(o.properties.updatedAt=+new Date)}),this._onChange&&this._onChange(i,\"update\",e)}create(e,i){const o=[];return e.forEach(({geometry:e,properties:i})=>{let s,n=t({},i);this.tracked&&(s=+new Date,i?(n.createdAt=\"number\"==typeof i.createdAt?i.createdAt:s,n.updatedAt=\"number\"==typeof i.updatedAt?i.updatedAt:s):n={createdAt:s,updatedAt:s});const r=this.getId(),a={id:r,type:\"Feature\",geometry:e,properties:n};this.store[r]=a,this.spatialIndex.insert(a),o.push(r)}),this._onChange&&this._onChange([...o],\"create\",i),o}delete(t,e){t.forEach(t=>{if(!this.store[t])throw new Error(`No feature with id ${t}, can not delete`);delete this.store[t],this.spatialIndex.remove(t)}),this._onChange&&this._onChange([...t],\"delete\",e)}copy(t){return this.clone(this.store[t])}copyAll(){return this.clone(Object.keys(this.store).map(t=>this.store[t]))}copyAllWhere(t){return this.clone(Object.keys(this.store).map(t=>this.store[t]).filter(e=>e.properties&&t(e.properties)))}clear(){this.store={},this.spatialIndex.clear()}size(){return Object.keys(this.store).length}}function Ie(t){const e=t.coordinates;let i=0;if(e&&e.length>0){i+=Math.abs(Me(e[0]));for(let t=1;t<e.length;t++)i-=Math.abs(Me(e[t]))}return i}const xe=20294876564838.72,Se=Math.PI/180;function Me(t){const e=t.length;if(e<=2)return 0;let i=0,o=0;for(;o<e;)i+=(t[o+2>=e?(o+2)%e:o+2][0]*Se-t[o][0]*Se)*Math.sin(t[o+1===e?0:o+1][1]*Se),o++;return i*xe}const Fe=\"Feature is smaller than the minimum area\",Ee=(t,e)=>\"Polygon\"!==t.geometry.type?{valid:!1,reason:c}:Ie(t.geometry)<e?{valid:!1,reason:Fe}:{valid:!0},De=(t,e)=>\"Polygon\"!==t.geometry.type?{valid:!1,reason:c}:Ie(t.geometry)>e?{valid:!1,reason:\"Feature is larger than the maximum area\"}:{valid:!0},we=\"Feature is not a Polygon or LineString\",be=\"Feature intersects itself\",ke=t=>\"Polygon\"!==t.geometry.type&&\"LineString\"!==t.geometry.type?{valid:!1,reason:we}:b(t)?{valid:!1,reason:be}:{valid:!0};function Oe(t,e,i){const o=it(t,e);let s=it(e,i)-o;return s<0&&(s+=360),180-Math.abs(s-90-90)}const _e={cancel:\"Escape\",finish:\"Enter\"},je={start:\"crosshair\",close:\"pointer\"};class We extends g{constructor(t){super(t,!0),this.mode=\"angled-rectangle\",this.currentCoordinate=0,this.currentId=void 0,this.keyEvents=_e,this.cursors=je,this.mouseMove=!1,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents))}close(){if(void 0===this.currentId)return;const t=this.currentId;this.currentCoordinate=0,this.currentId=void 0,\"drawing\"===this.state&&this.setStarted(),this.onFinish(t,{mode:this.mode,action:\"draw\"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onMouseMove(t){if(this.mouseMove=!0,this.setCursor(this.cursors.start),void 0===this.currentId||0===this.currentCoordinate)return;const i=this.store.getGeometryCopy(this.currentId).coordinates[0];let o;if(1===this.currentCoordinate){const e=1/Math.pow(10,this.coordinatePrecision-1),s=Math.max(1e-6,e);o=[i[0],[t.lng,t.lat],[t.lng,t.lat-s],i[0]]}else if(2===this.currentCoordinate){const e=i[0],s=i[1],n=Gt(e,s,this.coordinatePrecision,this.project,this.unproject),r=F(e[0],e[1]),a=F(n[0],n[1]),d=F(s[0],s[1]),h=F(t.lng,t.lat),l=R(h,r)<R(h,d),c=Oe(r,a,h),u=l?90-c:Oe(r,a,h)-90,p=R(a,h),g=Math.cos(C(u))*p,y=it(r,d)+(\"right\"===function(t,e,i){const o=(i.x-e.x)*(t.y-e.y)-(i.y-e.y)*(t.x-e.x);return o>1e-10?\"left\":o<-1e-10?\"right\":\"left\"}(r,d,h)?-90:90),m=tt(r,g,y),f=tt(d,g,y),v=E(m.x,m.y),P=E(f.x,f.y);o=[i[0],i[1],[P.lng,P.lat],[v.lng,v.lat],i[0]]}o&&this.updatePolygonGeometry(this.currentId,o,e.Provisional)}updatePolygonGeometry(t,e,i){const o={type:\"Polygon\",coordinates:[e]};return!(this.validate&&!this.validate({type:\"Feature\",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid||(this.store.updateGeometry([{id:t,geometry:o}]),0))}onClick(t){if(this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,0===this.currentCoordinate){const[e]=this.store.create([{geometry:{type:\"Polygon\",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode}}]);this.currentId=e,this.currentCoordinate++,this.setDrawing()}else if(1===this.currentCoordinate&&this.currentId){const i=this.store.getGeometryCopy(this.currentId);if(dt([t.lng,t.lat],i.coordinates[0][0]))return;if(!this.updatePolygonGeometry(this.currentId,[i.coordinates[0][0],[t.lng,t.lat],[t.lng,t.lat],i.coordinates[0][0]],e.Commit))return;this.currentCoordinate++}else 2===this.currentCoordinate&&this.currentId&&this.close()}onKeyUp(t){if(t.key===this.keyEvents.cancel)this.cleanUp();else if(t.key===this.keyEvents.finish){if(this.currentCoordinate<2)return void this.cleanUp();this.close()}}onKeyDown(){}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){try{this.currentId&&this.store.delete([this.currentId])}catch(t){}this.currentId=void 0,this.currentCoordinate=0,\"drawing\"===this.state&&this.setStarted()}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});return e.properties.mode===this.mode&&\"Polygon\"===e.geometry.type&&(i.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,i.polygonFillColor,e),i.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,i.polygonOutlineColor,e),i.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,i.polygonOutlineWidth,e),i.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,i.polygonFillOpacity,e),i.zIndex=10),i}validateFeature(t){return this.validateModeFeature(t,t=>V(t,this.coordinatePrecision))}}function Be(t,e,i){return(e.x-t.x)*(i.y-t.y)-(e.y-t.y)*(i.x-t.x)<=0}const Ne={cancel:\"Escape\",finish:\"Enter\"},Ge={start:\"crosshair\",close:\"pointer\"};class Le extends g{constructor(t){super(t,!0),this.mode=\"sector\",this.currentCoordinate=0,this.currentId=void 0,this.keyEvents=Ne,this.direction=void 0,this.arcPoints=64,this.cursors=Ge,this.mouseMove=!1,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents)),null!=e&&e.arcPoints&&(this.arcPoints=e.arcPoints)}close(){if(void 0===this.currentId)return;const t=K(this.store.getGeometryCopy(this.currentId));t&&this.store.updateGeometry([{id:this.currentId,geometry:t}]);const e=this.currentId;this.currentCoordinate=0,this.currentId=void 0,this.direction=void 0,\"drawing\"===this.state&&this.setStarted(),this.onFinish(e,{mode:this.mode,action:\"draw\"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onMouseMove(t){if(this.mouseMove=!0,this.setCursor(this.cursors.start),void 0===this.currentId||0===this.currentCoordinate)return;const i=this.store.getGeometryCopy(this.currentId).coordinates[0];let o;if(1===this.currentCoordinate){const e=1/Math.pow(10,this.coordinatePrecision-1),s=Math.max(1e-6,e);o=[i[0],[t.lng,t.lat],[t.lng,t.lat-s],i[0]]}else if(2===this.currentCoordinate){const e=i[0],s=i[1],n=[t.lng,t.lat],r=F(e[0],e[1]),a=F(s[0],s[1]),d=F(n[0],n[1]);if(void 0===this.direction){const t=Be(r,a,d);this.direction=t?\"clockwise\":\"anticlockwise\"}const h=R(r,a),l=it(r,a),c=it(r,d),u=this.arcPoints,p=[e],g=ot(l),y=ot(c);let m;\"anticlockwise\"===this.direction?(m=y-g,m<0&&(m+=360)):(m=g-y,m<0&&(m+=360));const f=(\"anticlockwise\"===this.direction?1:-1)*m/u;p.push(s);for(let t=0;t<=u;t++){const e=tt(r,h,g+t*f),{lng:i,lat:o}=E(e.x,e.y),s=[I(i,this.coordinatePrecision),I(o,this.coordinatePrecision)];s[0]!==p[p.length-1][0]&&s[1]!==p[p.length-1][1]&&p.push(s)}p.push(e),o=[...p]}o&&this.updatePolygonGeometry(this.currentId,o,e.Provisional)}updatePolygonGeometry(t,e,i){const o={type:\"Polygon\",coordinates:[e]};return!(this.validate&&!this.validate({type:\"Feature\",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid||(this.store.updateGeometry([{id:t,geometry:o}]),0))}onClick(t){if(this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,0===this.currentCoordinate){const[e]=this.store.create([{geometry:{type:\"Polygon\",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode}}]);this.currentId=e,this.currentCoordinate++,this.setDrawing()}else if(1===this.currentCoordinate&&this.currentId){const i=this.store.getGeometryCopy(this.currentId);if(dt([t.lng,t.lat],i.coordinates[0][0]))return;if(!this.updatePolygonGeometry(this.currentId,[i.coordinates[0][0],[t.lng,t.lat],[t.lng,t.lat],i.coordinates[0][0]],e.Commit))return;this.currentCoordinate++}else 2===this.currentCoordinate&&this.currentId&&this.close()}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onKeyDown(){}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){try{this.currentId&&this.store.delete([this.currentId])}catch(t){}this.currentId=void 0,this.direction=void 0,this.currentCoordinate=0,\"drawing\"===this.state&&this.setStarted()}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});return e.properties.mode===this.mode&&\"Polygon\"===e.geometry.type&&(i.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,i.polygonFillColor,e),i.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,i.polygonOutlineColor,e),i.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,i.polygonOutlineWidth,e),i.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,i.polygonFillOpacity,e),i.zIndex=10),i}validateFeature(t){return this.validateModeFeature(t,t=>V(t,this.coordinatePrecision))}}const Ve={cancel:\"Escape\",finish:\"Enter\"},Te={start:\"crosshair\",close:\"pointer\"};class Ue extends g{constructor(t){super(t,!0),this.mode=\"sensor\",this.currentCoordinate=0,this.currentId=void 0,this.currentInitialArcId=void 0,this.currentStartingPointId=void 0,this.keyEvents=Ve,this.direction=void 0,this.arcPoints=64,this.cursors=Te,this.mouseMove=!1,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents)),null!=e&&e.arcPoints&&(this.arcPoints=e.arcPoints)}close(){if(void 0===this.currentStartingPointId)return;const t=this.currentStartingPointId,e=this.currentInitialArcId,i=this.currentId;if(t&&this.store.delete([t]),e&&this.store.delete([e]),this.currentId){const t=K(this.store.getGeometryCopy(this.currentId));t&&this.store.updateGeometry([{id:this.currentId,geometry:t}])}this.currentCoordinate=0,this.currentStartingPointId=void 0,this.currentInitialArcId=void 0,this.currentId=void 0,this.direction=void 0,\"drawing\"===this.state&&this.setStarted(),i&&this.onFinish(i,{mode:this.mode,action:\"draw\"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onMouseMove(t){if(this.mouseMove=!0,this.setCursor(this.cursors.start),void 0!==this.currentInitialArcId&&void 0!==this.currentStartingPointId&&0!==this.currentCoordinate)if(2===this.currentCoordinate){const i=this.store.getGeometryCopy(this.currentInitialArcId).coordinates,o=this.store.getGeometryCopy(this.currentStartingPointId).coordinates,s=i[0],n=[t.lng,t.lat],r=F(s[0],s[1]),a=F(n[0],n[1]),d=F(o[0],o[1]),h=R(d,r);if(void 0===this.direction){const t=Be(d,r,a);this.direction=t?\"clockwise\":\"anticlockwise\"}const l=it(d,r),c=it(d,a),u=this.arcPoints,p=[s],g=ot(l),y=ot(c);let m;\"anticlockwise\"===this.direction?(m=y-g,m<0&&(m+=360)):(m=g-y,m<0&&(m+=360));const f=(\"anticlockwise\"===this.direction?1:-1)*m/u;for(let t=0;t<=u;t++){const e=tt(d,h,g+t*f),{lng:i,lat:o}=E(e.x,e.y),s=[I(i,this.coordinatePrecision),I(o,this.coordinatePrecision)];s[0]!==p[p.length-1][0]&&s[1]!==p[p.length-1][1]&&p.push(s)}this.updateLineStringGeometry(this.currentInitialArcId,p,e.Provisional)}else if(3===this.currentCoordinate){const i=this.store.getGeometryCopy(this.currentInitialArcId).coordinates;if(i.length<2)return;if(!this.direction)return;const o=this.store.getGeometryCopy(this.currentStartingPointId).coordinates,s=i[0],n=i[i.length-1],r=F(t.lng,t.lat),a=F(s[0],s[1]),d=F(n[0],n[1]),h=F(o[0],o[1]),l=R(h,a),c=R(h,r)<l?a:r,u=it(h,r),p=it(h,a),g=it(h,d),y=ot(p),m=ot(g),f=ot(u);if(this.notInSector({normalizedCursor:f,normalizedStart:y,normalizedEnd:m,direction:this.direction}))return;const C=this.getDeltaBearing(this.direction,y,m),v=this.arcPoints,P=(\"anticlockwise\"===this.direction?1:-1)*C/v,x=R(h,c),S=[];for(let t=0;t<=v;t++){const e=tt(h,x,y+t*P),{lng:o,lat:s}=E(e.x,e.y),n=[I(o,this.coordinatePrecision),I(s,this.coordinatePrecision)];n[0]!==i[i.length-1][0]&&n[1]!==i[i.length-1][1]&&S.unshift(n)}i.push(...S),i.push(i[0]),this.currentId?this.updatePolygonGeometry(this.currentId,i,e.Provisional):[this.currentId]=this.store.create([{geometry:{type:\"Polygon\",coordinates:[i]},properties:{mode:this.mode}}])}}updateLineStringGeometry(t,e,i){const o={type:\"LineString\",coordinates:e};return!(this.validate&&!this.validate({type:\"Feature\",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid||(this.store.updateGeometry([{id:t,geometry:o}]),0))}updatePolygonGeometry(t,e,i){const o={type:\"Polygon\",coordinates:[e]};return!(this.validate&&!this.validate({type:\"Feature\",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid||(this.store.updateGeometry([{id:t,geometry:o}]),0))}onClick(t){if(this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,0===this.currentCoordinate){const[e]=this.store.create([{geometry:{type:\"Point\",coordinates:[t.lng,t.lat]},properties:{mode:this.mode}}]);this.currentStartingPointId=e,this.currentCoordinate++,this.setDrawing()}else if(1===this.currentCoordinate&&this.currentStartingPointId){const[e]=this.store.create([{geometry:{type:\"LineString\",coordinates:[[t.lng,t.lat],[t.lng,t.lat]]},properties:{mode:this.mode}}]);this.currentInitialArcId=e,this.currentCoordinate++}else 2===this.currentCoordinate&&this.currentStartingPointId?this.currentCoordinate++:3===this.currentCoordinate&&this.currentStartingPointId&&this.close()}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onKeyDown(){}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){try{this.currentStartingPointId&&this.store.delete([this.currentStartingPointId]),this.currentInitialArcId&&this.store.delete([this.currentInitialArcId]),this.currentId&&this.store.delete([this.currentId])}catch(t){}this.currentStartingPointId=void 0,this.direction=void 0,this.currentId=void 0,this.currentCoordinate=0,\"drawing\"===this.state&&this.setStarted()}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});return e.properties.mode===this.mode&&(\"Polygon\"===e.geometry.type?(i.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,i.polygonFillColor,e),i.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,i.polygonOutlineColor,e),i.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,i.polygonOutlineWidth,e),i.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,i.polygonFillOpacity,e),i.zIndex=10):\"LineString\"===e.geometry.type?(i.lineStringColor=this.getHexColorStylingValue(this.styles.outlineColor,i.polygonOutlineColor,e),i.lineStringWidth=this.getNumericStylingValue(this.styles.outlineWidth,i.polygonOutlineWidth,e),i.zIndex=10):\"Point\"===e.geometry.type&&(i.pointColor=this.getHexColorStylingValue(this.styles.centerPointColor,i.pointColor,e),i.pointWidth=this.getNumericStylingValue(this.styles.centerPointWidth,i.pointWidth,e),i.pointOutlineColor=this.getHexColorStylingValue(this.styles.centerPointOutlineColor,i.pointOutlineColor,e),i.pointOutlineWidth=this.getNumericStylingValue(this.styles.centerPointOutlineWidth,i.pointOutlineWidth,e),i.zIndex=20)),i}validateFeature(t){return this.validateModeFeature(t,t=>V(t,this.coordinatePrecision))}getDeltaBearing(t,e,i){let o;return\"anticlockwise\"===t?(o=i-e,o<0&&(o+=360)):(o=e-i,o<0&&(o+=360)),o}notInSector({normalizedCursor:t,normalizedStart:e,normalizedEnd:i,direction:o}){return\"clockwise\"===o?e<=i?t>=e&&t<=i:t>=e||t<=i:e>=i?t<=e&&t>=i:t<=e||t>=i}}class Ae{constructor({name:t,callback:e,unregister:i,register:o}){this.name=void 0,this.callback=void 0,this.registered=!1,this.register=void 0,this.unregister=void 0,this.name=t,this.register=()=>{this.registered||(this.registered=!0,o(e))},this.unregister=()=>{this.register&&(this.registered=!1,i(e))},this.callback=e}}var Re={__proto__:null,GeoJSONStore:Pe,TerraDrawBaseDrawMode:g,TerraDrawBaseSelectMode:y,TerraDrawBaseAdapter:class{constructor(t){this._minPixelDragDistance=void 0,this._minPixelDragDistanceDrawing=void 0,this._minPixelDragDistanceSelecting=void 0,this._lastDrawEvent=void 0,this._coordinatePrecision=void 0,this._heldKeys=new Set,this._listeners=[],this._dragState=\"not-dragging\",this._currentModeCallbacks=void 0,this._minPixelDragDistance=\"number\"==typeof t.minPixelDragDistance?t.minPixelDragDistance:1,this._minPixelDragDistanceSelecting=\"number\"==typeof t.minPixelDragDistanceSelecting?t.minPixelDragDistanceSelecting:1,this._minPixelDragDistanceDrawing=\"number\"==typeof t.minPixelDragDistanceDrawing?t.minPixelDragDistanceDrawing:8,this._coordinatePrecision=\"number\"==typeof t.coordinatePrecision?t.coordinatePrecision:9}getButton(t){return-1===t.button?\"neither\":0===t.button?\"left\":1===t.button?\"middle\":2===t.button?\"right\":\"neither\"}getMapElementXYPosition(t){const e=this.getMapEventElement(),{left:i,top:o}=e.getBoundingClientRect();return{containerX:t.clientX-i,containerY:t.clientY-o}}getDrawEventFromEvent(t){const e=this.getLngLatFromEvent(t);if(!e)return null;const{lng:i,lat:o}=e,{containerX:s,containerY:n}=this.getMapElementXYPosition(t),r=this.getButton(t),a=Array.from(this._heldKeys);return{lng:I(i,this._coordinatePrecision),lat:I(o,this._coordinatePrecision),containerX:s,containerY:n,button:r,heldKeys:a}}register(t){this._currentModeCallbacks=t,this._listeners=this.getAdapterListeners(),this._listeners.forEach(t=>{t.register()})}getCoordinatePrecision(){return this._coordinatePrecision}getAdapterListeners(){return[new Ae({name:\"pointerdown\",callback:t=>{if(!this._currentModeCallbacks)return;if(!t.isPrimary)return;const e=this.getDrawEventFromEvent(t);e&&(this._dragState=\"pre-dragging\",this._lastDrawEvent=e)},register:t=>{this.getMapEventElement().addEventListener(\"pointerdown\",t)},unregister:t=>{this.getMapEventElement().removeEventListener(\"pointerdown\",t)}}),new Ae({name:\"pointermove\",callback:t=>{if(!this._currentModeCallbacks)return;if(!t.isPrimary)return;t.preventDefault();const e=this.getDrawEventFromEvent(t);if(e)if(\"not-dragging\"===this._dragState)this._currentModeCallbacks.onMouseMove(e),this._lastDrawEvent=e;else if(\"pre-dragging\"===this._dragState){if(!this._lastDrawEvent)return;const t={x:this._lastDrawEvent.containerX,y:this._lastDrawEvent.containerY},i={x:e.containerX,y:e.containerY},o=this._currentModeCallbacks.getState(),s=R(t,i);let n=!1;if(n=\"drawing\"===o?s<this._minPixelDragDistanceDrawing:\"selecting\"===o?s<this._minPixelDragDistanceSelecting:s<this._minPixelDragDistance,n)return;this._dragState=\"dragging\",this._currentModeCallbacks.onDragStart(e,t=>{this.setDraggability.bind(this)(t)})}else\"dragging\"===this._dragState&&this._currentModeCallbacks.onDrag(e,t=>{this.setDraggability.bind(this)(t)})},register:t=>{this.getMapEventElement().addEventListener(\"pointermove\",t)},unregister:t=>{this.getMapEventElement().removeEventListener(\"pointermove\",t)}}),new Ae({name:\"contextmenu\",callback:t=>{this._currentModeCallbacks&&t.preventDefault()},register:t=>{this.getMapEventElement().addEventListener(\"contextmenu\",t)},unregister:t=>{this.getMapEventElement().removeEventListener(\"contextmenu\",t)}}),new Ae({name:\"pointerup\",callback:t=>{if(!this._currentModeCallbacks)return;if(t.target!==this.getMapEventElement())return;if(!t.isPrimary)return;const e=this.getDrawEventFromEvent(t);e&&(\"dragging\"===this._dragState?this._currentModeCallbacks.onDragEnd(e,t=>{this.setDraggability.bind(this)(t)}):\"not-dragging\"!==this._dragState&&\"pre-dragging\"!==this._dragState||this._currentModeCallbacks.onClick(e),this._dragState=\"not-dragging\",this.setDraggability(!0))},register:t=>{this.getMapEventElement().addEventListener(\"pointerup\",t)},unregister:t=>{this.getMapEventElement().removeEventListener(\"pointerup\",t)}}),new Ae({name:\"keyup\",callback:t=>{this._currentModeCallbacks&&(this._heldKeys.delete(t.key),this._currentModeCallbacks.onKeyUp({key:t.key,heldKeys:Array.from(this._heldKeys),preventDefault:()=>t.preventDefault()}))},register:t=>{this.getMapEventElement().addEventListener(\"keyup\",t)},unregister:t=>{this.getMapEventElement().removeEventListener(\"keyup\",t)}}),new Ae({name:\"keydown\",callback:t=>{this._currentModeCallbacks&&(this._heldKeys.add(t.key),this._currentModeCallbacks.onKeyDown({key:t.key,heldKeys:Array.from(this._heldKeys),preventDefault:()=>t.preventDefault()}))},register:t=>{this.getMapEventElement().addEventListener(\"keydown\",t)},unregister:t=>{this.getMapEventElement().removeEventListener(\"keydown\",t)}})]}unregister(){this._listeners.forEach(t=>{t.unregister()}),this.clear()}},getDefaultStyling:()=>({polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0}),SELECT_PROPERTIES:i};const Ke={ValidationReasonFeatureNotPoint:Pt,ValidationReasonFeatureInvalidCoordinates:It,ValidationReasonFeatureInvalidCoordinatePrecision:xt,ValidationReasonFeatureNotPolygon:c,ValidationReasonFeatureHasHoles:W,ValidationReasonFeatureLessThanFourCoordinates:B,ValidationReasonFeatureHasInvalidCoordinates:N,ValidationReasonFeatureCoordinatesNotClosed:G,ValidationReasonFeatureNotPolygonOrLineString:we,ValidationReasonFeatureSelfIntersects:be,ValidationReasonFeatureLessThanMinSize:Fe,ValidationReasonModeMismatch:u};class Xe{constructor(e){this._modes=void 0,this._mode=void 0,this._adapter=void 0,this._enabled=!1,this._store=void 0,this._eventListeners=void 0,this._instanceSelectMode=void 0,this._adapter=e.adapter,this._mode=new ie;const i=new Set,o=e.modes.reduce((t,e)=>{if(i.has(e.mode))throw new Error(`There is already a ${e.mode} mode provided`);return i.add(e.mode),t[e.mode]=e,t},{}),s=Object.keys(o);if(0===s.length)throw new Error(\"No modes provided\");s.forEach(t=>{if(o[t].type===p.Select){if(this._instanceSelectMode)throw new Error(\"only one type of select mode can be provided\");this._instanceSelectMode=t}}),this._modes=t({},o,{static:this._mode}),this._eventListeners={change:[],select:[],deselect:[],finish:[],ready:[]},this._store=new Pe({tracked:!!e.tracked,idStrategy:e.idStrategy?e.idStrategy:void 0});const n=t=>{const e=[],i=this._store.copyAll().filter(i=>!t.includes(i.id)||(e.push(i),!1));return{changed:e,unchanged:i}},r=(t,e)=>{this._enabled&&this._eventListeners.finish.forEach(i=>{i(t,e)})},a=(t,e,i)=>{if(!this._enabled)return;this._eventListeners.change.forEach(o=>{o(t,e,i)});const{changed:o,unchanged:s}=n(t);\"create\"===e?this._adapter.render({created:o,deletedIds:[],unchanged:s,updated:[]},this.getModeStyles()):\"update\"===e?this._adapter.render({created:[],deletedIds:[],unchanged:s,updated:o},this.getModeStyles()):\"delete\"===e?this._adapter.render({created:[],deletedIds:t,unchanged:s,updated:[]},this.getModeStyles()):\"styling\"===e&&this._adapter.render({created:[],deletedIds:[],unchanged:s,updated:[]},this.getModeStyles())},d=t=>{if(!this._enabled)return;this._eventListeners.select.forEach(e=>{e(t)});const{changed:e,unchanged:i}=n([t]);this._adapter.render({created:[],deletedIds:[],unchanged:i,updated:e},this.getModeStyles())},h=t=>{if(!this._enabled)return;this._eventListeners.deselect.forEach(t=>{t()});const{changed:e,unchanged:i}=n([t]);e&&this._adapter.render({created:[],deletedIds:[],unchanged:i,updated:e},this.getModeStyles())};Object.keys(this._modes).forEach(t=>{this._modes[t].register({mode:t,store:this._store,setCursor:this._adapter.setCursor.bind(this._adapter),project:this._adapter.project.bind(this._adapter),unproject:this._adapter.unproject.bind(this._adapter),setDoubleClickToZoom:this._adapter.setDoubleClickToZoom.bind(this._adapter),onChange:a,onSelect:d,onDeselect:h,onFinish:r,coordinatePrecision:this._adapter.getCoordinatePrecision()})})}checkEnabled(){if(!this._enabled)throw new Error(\"Terra Draw is not enabled\")}getModeStyles(){const t={};return Object.keys(this._modes).forEach(e=>{t[e]=t=>this._instanceSelectMode&&t.properties[i.SELECTED]?this._modes[this._instanceSelectMode].styleFeature.bind(this._modes[this._instanceSelectMode])(t):this._modes[e].styleFeature.bind(this._modes[e])(t)}),t}featuresAtLocation({lng:t,lat:e},o){const s=o&&void 0!==o.pointerDistance?o.pointerDistance:30,n=!o||void 0===o.ignoreSelectFeatures||o.ignoreSelectFeatures,r=this._adapter.unproject.bind(this._adapter),a=this._adapter.project.bind(this._adapter),d=a(t,e),h=q({unproject:r,point:d,pointerDistance:s});return this._store.search(h).filter(o=>{if(n&&(o.properties[i.MID_POINT]||o.properties[i.SELECTION_POINT]))return!1;if(\"Point\"===o.geometry.type){const t=o.geometry.coordinates,e=a(t[0],t[1]);return R(d,e)<s}if(\"LineString\"===o.geometry.type){const t=o.geometry.coordinates;for(let e=0;e<t.length-1;e++){const i=t[e],o=t[e+1];if(Rt(d,a(i[0],i[1]),a(o[0],o[1]))<s)return!0}return!1}return!!At([t,e],o.geometry.coordinates)||void 0})}getSelectMode(){if(this.checkEnabled(),!this._instanceSelectMode)throw new Error(\"No select mode defined in instance\");return this.getMode()!==this._instanceSelectMode&&this.setMode(this._instanceSelectMode),this._modes[this._instanceSelectMode]}setModeStyles(t,e){if(this.checkEnabled(),!this._modes[t])throw new Error(\"No mode with this name present\");this._modes[t].styles=e}updateModeOptions(t,e){if(this.checkEnabled(),!this._modes[t])throw new Error(\"No mode with this name present\");this._modes[t].updateOptions(e)}getSnapshot(){return this._store.copyAll()}getSnapshotFeature(t){if(this._store.has(t))return this._store.copy(t)}clear(){this.checkEnabled(),this._adapter.clear()}get enabled(){return this._enabled}set enabled(t){throw new Error(\"Enabled is read only\")}getMode(){return this._mode.mode}setMode(t){if(this.checkEnabled(),!this._modes[t])throw new Error(\"No mode with this name present\");this._mode.stop(),this._mode=this._modes[t],this._mode.start()}removeFeatures(t){this.checkEnabled();const e=[];t.forEach(t=>{if(!this._store.has(t))throw new Error(`No feature with id ${t}, can not delete`);const o=this._store.copy(t);o.properties[i.SELECTED]&&this.deselectFeature(t),o.properties[a]&&e.push(...o.properties[a])}),this._store.delete([...t,...e],{origin:\"api\"})}selectFeature(t){this.getSelectMode().selectFeature(t)}deselectFeature(t){this.getSelectMode().deselectFeature(t)}getFeatureId(){return this._store.getId()}hasFeature(t){return this._store.has(t)}addFeatures(t){return this.checkEnabled(),0===t.length?[]:this._store.load(t,t=>{if(h(t)){const e=t.properties.mode,i=this._modes[e];if(!i)return{id:t.id,valid:!1,reason:`${e} mode is not in the list of instantiated modes`};const o=i.validateFeature.bind(i)(t);return{id:t.id,valid:o.valid,reason:o.reason?o.reason:o.valid?void 0:\"Feature is invalid\"}}return{id:t.id,valid:!1,reason:\"Mode property does not exist\"}},t=>{if(h(t)){const e=this._modes[t.properties.mode];e&&e.afterFeatureAdded&&e.afterFeatureAdded(t)}},{origin:\"api\"})}start(){this._enabled=!0,this._adapter.register({onReady:()=>{this._eventListeners.ready.forEach(t=>{t()})},getState:()=>this._mode.state,onClick:t=>{this._mode.onClick(t)},onMouseMove:t=>{this._mode.onMouseMove(t)},onKeyDown:t=>{this._mode.onKeyDown(t)},onKeyUp:t=>{this._mode.onKeyUp(t)},onDragStart:(t,e)=>{this._mode.onDragStart(t,e)},onDrag:(t,e)=>{this._mode.onDrag(t,e)},onDragEnd:(t,e)=>{this._mode.onDragEnd(t,e)},onClear:()=>{this._mode.cleanUp(),this._store.clear()}})}getFeaturesAtLngLat(t,e){const{lng:i,lat:o}=t;return this.featuresAtLocation({lng:i,lat:o},e)}getFeaturesAtPointerEvent(t,e){const i=this._adapter.getLngLatFromEvent.bind(this._adapter)(t);return null===i?[]:this.featuresAtLocation(i,e)}stop(){this._enabled=!1,this._adapter.unregister()}on(t,e){const i=this._eventListeners[t];i.includes(e)||i.push(e)}off(t,e){const i=this._eventListeners[t];i.includes(e)&&i.splice(i.indexOf(e),1)}}export{Xe as TerraDraw,We as TerraDrawAngledRectangleMode,A as TerraDrawCircleMode,Re as TerraDrawExtend,Y as TerraDrawFreehandMode,vt as TerraDrawLineStringMode,Ft as TerraDrawPointMode,kt as TerraDrawPolygonMode,jt as TerraDrawRectangleMode,Wt as TerraDrawRenderMode,Le as TerraDrawSectorMode,ee as TerraDrawSelectMode,Ue as TerraDrawSensorMode,De as ValidateMaxAreaSquareMeters,Ee as ValidateMinAreaSquareMeters,ke as ValidateNotSelfIntersecting,Ke as ValidationReasons};\n//# sourceMappingURL=terra-draw.modern.js.map\n","import{TerraDrawExtend as e}from\"terra-draw\";class t extends e.TerraDrawBaseAdapter{constructor(e){super(e),this._initialDragPan=void 0,this._initialDragRotate=void 0,this._nextRender=void 0,this._map=void 0,this._container=void 0,this._rendered=!1,this.changedIds={deletion:!1,points:!1,linestrings:!1,polygons:!1,styling:!1},this._map=e.map,this._container=this._map.getContainer(),this._initialDragRotate=this._map.dragRotate.isEnabled(),this._initialDragPan=this._map.dragPan.isEnabled()}clearLayers(){this._rendered&&([\"point\",\"linestring\",\"polygon\"].forEach(e=>{const t=`td-${e.toLowerCase()}`;this._map.removeLayer(t),\"polygon\"===e&&this._map.removeLayer(t+\"-outline\"),\"point\"===e&&(this._map.removeLayer(t+\"-lower\"),this._map.removeSource(t+\"-lower\")),this._map.removeSource(t)}),this._rendered=!1,this._nextRender&&(cancelAnimationFrame(this._nextRender),this._nextRender=void 0))}_addGeoJSONSource(e,t){this._map.addSource(e,{type:\"geojson\",data:{type:\"FeatureCollection\",features:t},tolerance:0})}_addFillLayer(e){return this._map.addLayer({id:e,source:e,type:\"fill\",paint:{\"fill-color\":[\"get\",\"polygonFillColor\"],\"fill-opacity\":[\"get\",\"polygonFillOpacity\"]}})}_addFillOutlineLayer(e){return this._map.addLayer({id:e+\"-outline\",source:e,type:\"line\",paint:{\"line-width\":[\"get\",\"polygonOutlineWidth\"],\"line-color\":[\"get\",\"polygonOutlineColor\"]}})}_addLineLayer(e){return this._map.addLayer({id:e,source:e,type:\"line\",paint:{\"line-width\":[\"get\",\"lineStringWidth\"],\"line-color\":[\"get\",\"lineStringColor\"]}})}_addPointLayer(e){return this._map.addLayer({id:e,source:e,type:\"circle\",paint:{\"circle-stroke-color\":[\"get\",\"pointOutlineColor\"],\"circle-stroke-width\":[\"get\",\"pointOutlineWidth\"],\"circle-radius\":[\"get\",\"pointWidth\"],\"circle-color\":[\"get\",\"pointColor\"]}})}_addLayer(e,t){\"Point\"===t&&this._addPointLayer(e),\"LineString\"===t&&this._addLineLayer(e),\"Polygon\"===t&&(this._addFillLayer(e),this._addFillOutlineLayer(e))}_addGeoJSONLayer(e,t,i){const n=`td-${e.toLowerCase()}${i?`-${i}`:\"\"}`;return this._addGeoJSONSource(n,t),this._addLayer(n,e),n}_setGeoJSONLayerData(e,t,i){const n=`td-${e.toLowerCase()}${i?`-${i}`:\"\"}`;return this._map.getSource(n).setData({type:\"FeatureCollection\",features:t}),n}updateChangedIds(e){[...e.updated,...e.created].forEach(e=>{\"Point\"===e.geometry.type?this.changedIds.points=!0:\"LineString\"===e.geometry.type?this.changedIds.linestrings=!0:\"Polygon\"===e.geometry.type&&(this.changedIds.polygons=!0)}),e.deletedIds.length>0&&(this.changedIds.deletion=!0),0===e.created.length&&0===e.updated.length&&0===e.deletedIds.length&&(this.changedIds.styling=!0)}getLngLatFromEvent(e){const{left:t,top:i}=this._container.getBoundingClientRect();return this.unproject(e.clientX-t,e.clientY-i)}getMapEventElement(){return this._map.getCanvas()}setDraggability(e){e?(this._initialDragRotate&&this._map.dragRotate.enable(),this._initialDragPan&&this._map.dragPan.enable()):(this._initialDragRotate&&this._map.dragRotate.disable(),this._initialDragPan&&this._map.dragPan.disable())}project(e,t){const{x:i,y:n}=this._map.project({lng:e,lat:t});return{x:i,y:n}}unproject(e,t){const{lng:i,lat:n}=this._map.unproject({x:e,y:t});return{lng:i,lat:n}}setCursor(e){const t=this._map.getCanvas();\"unset\"===e?t.style.removeProperty(\"cursor\"):t.style.cursor=e}setDoubleClickToZoom(e){e?this._map.doubleClickZoom.enable():this._map.doubleClickZoom.disable()}render(e,t){this.updateChangedIds(e),this._nextRender&&cancelAnimationFrame(this._nextRender),this._nextRender=requestAnimationFrame(()=>{const i=[...e.created,...e.updated,...e.unchanged],n=[],o=[],r=[],a=[];for(let e=0;e<i.length;e++){const s=i[e],{properties:l}=s,d=t[l.mode](s);\"Point\"===s.geometry.type?(l.pointColor=d.pointColor,l.pointOutlineColor=d.pointOutlineColor,l.pointOutlineWidth=d.pointOutlineWidth,l.pointWidth=d.pointWidth,d.zIndex<30?n.push(s):o.push(s)):\"LineString\"===s.geometry.type?(l.lineStringColor=d.lineStringColor,l.lineStringWidth=d.lineStringWidth,r.push(s)):\"Polygon\"===s.geometry.type&&(l.polygonFillColor=d.polygonFillColor,l.polygonFillOpacity=d.polygonFillOpacity,l.polygonOutlineColor=d.polygonOutlineColor,l.polygonOutlineWidth=d.polygonOutlineWidth,a.push(s))}if(this._rendered){const e=this.changedIds.deletion||this.changedIds.styling,t=e||this.changedIds.linestrings,i=e||this.changedIds.polygons;let s,l;(e||this.changedIds.points)&&(s=this._setGeoJSONLayerData(\"Point\",o),l=this._setGeoJSONLayerData(\"Point\",n,\"lower\")),t&&this._setGeoJSONLayerData(\"LineString\",r),i&&this._setGeoJSONLayerData(\"Polygon\",a),s&&(this._map.moveLayer(s),l&&this._map.moveLayer(l,s))}this.changedIds={points:!1,linestrings:!1,polygons:!1,deletion:!1,styling:!1}})}clear(){this._currentModeCallbacks&&(this._currentModeCallbacks.onClear(),this.clearLayers())}getCoordinatePrecision(){return super.getCoordinatePrecision()}unregister(){return super.unregister()}register(e){var t;super.register(e);const i=this._addGeoJSONLayer(\"Point\",[]),n=this._addGeoJSONLayer(\"Point\",[],\"lower\");this._addGeoJSONLayer(\"LineString\",[]),this._addGeoJSONLayer(\"Polygon\",[]),i&&(this._map.moveLayer(i),n&&this._map.moveLayer(n,i)),this._rendered=!0,null!=(t=this._currentModeCallbacks)&&t.onReady&&this._currentModeCallbacks.onReady()}}export{t as TerraDrawMapLibreGLAdapter};\n//# sourceMappingURL=terra-draw-maplibre-gl-adapter.modern.js.map\n","/**\n * The list of available Terra Draw drawing modes for MaplibreTerraDrawControl\n *\n * `render` is a special mode and this is appeared as toggle button to expand/collapse the tool.\n * If you always want the tool to be visible, `render` can be removed and set `open` property of the constructor as true.\n *\n * `delete-selection` button is only appeared, when the select button is active.\n *\n * If no drawing feature is in TerraDraw, `delete` and `download` are disabled.\n */\nexport const AvailableModes = [\n\t'render',\n\t'point',\n\t'linestring',\n\t'polygon',\n\t'rectangle',\n\t'circle',\n\t'freehand',\n\t'angled-rectangle',\n\t'sensor',\n\t'sector',\n\t'select',\n\t'delete-selection',\n\t'delete',\n\t'download'\n] as const;\n","import type { TerradrawControlOptions } from '../interfaces/TerradrawControlOptions';\n\n/**\n * Default control options\n */\nexport const defaultControlOptions: TerradrawControlOptions = {\n\tmodes: [\n\t\t'render',\n\t\t'point',\n\t\t'linestring',\n\t\t'polygon',\n\t\t'rectangle',\n\t\t'angled-rectangle',\n\t\t'sensor',\n\t\t'sector',\n\t\t'circle',\n\t\t'freehand',\n\t\t'select',\n\t\t'delete-selection',\n\t\t'delete',\n\t\t'download'\n\t],\n\topen: false\n};\n","import {\n\tTerraDrawAngledRectangleMode,\n\tTerraDrawCircleMode,\n\tTerraDrawFreehandMode,\n\tTerraDrawLineStringMode,\n\tTerraDrawPointMode,\n\tTerraDrawPolygonMode,\n\tTerraDrawRectangleMode,\n\tTerraDrawSectorMode,\n\tTerraDrawSelectMode,\n\tTerraDrawSensorMode\n} from 'terra-draw';\nimport type { MeasureControlOptions } from '../interfaces/MeasureControlOptions';\n\n/**\n * Default MeasureControl options\n */\nexport const defaultMeasureControlOptions: MeasureControlOptions = {\n\tmodes: [\n\t\t'render',\n\t\t'point',\n\t\t'linestring',\n\t\t'polygon',\n\t\t'rectangle',\n\t\t'angled-rectangle',\n\t\t'sensor',\n\t\t'sector',\n\t\t'circle',\n\t\t'freehand',\n\t\t'select',\n\t\t'delete-selection',\n\t\t'delete',\n\t\t'download'\n\t],\n\topen: false,\n\t// see styling parameters of Terra Draw at https://github.com/JamesLMilner/terra-draw/blob/main/guides/5.STYLING.md\n\tmodeOptions: {\n\t\tpoint: new TerraDrawPointMode({\n\t\t\teditable: true,\n\t\t\tstyles: {\n\t\t\t\tpointColor: '#FFFFFF',\n\t\t\t\tpointWidth: 5,\n\t\t\t\tpointOutlineColor: '#666666',\n\t\t\t\tpointOutlineWidth: 1\n\t\t\t}\n\t\t}),\n\t\tlinestring: new TerraDrawLineStringMode({\n\t\t\teditable: true,\n\t\t\tstyles: {\n\t\t\t\tlineStringColor: '#666666',\n\t\t\t\tlineStringWidth: 2,\n\t\t\t\tclosingPointColor: '#FFFFFF',\n\t\t\t\tclosingPointWidth: 3,\n\t\t\t\tclosingPointOutlineColor: '#666666',\n\t\t\t\tclosingPointOutlineWidth: 1\n\t\t\t}\n\t\t}),\n\t\tpolygon: new TerraDrawPolygonMode({\n\t\t\teditable: true,\n\t\t\tstyles: {\n\t\t\t\tfillColor: '#EDEFF0',\n\t\t\t\tfillOpacity: 0.7,\n\t\t\t\toutlineColor: '#666666',\n\t\t\t\toutlineWidth: 2,\n\t\t\t\tclosingPointColor: '#FAFAFA',\n\t\t\t\tclosingPointWidth: 3,\n\t\t\t\tclosingPointOutlineColor: '#666666',\n\t\t\t\tclosingPointOutlineWidth: 1\n\t\t\t}\n\t\t}),\n\t\trectangle: new TerraDrawRectangleMode({\n\t\t\tstyles: {\n\t\t\t\tfillColor: '#EDEFF0',\n\t\t\t\tfillOpacity: 0.7,\n\t\t\t\toutlineColor: '#666666',\n\t\t\t\toutlineWidth: 2\n\t\t\t}\n\t\t}),\n\t\t'angled-rectangle': new TerraDrawAngledRectangleMode({\n\t\t\tstyles: {\n\t\t\t\tfillColor: '#EDEFF0',\n\t\t\t\tfillOpacity: 0.7,\n\t\t\t\toutlineColor: '#666666',\n\t\t\t\toutlineWidth: 2\n\t\t\t}\n\t\t}),\n\t\tcircle: new TerraDrawCircleMode({\n\t\t\tstyles: {\n\t\t\t\tfillColor: '#EDEFF0',\n\t\t\t\tfillOpacity: 0.7,\n\t\t\t\toutlineColor: '#666666',\n\t\t\t\toutlineWidth: 2\n\t\t\t}\n\t\t}),\n\t\tfreehand: new TerraDrawFreehandMode({\n\t\t\tstyles: {\n\t\t\t\tfillColor: '#EDEFF0',\n\t\t\t\tfillOpacity: 0.7,\n\t\t\t\toutlineColor: '#666666',\n\t\t\t\toutlineWidth: 2,\n\t\t\t\tclosingPointColor: '#FAFAFA',\n\t\t\t\tclosingPointWidth: 3,\n\t\t\t\tclosingPointOutlineColor: '#666666',\n\t\t\t\tclosingPointOutlineWidth: 1\n\t\t\t}\n\t\t}),\n\t\tsensor: new TerraDrawSensorMode({\n\t\t\tstyles: {\n\t\t\t\tfillColor: '#EDEFF0',\n\t\t\t\tfillOpacity: 0.7,\n\t\t\t\toutlineColor: '#666666',\n\t\t\t\toutlineWidth: 2,\n\t\t\t\tcenterPointColor: '#FAFAFA',\n\t\t\t\tcenterPointWidth: 3,\n\t\t\t\tcenterPointOutlineColor: '#666666',\n\t\t\t\tcenterPointOutlineWidth: 1\n\t\t\t}\n\t\t}),\n\t\tsector: new TerraDrawSectorMode({\n\t\t\tstyles: {\n\t\t\t\tfillColor: '#EDEFF0',\n\t\t\t\tfillOpacity: 0.7,\n\t\t\t\toutlineColor: '#666666',\n\t\t\t\toutlineWidth: 2\n\t\t\t}\n\t\t}),\n\t\tselect: new TerraDrawSelectMode({\n\t\t\tflags: {\n\t\t\t\tpoint: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tpolygon: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlinestring: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfreehand: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcircle: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trectangle: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'angled-rectangle': {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsensor: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsector: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\tpointLayerLabelSpec: {\n\t\tid: 'terradraw-measure-point-label',\n\t\ttype: 'symbol',\n\t\tsource: 'terradraw-measure-point-source',\n\t\tfilter: ['all', ['==', '$type', 'Point'], ['==', 'mode', 'point']],\n\t\tlayout: {\n\t\t\t'text-field': [\n\t\t\t\t'case',\n\t\t\t\t['all', ['has', 'elevation'], ['>', ['get', 'elevation'], 0]],\n\t\t\t\t['concat', 'Alt. ', ['to-string', ['floor', ['get', 'elevation']]], ' m'],\n\t\t\t\t''\n\t\t\t],\n\t\t\t'symbol-placement': 'point',\n\t\t\t'text-size': [\n\t\t\t\t'interpolate',\n\t\t\t\t['linear'],\n\t\t\t\t['zoom'],\n\t\t\t\t5,\n\t\t\t\t10,\n\t\t\t\t10,\n\t\t\t\t12.0,\n\t\t\t\t13,\n\t\t\t\t14.0,\n\t\t\t\t14,\n\t\t\t\t16.0,\n\t\t\t\t18,\n\t\t\t\t18.0\n\t\t\t],\n\t\t\t'text-overlap': 'always',\n\t\t\t'text-variable-anchor': ['left', 'right', 'top', 'bottom'],\n\t\t\t'text-radial-offset': 0.5,\n\t\t\t'text-justify': 'center',\n\t\t\t'text-letter-spacing': 0.05\n\t\t},\n\t\tpaint: {\n\t\t\t'text-halo-color': '#F7F7F7',\n\t\t\t'text-halo-width': 2,\n\t\t\t'text-color': '#232E3D'\n\t\t}\n\t},\n\tlineLayerLabelSpec: {\n\t\tid: 'terradraw-measure-line-label',\n\t\ttype: 'symbol',\n\t\tsource: 'terradraw-measure-line-source',\n\t\tfilter: ['==', '$type', 'Point'],\n\t\tlayout: {\n\t\t\t'text-field': [\n\t\t\t\t'concat',\n\t\t\t\t['to-string', ['get', 'distance']],\n\t\t\t\t' ',\n\t\t\t\t['get', 'unit'],\n\t\t\t\t[\n\t\t\t\t\t'case',\n\t\t\t\t\t['==', ['get', 'total'], 0],\n\t\t\t\t\t'',\n\t\t\t\t\t['concat', '\\n(', ['to-string', ['get', 'total']], ' ', ['get', 'totalUnit'], ')']\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'case',\n\t\t\t\t\t['all', ['has', 'elevation'], ['>', ['get', 'elevation'], 0]],\n\t\t\t\t\t['concat', '\\nAlt. ', ['to-string', ['floor', ['get', 'elevation']]], ' m'],\n\t\t\t\t\t''\n\t\t\t\t]\n\t\t\t],\n\t\t\t'symbol-placement': 'point',\n\t\t\t'text-size': [\n\t\t\t\t'interpolate',\n\t\t\t\t['linear'],\n\t\t\t\t['zoom'],\n\t\t\t\t5,\n\t\t\t\t10,\n\t\t\t\t10,\n\t\t\t\t12.0,\n\t\t\t\t13,\n\t\t\t\t14.0,\n\t\t\t\t14,\n\t\t\t\t16.0,\n\t\t\t\t18,\n\t\t\t\t18.0\n\t\t\t],\n\t\t\t'text-overlap': 'always',\n\t\t\t'text-variable-anchor': ['left', 'right', 'top', 'bottom'],\n\t\t\t'text-radial-offset': 0.5,\n\t\t\t'text-justify': 'center',\n\t\t\t'text-letter-spacing': 0.05\n\t\t},\n\t\tpaint: {\n\t\t\t'text-halo-color': '#F7F7F7',\n\t\t\t'text-halo-width': 2,\n\t\t\t'text-color': '#232E3D'\n\t\t}\n\t},\n\tlineLayerNodeSpec: {\n\t\tid: 'terradraw-measure-line-node',\n\t\ttype: 'circle',\n\t\tsource: 'terradraw-measure-line-source',\n\t\tfilter: ['==', '$type', 'Point'],\n\t\tlayout: {},\n\t\tpaint: {\n\t\t\t'circle-radius': 3,\n\t\t\t'circle-color': '#FFFFFF',\n\t\t\t'circle-stroke-color': '#000000',\n\t\t\t'circle-stroke-width': 1\n\t\t}\n\t},\n\tpolygonLayerSpec: {\n\t\tid: 'terradraw-measure-polygon-label',\n\t\ttype: 'symbol',\n\t\tsource: 'terradraw-measure-polygon-source',\n\t\tfilter: ['==', '$type', 'Point'],\n\t\tlayout: {\n\t\t\t'text-field': ['concat', ['to-string', ['get', 'area']], ' ', ['get', 'unit']],\n\t\t\t'symbol-placement': 'point',\n\t\t\t'text-size': [\n\t\t\t\t'interpolate',\n\t\t\t\t['linear'],\n\t\t\t\t['zoom'],\n\t\t\t\t5,\n\t\t\t\t10,\n\t\t\t\t10,\n\t\t\t\t12.0,\n\t\t\t\t13,\n\t\t\t\t14.0,\n\t\t\t\t14,\n\t\t\t\t16.0,\n\t\t\t\t18,\n\t\t\t\t18.0\n\t\t\t],\n\t\t\t'text-overlap': 'always',\n\t\t\t'text-letter-spacing': 0.05\n\t\t},\n\t\tpaint: {\n\t\t\t'text-halo-color': '#F7F7F7',\n\t\t\t'text-halo-width': 2,\n\t\t\t'text-color': '#232E3D'\n\t\t}\n\t},\n\tcomputeElevation: false,\n\tterrainSource: {\n\t\turl: 'https://s3.amazonaws.com/elevation-tiles-prod/terrarium/{z}/{x}/{y}.png',\n\t\tencoding: 'terrarium',\n\t\ttileSize: 256,\n\t\tminzoom: 5,\n\t\tmaxzoom: 15,\n\t\ttms: false\n\t},\n\tdistanceUnit: 'kilometers',\n\tdistancePrecision: 2,\n\tareaUnit: 'metric',\n\tareaPrecision: 2\n};\n","import type { MapGeoJSONFeature } from 'maplibre-gl';\nimport type { ModeOptions } from '../interfaces/ModeOptions';\nimport {\n\tTerraDrawAngledRectangleMode,\n\tTerraDrawCircleMode,\n\tTerraDrawFreehandMode,\n\tTerraDrawLineStringMode,\n\tTerraDrawPointMode,\n\tTerraDrawPolygonMode,\n\tTerraDrawRectangleMode,\n\tTerraDrawRenderMode,\n\tTerraDrawSectorMode,\n\tTerraDrawSelectMode,\n\tTerraDrawSensorMode,\n\tValidateNotSelfIntersecting\n} from 'terra-draw';\n\n/**\n * get default Terra Draw mode instances.\n * @returns default TerraDrawMode objects. Key is TerraDraw mode name, and value is Terra Draw mode object instance\n */\nexport const getDefaultModeOptions = () => {\n\tconst modeOptions: ModeOptions = {\n\t\trender: new TerraDrawRenderMode({\n\t\t\tmodeName: 'render',\n\t\t\tstyles: {}\n\t\t}),\n\t\tpoint: new TerraDrawPointMode({\n\t\t\teditable: true\n\t\t}),\n\t\tlinestring: new TerraDrawLineStringMode({\n\t\t\teditable: true\n\t\t}),\n\t\tpolygon: new TerraDrawPolygonMode({\n\t\t\teditable: true,\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore\n\t\t\tvalidation: (feature: MapGeoJSONFeature, e: { updateType: string }) => {\n\t\t\t\tconst updateType = e.updateType;\n\t\t\t\tif (updateType === 'finish' || updateType === 'commit') {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn ValidateNotSelfIntersecting(feature);\n\t\t\t\t}\n\t\t\t\treturn { valid: true };\n\t\t\t}\n\t\t}),\n\t\trectangle: new TerraDrawRectangleMode(),\n\t\t'angled-rectangle': new TerraDrawAngledRectangleMode(),\n\t\tcircle: new TerraDrawCircleMode(),\n\t\tfreehand: new TerraDrawFreehandMode(),\n\t\tsensor: new TerraDrawSensorMode(),\n\t\tsector: new TerraDrawSectorMode(),\n\t\tselect: new TerraDrawSelectMode({\n\t\t\tflags: {\n\t\t\t\tpoint: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tpolygon: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlinestring: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfreehand: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcircle: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trectangle: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'angled-rectangle': {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsensor: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsector: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\tdelete: new TerraDrawRenderMode({\n\t\t\tmodeName: 'delete',\n\t\t\tstyles: {}\n\t\t}),\n\t\t'delete-selection': new TerraDrawRenderMode({\n\t\t\tmodeName: 'delete-selection',\n\t\t\tstyles: {}\n\t\t}),\n\t\tdownload: new TerraDrawRenderMode({\n\t\t\tmodeName: 'download',\n\t\t\tstyles: {}\n\t\t})\n\t};\n\treturn modeOptions;\n};\n","// index.ts\nvar earthRadius = 63710088e-1;\nvar factors = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1e3,\n  kilometres: earthRadius / 1e3,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1e3,\n  millimetres: earthRadius * 1e3,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936\n};\nvar areaFactors = {\n  acres: 247105e-9,\n  centimeters: 1e4,\n  centimetres: 1e4,\n  feet: 10.763910417,\n  hectares: 1e-4,\n  inches: 1550.003100006,\n  kilometers: 1e-6,\n  kilometres: 1e-6,\n  meters: 1,\n  metres: 1,\n  miles: 386e-9,\n  nauticalmiles: 29155334959812285e-23,\n  millimeters: 1e6,\n  millimetres: 1e6,\n  yards: 1.195990046\n};\nfunction feature(geom, properties, options = {}) {\n  const feat = { type: \"Feature\" };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\nfunction geometry(type, coordinates, _options = {}) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\nfunction point(coordinates, properties, options = {}) {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n  const geom = {\n    type: \"Point\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction points(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return point(coords, properties);\n    }),\n    options\n  );\n}\nfunction polygon(coordinates, properties, options = {}) {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\n        \"Each LinearRing of a Polygon must have 4 or more Positions.\"\n      );\n    }\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom = {\n    type: \"Polygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction polygons(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return polygon(coords, properties);\n    }),\n    options\n  );\n}\nfunction lineString(coordinates, properties, options = {}) {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom = {\n    type: \"LineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction lineStrings(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return lineString(coords, properties);\n    }),\n    options\n  );\n}\nfunction featureCollection(features, options = {}) {\n  const fc = { type: \"FeatureCollection\" };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\nfunction multiLineString(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiLineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPoint(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPoint\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPolygon(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPolygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction geometryCollection(geometries, properties, options = {}) {\n  const geom = {\n    type: \"GeometryCollection\",\n    geometries\n  };\n  return feature(geom, properties, options);\n}\nfunction round(num, precision = 0) {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\nfunction radiansToLength(radians, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\nfunction lengthToRadians(distance, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\nfunction lengthToDegrees(distance, units) {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\nfunction bearingToAzimuth(bearing) {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\nfunction azimuthToBearing(angle) {\n  angle = angle % 360;\n  if (angle > 180) {\n    return angle - 360;\n  } else if (angle < -180) {\n    return angle + 360;\n  }\n  return angle;\n}\nfunction radiansToDegrees(radians) {\n  const normalisedRadians = radians % (2 * Math.PI);\n  return normalisedRadians * 180 / Math.PI;\n}\nfunction degreesToRadians(degrees) {\n  const normalisedDegrees = degrees % 360;\n  return normalisedDegrees * Math.PI / 180;\n}\nfunction convertLength(length, originalUnit = \"kilometers\", finalUnit = \"kilometers\") {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nfunction convertArea(area, originalUnit = \"meters\", finalUnit = \"kilometers\") {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n  return area / startFactor * finalFactor;\n}\nfunction isNumber(num) {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nfunction isObject(input) {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\nfunction validateBBox(bbox) {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach((num) => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\nfunction validateId(id) {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\nexport {\n  areaFactors,\n  azimuthToBearing,\n  bearingToAzimuth,\n  convertArea,\n  convertLength,\n  degreesToRadians,\n  earthRadius,\n  factors,\n  feature,\n  featureCollection,\n  geometry,\n  geometryCollection,\n  isNumber,\n  isObject,\n  lengthToDegrees,\n  lengthToRadians,\n  lineString,\n  lineStrings,\n  multiLineString,\n  multiPoint,\n  multiPolygon,\n  point,\n  points,\n  polygon,\n  polygons,\n  radiansToDegrees,\n  radiansToLength,\n  round,\n  validateBBox,\n  validateId\n};\n//# sourceMappingURL=index.js.map","// index.js\nimport { feature, point, lineString, isObject } from \"@turf/helpers\";\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  if (geojson === null) return;\n  var j, k, l, geometry, stopG, coords, geometryMaybeCollection, wrapShrink = 0, coordIndex = 0, isGeometryCollection, type = geojson.type, isFeatureCollection = type === \"FeatureCollection\", isFeature = type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n      wrapShrink = excludeWrapCoord && (geomType === \"Polygon\" || geomType === \"MultiPolygon\") ? 1 : 0;\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (callback(\n            coords,\n            coordIndex,\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (callback(\n              coords[j],\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false)\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (callback(\n                coords[j][k],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false)\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (callback(\n                  coords[j][k][l],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false)\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false)\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function(currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (coordIndex === 0 && initialValue === void 0)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function(currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function(currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function(coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\nfunction geomEach(geojson, callback) {\n  var i, j, g, geometry, stopG, geometryMaybeCollection, isGeometryCollection, featureProperties, featureBBox, featureId, featureIndex = 0, isFeatureCollection = geojson.type === \"FeatureCollection\", isFeature = geojson.type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[i].geometry : isFeature ? geojson.geometry : geojson;\n    featureProperties = isFeatureCollection ? geojson.features[i].properties : isFeature ? geojson.properties : {};\n    featureBBox = isFeatureCollection ? geojson.features[i].bbox : isFeature ? geojson.bbox : void 0;\n    featureId = isFeatureCollection ? geojson.features[i].id : isFeature ? geojson.id : void 0;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n      if (geometry === null) {\n        if (callback(\n          null,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        ) === false)\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (callback(\n            geometry,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false)\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (callback(\n              geometry.geometries[j],\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false)\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    featureIndex++;\n  }\n}\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function(currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function(geometry, featureIndex, properties, bbox, id) {\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (callback(\n          feature(geometry, properties, { bbox, id }),\n          featureIndex,\n          0\n        ) === false)\n          return false;\n        return;\n    }\n    var geomType;\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n    for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate\n      };\n      if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false)\n        return false;\n    }\n  });\n}\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function(currentFeature, featureIndex, multiFeatureIndex) {\n      if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === void 0)\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n    if (!feature2.geometry) return;\n    var type = feature2.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (coordEach(\n      feature2,\n      function(currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n        if (previousCoords === void 0 || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n          previousCoords = currentCoord;\n          previousFeatureIndex = featureIndex;\n          previousMultiIndex = multiPartIndexCoord;\n          prevGeomIndex = geometryIndex;\n          segmentIndex = 0;\n          return;\n        }\n        var currentSegment = lineString(\n          [previousCoords, currentCoord],\n          feature2.properties\n        );\n        if (callback(\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        ) === false)\n          return false;\n        segmentIndex++;\n        previousCoords = currentCoord;\n      }\n    ) === false)\n      return false;\n  });\n}\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n      if (started === false && initialValue === void 0)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\nfunction lineEach(geojson, callback) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    if (feature2.geometry === null) return;\n    var type = feature2.geometry.type;\n    var coords = feature2.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature2, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n          if (callback(\n            lineString(coords[geometryIndex], feature2.properties),\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n        }\n        break;\n    }\n  });\n}\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function(currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction findSegment(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nfunction findPoint(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nexport {\n  coordAll,\n  coordEach,\n  coordReduce,\n  featureEach,\n  featureReduce,\n  findPoint,\n  findSegment,\n  flattenEach,\n  flattenReduce,\n  geomEach,\n  geomReduce,\n  lineEach,\n  lineReduce,\n  propEach,\n  propReduce,\n  segmentEach,\n  segmentReduce\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { earthRadius } from \"@turf/helpers\";\nimport { geomReduce } from \"@turf/meta\";\nfunction area(geojson) {\n  return geomReduce(\n    geojson,\n    (value, geom) => {\n      return value + calculateArea(geom);\n    },\n    0\n  );\n}\nfunction calculateArea(geom) {\n  let total = 0;\n  let i;\n  switch (geom.type) {\n    case \"Polygon\":\n      return polygonArea(geom.coordinates);\n    case \"MultiPolygon\":\n      for (i = 0; i < geom.coordinates.length; i++) {\n        total += polygonArea(geom.coordinates[i]);\n      }\n      return total;\n    case \"Point\":\n    case \"MultiPoint\":\n    case \"LineString\":\n    case \"MultiLineString\":\n      return 0;\n  }\n  return 0;\n}\nfunction polygonArea(coords) {\n  let total = 0;\n  if (coords && coords.length > 0) {\n    total += Math.abs(ringArea(coords[0]));\n    for (let i = 1; i < coords.length; i++) {\n      total -= Math.abs(ringArea(coords[i]));\n    }\n  }\n  return total;\n}\nvar FACTOR = earthRadius * earthRadius / 2;\nvar PI_OVER_180 = Math.PI / 180;\nfunction ringArea(coords) {\n  const coordsLength = coords.length - 1;\n  if (coordsLength <= 2) return 0;\n  let total = 0;\n  let i = 0;\n  while (i < coordsLength) {\n    const lower = coords[i];\n    const middle = coords[i + 1 === coordsLength ? 0 : i + 1];\n    const upper = coords[i + 2 >= coordsLength ? (i + 2) % coordsLength : i + 2];\n    const lowerX = lower[0] * PI_OVER_180;\n    const middleY = middle[1] * PI_OVER_180;\n    const upperX = upper[0] * PI_OVER_180;\n    total += (upperX - lowerX) * Math.sin(middleY);\n    i++;\n  }\n  return total * FACTOR;\n}\nvar turf_area_default = area;\nexport {\n  area,\n  turf_area_default as default\n};\n//# sourceMappingURL=index.js.map","import type { AreaUnit } from '../interfaces';\n\n/**\n * convert area unit to metric or imperial\n * @param value area value in m2\n * @param unit area unit either metric or imperial\n * @returns result object with area and unit properties adter unit conversion\n */\nexport const convertAreaUnit = (value: number, unit: AreaUnit) => {\n\tlet outputArea = value;\n\tlet outputUnit = 'm²';\n\n\tif (unit === 'metric') {\n\t\tif (value >= 1000000) {\n\t\t\t// 1 km² = 1,000,000 m²\n\t\t\toutputArea = value / 1000000;\n\t\t\toutputUnit = 'km²';\n\t\t} else if (value >= 10000) {\n\t\t\t// 1 ha = 10,000 m²\n\t\t\toutputArea = value / 10000;\n\t\t\toutputUnit = 'ha';\n\t\t}\n\t} else {\n\t\tif (value >= 2589988.11) {\n\t\t\t// 1 mi² = 2,589,988.11 m²\n\t\t\toutputArea = value / 2589988.11;\n\t\t\toutputUnit = 'mi²';\n\t\t} else if (value >= 4046.856) {\n\t\t\t// 1 acre = 4,046.856 m²\n\t\t\toutputArea = value / 4046.856;\n\t\t\toutputUnit = 'acre';\n\t\t} else if (value >= 0.83612736) {\n\t\t\t// 1 yd² = 0.83612736 m²\n\t\t\toutputArea = value / 0.83612736;\n\t\t\toutputUnit = 'yd²';\n\t\t}\n\t}\n\n\treturn { area: outputArea, unit: outputUnit };\n};\n","import type { AreaUnit } from '../interfaces/AreaUnit';\nimport area from '@turf/area';\nimport type { GeoJSONStoreFeatures } from 'terra-draw';\nimport { convertAreaUnit } from './convertAreaUnit';\n\n/**\n * Calculate area from polygon feature\n * @param feature Polygon GeoJSON feature\n * @param areaUnit Area unit\n * @param areaPrecision Precision of area value\n * @returns  The returning feature will contain `area`,`unit` properties.\n */\nexport const calcArea = (\n\tfeature: GeoJSONStoreFeatures,\n\tareaUnit: AreaUnit,\n\tareaPrecision: number\n) => {\n\tif (feature.geometry.type !== 'Polygon') return feature;\n\t// caculate area in m2 by using turf/area\n\tconst result = area(feature.geometry);\n\n\tconst converted = convertAreaUnit(result, areaUnit);\n\tconverted.area = parseFloat(converted.area.toFixed(areaPrecision));\n\n\tfeature.properties.area = converted.area;\n\tfeature.properties.unit = converted.unit;\n\n\treturn feature;\n};\n","// index.ts\nimport { isNumber } from \"@turf/helpers\";\nfunction getCoord(coord) {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n  if (!Array.isArray(coord)) {\n    if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\n    return [...coord];\n  }\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nfunction getCoords(coords) {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n  throw new Error(\n    \"coords must be GeoJSON Feature, Geometry Object or an Array\"\n  );\n}\nfunction containsNumber(coordinates) {\n  if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n    return true;\n  }\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\nfunction geojsonType(value, type, name) {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n  if (!value || value.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type\n    );\n  }\n}\nfunction featureOf(feature, type, name) {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\n      \"Invalid input to \" + name + \", Feature with geometry required\"\n    );\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n    );\n  }\n}\nfunction collectionOf(featureCollection, type, name) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\n      \"Invalid input to \" + name + \", FeatureCollection required\"\n    );\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\n        \"Invalid input to \" + name + \", Feature with geometry required\"\n      );\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\n        \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n      );\n    }\n  }\n}\nfunction getGeom(geojson) {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\nfunction getType(geojson, _name) {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\nexport {\n  collectionOf,\n  containsNumber,\n  featureOf,\n  geojsonType,\n  getCoord,\n  getCoords,\n  getGeom,\n  getType\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians } from \"@turf/helpers\";\nfunction distance(from, to, options = {}) {\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  var lat1 = degreesToRadians(coordinates1[1]);\n  var lat2 = degreesToRadians(coordinates2[1]);\n  var a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(\n    2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n    options.units\n  );\n}\nvar turf_distance_default = distance;\nexport {\n  turf_distance_default as default,\n  distance\n};\n//# sourceMappingURL=index.js.map","import type { DistanceUnit } from '../interfaces/DistanceUnit';\n\n/**\n * Get the equivalent unit name for displaying\n * @param distanceUnit distance unit\n * @returns Unit name for displaying\n */\nexport const getDistanceUnitName = (distanceUnit: DistanceUnit) => {\n\tif (distanceUnit === 'degrees') {\n\t\treturn '°';\n\t} else if (distanceUnit === 'miles') {\n\t\treturn 'mi';\n\t} else if (distanceUnit === 'radians') {\n\t\treturn 'rad';\n\t} else {\n\t\treturn 'km';\n\t}\n};\n","/**\n * Converts a distance in kilometers to the appropriate unit (km, m, or cm).\n * - If the value is 1 km or more, it returns the value in kilometers.\n * - If the value is less than 1 km but 1 meter or more, it returns the value in meters.\n * - If the value is less than 1 meter, it returns the value in centimeters.\n *\n * @param distance - The distance in kilometers.\n * @returns the converted value and unit.\n */\nexport const convertMetricDistance = (\n\tdistance: number\n): { distance: number; unit: 'km' | 'm' | 'cm' } => {\n\tif (distance >= 1) {\n\t\treturn {\n\t\t\tdistance: distance,\n\t\t\tunit: 'km'\n\t\t};\n\t}\n\n\tconst meters = distance * 1000;\n\tif (meters >= 1) {\n\t\treturn {\n\t\t\tdistance: meters,\n\t\t\tunit: 'm'\n\t\t};\n\t}\n\n\tconst centimeters = meters * 100;\n\treturn {\n\t\tdistance: centimeters,\n\t\tunit: 'cm'\n\t};\n};\n","import distance from '@turf/distance';\nimport type { GeoJSONStoreFeatures } from 'terra-draw';\nimport { getDistanceUnitName } from './getDistanceUnitName';\nimport type { LngLatLike, Map } from 'maplibre-gl';\nimport type { DistanceUnit, TerrainSource } from '../interfaces';\nimport { convertMetricDistance } from './convertMetricDistance';\n\n/**\n * Caclulate distance for each segment on a given feature\n * @param feature LineString GeoJSON feature\n * @param distanceUnit Distance unit\n * @param distancePrecision Precision of distance\n * @param map Maplibre map instance\n * @param computeElevation Compute elevation for each segment\n * @param terrainSource Terrain source for elevation calculation. If terrainSource is undefined, going to to query elevation from maplibre terrain.\n * @returns The returning feature will contain `segments`, `distance`, `unit` properties. `segments` will have multiple point features.\n */\nexport const calcDistance = (\n\tfeature: GeoJSONStoreFeatures,\n\tdistanceUnit: DistanceUnit,\n\tdistancePrecision: number,\n\tmap?: Map,\n\tcomputeElevation?: boolean,\n\tterrainSource?: TerrainSource\n) => {\n\tif (feature.geometry.type !== 'LineString') return feature;\n\tconst coordinates: number[][] = (feature as GeoJSONStoreFeatures).geometry\n\t\t.coordinates as number[][];\n\n\t// calculate distance for each segment of LineString feature\n\tlet totalDistance = 0;\n\tconst segments: GeoJSONStoreFeatures[] = [];\n\tfor (let i = 0; i < coordinates.length - 1; i++) {\n\t\tconst start = coordinates[i];\n\t\tconst end = coordinates[i + 1];\n\t\tconst result = distance(start, end, { units: distanceUnit });\n\t\ttotalDistance += result;\n\n\t\t// segment\n\t\tconst segment = JSON.parse(JSON.stringify(feature));\n\t\tsegment.id = `${segment.id}-${i}`;\n\t\tsegment.geometry.coordinates = [start, end];\n\t\tsegment.properties.originalId = feature.id;\n\t\tsegment.properties.distance = result;\n\t\tsegment.properties.total = totalDistance;\n\t\tsegment.properties.unit = getDistanceUnitName(distanceUnit);\n\t\tsegment.properties.totalUnit = getDistanceUnitName(distanceUnit);\n\n\t\tif (computeElevation === true && terrainSource === undefined) {\n\t\t\tconst elevation_start = map?.queryTerrainElevation(start as LngLatLike);\n\t\t\tif (elevation_start) {\n\t\t\t\tsegment.properties.elevation_start = elevation_start;\n\t\t\t}\n\n\t\t\tconst elevation_end = map?.queryTerrainElevation(end as LngLatLike);\n\t\t\tif (elevation_end) {\n\t\t\t\tsegment.properties.elevation_end = elevation_end;\n\t\t\t}\n\t\t}\n\n\t\tsegments.push(segment);\n\t}\n\n\tfeature.properties.distance = segments[segments.length - 1].properties.total;\n\tfeature.properties.unit = segments[segments.length - 1].properties.unit;\n\tfeature.properties.segments = JSON.parse(JSON.stringify(segments));\n\n\tif (distanceUnit === 'kilometers') {\n\t\t// convert kilometers to meters or centimeters if distance is small\n\t\tconst metricDistance = convertMetricDistance(feature.properties.distance as number);\n\t\tfeature.properties.distance = metricDistance.distance;\n\t\tfeature.properties.unit = metricDistance.unit;\n\n\t\t(feature.properties.segments as unknown as GeoJSONStoreFeatures[]).forEach(\n\t\t\t(segment: GeoJSONStoreFeatures) => {\n\t\t\t\tconst segmentDistance = convertMetricDistance(segment.properties.distance as number);\n\t\t\t\tsegment.properties.distance = segmentDistance.distance;\n\t\t\t\tsegment.properties.unit = segmentDistance.unit;\n\n\t\t\t\tconst segmentTotalDistance = convertMetricDistance(segment.properties.total as number);\n\t\t\t\tsegment.properties.total = segmentTotalDistance.distance;\n\t\t\t\tsegment.properties.totalUnit = segmentTotalDistance.unit;\n\t\t\t}\n\t\t);\n\t}\n\n\t//  round distance precision according to the config.\n\tfeature.properties.distance = parseFloat(\n\t\t(feature.properties.distance as number).toFixed(distancePrecision)\n\t);\n\n\t(feature.properties.segments as unknown as GeoJSONStoreFeatures[]).forEach(\n\t\t(segment: GeoJSONStoreFeatures) => {\n\t\t\tsegment.properties.distance = parseFloat(\n\t\t\t\t(segment.properties.distance as number).toFixed(distancePrecision)\n\t\t\t);\n\t\t\tsegment.properties.total = parseFloat(\n\t\t\t\t(segment.properties.total as number).toFixed(distancePrecision)\n\t\t\t);\n\t\t}\n\t);\n\n\treturn feature;\n};\n","/**\n * Capitalzie string value\n * @param value string value\n * @returns string\n */\nexport const capitalize = (value: string) => {\n\treturn value.charAt(0).toUpperCase() + value.slice(1);\n};\n","import { defaultMeasureControlOptions } from '../constants';\nimport type { StyleSpecification } from 'maplibre-gl';\n\nexport const TERRADRAW_SOURCE_IDS = [\n\t'td-point',\n\t'td-point-lower',\n\t'td-linestring',\n\t'td-polygon',\n\t'td-polygon-outline'\n];\nexport const TERRADRAW_MEASURE_SOURCE_IDS = [\n\t...TERRADRAW_SOURCE_IDS,\n\tdefaultMeasureControlOptions.polygonLayerSpec?.source as string,\n\tdefaultMeasureControlOptions.lineLayerLabelSpec?.source as string,\n\tdefaultMeasureControlOptions.pointLayerLabelSpec?.source as string\n];\n\n/**\n * clean maplibre style to filter only for terradraw related layers or without them.\n * If options are not set, returns original style given to the function.\n *\n * This can be useful incase users only want to get terradraw related layers or without it.\n *\n * Usage:\n * `cleanMaplibreStyle(map.getStyle, { excludeTerraDrawLayers: true})`\n * `cleanMaplibreStyle(map.getStyle, { onlyTerraDrawLayers: true})`\n *\n * @param style maplibre style spec\n * @param options.excludeTerraDrawLayers return maplibre style without terradraw layers and sources\n * @param options.onlyTerraDrawLayers return maplibre style with only terradraw layers and sources\n * @param sourceIds terradraw related source IDs (internally used). Use TERRADRAW_SOURCE_IDS or TERRADRAW_MEASURE_SOURCE_IDS\n * @returns maplibre style spec\n */\nexport const cleanMaplibreStyle = (\n\tstyle: StyleSpecification,\n\toptions?: { excludeTerraDrawLayers?: boolean; onlyTerraDrawLayers?: boolean },\n\tsourceIds = TERRADRAW_SOURCE_IDS\n) => {\n\tconst cloned: StyleSpecification = JSON.parse(JSON.stringify(style));\n\tif (options) {\n\t\tif (options.onlyTerraDrawLayers === true) {\n\t\t\tcloned.layers = cloned.layers.filter((l) => {\n\t\t\t\treturn 'source' in l && sourceIds.includes(l.source);\n\t\t\t});\n\t\t\tObject.keys(cloned.sources).forEach((key) => {\n\t\t\t\tif (!sourceIds.includes(key)) {\n\t\t\t\t\tdelete cloned.sources[key];\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (options.excludeTerraDrawLayers === true) {\n\t\t\tcloned.layers = cloned.layers.filter((l) => {\n\t\t\t\treturn 'source' in l && !sourceIds.includes(l.source);\n\t\t\t});\n\t\t\tObject.keys(cloned.sources).forEach((key) => {\n\t\t\t\tif (sourceIds.includes(key)) {\n\t\t\t\t\tdelete cloned.sources[key];\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\treturn cloned;\n};\n","/**\n * debounce\n * @param callback callback function\n * @param delay millisecond to delay\n */\nexport const debounce = <T extends (...args: Parameters<T>) => unknown>(\n\tcallback: T,\n\tdelay = 250\n): ((...args: Parameters<T>) => void) => {\n\tlet timeoutId: number;\n\treturn (...args) => {\n\t\tclearTimeout(timeoutId);\n\t\ttimeoutId = setTimeout(() => callback(...args), delay) as unknown as number;\n\t};\n};\n","import type { TerrainSource } from '../interfaces';\nimport type { GeoJSONStoreFeatures } from 'terra-draw';\nimport { Map, type LngLatLike } from 'maplibre-gl';\n\n/**\n * query elevation by point feature.\n * @param feature point geojson feature\n * @param map Maplibre map instance\n * @param computeElevation compute elevation or not\n * @param terrainSource terrain source for computing elevation from raster DEM. If terrainSource is undefined, going to to query elevation from maplibre terrain.\n * @returns geojson feature after computing\n */\nexport const queryElevationByPoint = (\n\tfeature: GeoJSONStoreFeatures,\n\tmap?: Map,\n\tcomputeElevation?: boolean,\n\tterrainSource?: TerrainSource\n) => {\n\tif (feature.geometry.type !== 'Point') return feature;\n\n\tconst coordinates: number[] = (feature as GeoJSONStoreFeatures).geometry.coordinates as number[];\n\n\tif (computeElevation === true && terrainSource === undefined) {\n\t\tconst elevation = map?.queryTerrainElevation(coordinates as LngLatLike);\n\t\tif (elevation) {\n\t\t\tfeature.properties.elevation = elevation;\n\t\t}\n\t}\n\treturn feature;\n};\n","var b = Object.defineProperty;\nvar T = (t, e, r) => e in t ? b(t, e, { enumerable: !0, configurable: !0, writable: !0, value: r }) : t[e] = r;\nvar d = (t, e, r) => T(t, typeof e != \"symbol\" ? e + \"\" : e, r);\nvar v = 2 * Math.PI * 6378137 / 2;\nfunction E(t) {\n  return t = t || 256, 2 * Math.PI * 6378137 / t;\n}\nfunction y(t, e, r = { enable: !0, decimal: 1 }) {\n  t = x(t);\n  var n = t[0], i = t[1], o = n * v / 180, a = Math.log(Math.tan((90 + i) * Math.PI / 360)) / (Math.PI / 180);\n  return a = a * v / 180, r.enable && (o = Number(o.toFixed(r.decimal)), a = Number(a.toFixed(r.decimal))), [o, a];\n}\nfunction I(t, e, r) {\n  var n = t[0], i = t[1], o = R(e, r), a = (n + v) / o, s = (i + v) / o;\n  return [a, s, e];\n}\nfunction g(t, e, r) {\n  t = x(t);\n  var n = y(t), i = I(n, e);\n  return F(i);\n}\nfunction z(t, e, r) {\n  if (t = x(t), e === 0)\n    return [0, 0, 0];\n  var n = g(t, e);\n  return L(n);\n}\nfunction F(t, e, r) {\n  e = e || 256;\n  var n = t[0], i = t[1], o = t[2];\n  if (o === 0) return [0, 0, 0];\n  p(o);\n  var a = Math.ceil(n / e) - 1, s = Math.ceil(i / e) - 1;\n  return a < 0 && (a = 0), s < 0 && (s = 0), [a, s, o];\n}\nfunction L(t, e) {\n  q(t);\n  var r = t[0], n = t[1], i = t[2];\n  if (i === 0)\n    return [0, 0, 0];\n  var o = r, a = Math.pow(2, i) - 1 - n;\n  return [o, a, i];\n}\nfunction q(t, e) {\n  var r = t[0], n = t[1], i = t[2];\n  if (i == null) throw new Error(\"<zoom> is required\");\n  if (r == null) throw new Error(\"<x> is required\");\n  if (n == null) throw new Error(\"<y> is required\");\n  return i = p(i), t = B(t), t;\n}\nfunction B(t) {\n  var e = t[0], r = t[1], n = t[2], i = Math.pow(2, n);\n  return e = e % i, e < 0 && (e = e + i), [e, r, n];\n}\nfunction p(t) {\n  if (t === !1) return t;\n  if (t == null)\n    throw new Error(\"<zoom> is required\");\n  if (t < 0)\n    throw new Error(\"<zoom> cannot be less than 0\");\n  if (t > 32)\n    throw new Error(\"<zoom> cannot be greater than 32\");\n  return t;\n}\nfunction x(t, e) {\n  var r = V(t[0]), n = U(t[1]);\n  return n > 85 && (n = 85), n < -85 && (n = -85), [r, n];\n}\nfunction R(t, e) {\n  return E(e) / Math.pow(2, t);\n}\nfunction U(t) {\n  if (t == null) throw new Error(\"lat is required\");\n  return (t > 90 || t < -90) && (t = t % 180, t > 90 && (t = -180 + t), t < -90 && (t = 180 + t), t === 0 && (t = 0)), t;\n}\nfunction V(t) {\n  if (t == null) throw new Error(\"lng is required\");\n  return (t > 180 || t < -180) && (t = t % 360, t > 180 && (t = -360 + t), t < -180 && (t = 360 + t), t === 0 && (t = 0)), t;\n}\nclass M {\n  /**\n   * Constructor\n   * @param url URL for terrain RGB raster tilesets\n   * @param tileSize size of tile. 256 or 512\n   * @param tms whether it is Tile Map Service\n   * @param minzoom minzoom for terrain RGB raster tilesets\n   * @param maxzoom maxzoom for terrain RGB raster tilesets\n   * @param tms whether it is Tile Map Service\n   */\n  constructor(e, r, n, i, o) {\n    d(this, \"url\");\n    d(this, \"tileSize\");\n    d(this, \"tms\");\n    d(this, \"minzoom\");\n    d(this, \"maxzoom\");\n    this.url = e, this.tileSize = r, this.tms = o, this.minzoom = n, this.maxzoom = i, this.tms = o;\n  }\n  /**\n   * Get the value from target coordinates and zoom level by using certain formula.\n   * @param lnglat coordinates\n   * @param z  zoom level\n   * @returns the value calculated by certain formula\n   */\n  getValue(e, r) {\n    return new Promise(\n      (n, i) => {\n        const o = e[0], a = e[1];\n        let s = r;\n        r > this.maxzoom ? s = this.maxzoom : r < this.minzoom && (s = this.minzoom);\n        const u = this.tms ? g([o, a], s) : z([o, a], s), h = this.url.replace(/{x}/g, u[0].toString()).replace(/{y}/g, u[1].toString()).replace(/{z}/g, u[2].toString());\n        let c = this.getUrlExtension(h);\n        switch (c || (c = \"png\"), c) {\n          case \"png\":\n          case \"webp\":\n            this.getValueFromRaster(h, u, o, a).then((f) => {\n              n(f);\n            });\n            break;\n          default:\n            i(new Error(`Invalid file extension: ${c}`));\n            break;\n        }\n      }\n    );\n  }\n  /**\n   * Get the value calculated from coordinates on WEBP raster tileset\n   * @param url tile URL\n   * @param tile tile index info\n   * @param lng longitude\n   * @param lat latitude\n   * @returns the value calculated from coordinates. If tile does not exist returns undefined\n   */\n  async getValueFromRaster(e, r, n, i) {\n    const o = await fetch(e);\n    if (!o.ok) {\n      if (o.status === 404)\n        return;\n      throw new Error(`Failed to fetch tile: ${o.statusText}`);\n    }\n    const a = await o.blob();\n    return new Promise((s, u) => {\n      const h = new Image();\n      h.onload = () => {\n        const c = document.createElement(\"canvas\");\n        c.width = h.width, c.height = h.height;\n        const f = c.getContext(\"2d\");\n        if (!f) return u(new Error(\"Failed to create canvas context\"));\n        f.drawImage(h, 0, 0);\n        const w = f.getImageData(0, 0, h.width, h.height).data, l = this.pixels2rgba(new Uint8Array(w), r, n, i), m = this.calc(l[0], l[1], l[2], l[3]);\n        s(m);\n      }, h.onerror = () => s(void 0), h.src = URL.createObjectURL(a);\n    });\n  }\n  /**\n   * Get RGBA values from coordinates information\n   * @param pixels pixels info\n   * @param tile tile index info\n   * @param lng longitude\n   * @param lat latitude\n   * @returns RGBA values\n   */\n  pixels2rgba(e, r, n, i) {\n    const o = [];\n    for (let c = 0; c < e.length; c += 4) {\n      const f = e[c], w = e[c + 1], l = e[c + 2], m = e[c + 3], P = [f, w, l, m];\n      o.push(P);\n    }\n    const a = this.tileToBBOX(r), s = this.getPixelPosition(n, i, a), u = s[0] + s[1] * this.tileSize;\n    return o[u];\n  }\n  /**\n   * Get the position in pixel from the coordinates\n   * @param lng longitude\n   * @param lat latitude\n   * @param bbox bbox (minx, miny, maxx, maxy)\n   * @returns The position in pixel\n   */\n  getPixelPosition(e, r, n) {\n    const i = this.tileSize, o = this.tileSize, a = n[2] - n[0], s = n[3] - n[1], u = (e - n[0]) / a, h = (r - n[1]) / s, c = Math.floor(i * u), f = Math.floor(o * (1 - h));\n    return [c, f];\n  }\n  /**\n   * Get file extenstion name from the URL\n   * @param url URL for tilesets\n   * @returns file extenstion either png or webp\n   */\n  getUrlExtension(e) {\n    let r = e.split(/[#?]/)[0].split(\".\").pop();\n    return r && (r = r.trim()), r;\n  }\n  /**\n   * Get the bbox of a tile\n   * @param {Array<number>} tile\n   * @returns {Array<number>} bbox\n   * @example\n   * var bbox = tileToBBOX([5, 10, 10])\n   * //=bbox\n   */\n  tileToBBOX(e) {\n    const r = this.tile2lon(e[0] + 1, e[2]), n = this.tile2lon(e[0], e[2]), i = this.tile2lat(e[1] + 1, e[2]), o = this.tile2lat(e[1], e[2]);\n    return [n, i, r, o];\n  }\n  tile2lon(e, r) {\n    return e / Math.pow(2, r) * 360 - 180;\n  }\n  tile2lat(e, r) {\n    const n = 180 / Math.PI, i = Math.PI - 2 * Math.PI * e / Math.pow(2, r);\n    return n * Math.atan(0.5 * (Math.exp(i) - Math.exp(-i)));\n  }\n}\nclass k extends M {\n  /**\n   * Constructor\n   * @param url URL for terrain RGB raster tilesets\n   * @param tileSize size of tile. 256 or 512\n   * @param tms whether it is Tile Map Service\n   * @param minzoom minzoom for terrain RGB raster tilesets. default is 5\n   * @param maxzoom maxzoom for terrain RGB raster tilesets. default is 15\n   */\n  constructor(e, r, n = 5, i = 15, o = !1) {\n    super(e, r, n, i, o);\n  }\n  /**\n   * Get an altitude calculated from terrain RGB information\n   * @param lnglat coordinates\n   * @param z zoom level\n   * @returns an altitude calculated from terrain RGB information\n   */\n  async getElevation(e, r) {\n    return await this.getValue(e, r);\n  }\n  /**\n   * Formula for calculating an elevation from RGB\n   * @param r red\n   * @param g green\n   * @param b blue\n   * @returns an elevation calculated\n   */\n  calc(e, r, n) {\n    return -1e4 + (e * 256 * 256 + r * 256 + n) * 0.1;\n  }\n}\nclass G extends M {\n  /**\n   * Constructor\n   * @param url URL for terrarium raster tilesets\n   * @param tileSize size of tile. 256 or 512\n   * @param tms whether it is Tile Map Service\n   * @param minzoom minzoom for terrain RGB raster tilesets. default is 5\n   * @param maxzoom maxzoom for terrain RGB raster tilesets. default is 15\n   */\n  constructor(e, r, n = 5, i = 15, o = !1) {\n    super(e, r, n, i, o);\n  }\n  /**\n   * Get an altitude calculated from terrain RGB information\n   * @param lnglat coordinates\n   * @param z zoom level\n   * @returns an altitude calculated from terrain RGB information\n   */\n  async getElevation(e, r) {\n    return await this.getValue(e, r);\n  }\n  /**\n   * Formula for calculating an elevation from RGB\n   * https://github.com/tilezen/joerd/blob/master/docs/formats.md#terrarium\n   * @param r red\n   * @param g green\n   * @param b blue\n   * @returns an elevation calculated\n   */\n  calc(e, r, n) {\n    const i = e * 256 + r + n / 256 - 32768;\n    return parseInt(i.toFixed(0));\n  }\n}\nexport {\n  k as TerrainRGB,\n  G as Terrarium\n};\n//# sourceMappingURL=terrain-rgb.es.js.map\n","import type { TerrainSource } from '../interfaces';\nimport { TerrainRGB, Terrarium } from '@watergis/terrain-rgb';\nimport type { GeoJSONStoreFeatures } from 'terra-draw';\n\n/**\n * Query elvation for point features from Raster DEM\n * @param points Point GeoJSON features\n * @returns points features after adding elevation property\n */\nexport const queryElevationFromRasterDEM = async (\n\tpoints: GeoJSONStoreFeatures[],\n\tterrainDource?: TerrainSource\n) => {\n\tconst promises: Promise<GeoJSONStoreFeatures>[] = [];\n\tfor (const point of points) {\n\t\tpromises.push(\n\t\t\tnew Promise((resolve: (feature: GeoJSONStoreFeatures) => void) => {\n\t\t\t\tif (point.geometry.type !== 'Point') resolve(point);\n\t\t\t\tif (terrainDource) {\n\t\t\t\t\tconst url = terrainDource.url;\n\t\t\t\t\tconst encoding = terrainDource.encoding ?? 'mapbox';\n\t\t\t\t\tconst tileSize = terrainDource.tileSize ?? 512;\n\t\t\t\t\tconst minzoom = terrainDource.minzoom ?? 5;\n\t\t\t\t\tconst maxzoom = terrainDource.maxzoom ?? 15;\n\t\t\t\t\tconst tms = terrainDource.tms ?? false;\n\n\t\t\t\t\t(encoding === 'mapbox'\n\t\t\t\t\t\t? new TerrainRGB(url, tileSize, minzoom, maxzoom, tms)\n\t\t\t\t\t\t: new Terrarium(url, tileSize, minzoom, maxzoom, tms)\n\t\t\t\t\t)\n\t\t\t\t\t\t.getElevation(point.geometry.coordinates as number[], maxzoom)\n\t\t\t\t\t\t.then((elevation) => {\n\t\t\t\t\t\t\tif (elevation) point.properties.elevation = elevation;\n\t\t\t\t\t\t\tresolve(point);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(() => resolve(point));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(point);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\treturn await Promise.all(promises);\n};\n","import type { GeoJSONStoreFeatures } from 'terra-draw';\nimport type { Position } from 'geojson';\n\n/**\n * Round coordinates to given coordinate precision\n *\n * If you want to add geojson with excessive coordinate precision to TerraDraw by using addFeatures,\n * TerraDraw raise a validation error if you add GeoJSON with excessive precision.\n *\n * use this function to make sure geojson coordinates to meet terradraw setting before adding features.\n *\n * The below is a sample usage of the function\n *\n * ```js\n * const drawControl = new MaplibreTerraDrawControl({\n *   adapterOptions: {\n *     coordinatePrecision: 6\n *   }\n * })\n * map.addControl(drawControl)\n *\n * map.once('load', ()=>{\n *   const features = [] // add your geojson features here\n *   const draw = drawControl.getTerradrawInstance()\n *   draw.addFeatures(roundFeatureCoordinates(features), 6)\n * })\n * ```\n * @param features GeoJSON feature\n * @param decimalPlaces decimal places to 9 (default of terradraw)\n * @returns GeoJSON feature after rounding coordinates\n */\nexport const roundFeatureCoordinates = (\n\tfeatures: GeoJSONStoreFeatures[],\n\tdecimalPlaces: number = 9\n) => {\n\t// Helper function to round a single coordinate\n\tfunction roundCoord(coord: Position) {\n\t\treturn [Number(coord[0].toFixed(decimalPlaces)), Number(coord[1].toFixed(decimalPlaces))];\n\t}\n\n\t// Process coordinates based on geometry type\n\tfunction processGeometry(geometry: GeoJSONStoreFeatures['geometry']) {\n\t\tconst type = geometry.type as\n\t\t\t| 'Polygon'\n\t\t\t| 'LineString'\n\t\t\t| 'Point'\n\t\t\t| 'MultiPoint'\n\t\t\t| 'MultiLineString'\n\t\t\t| 'MultiPolygon';\n\t\tlet coordinates = geometry.coordinates as Position | Position[] | Position[][] | Position[][][];\n\n\t\tswitch (type) {\n\t\t\tcase 'Point':\n\t\t\t\tcoordinates = roundCoord(coordinates as [number, number]);\n\t\t\t\tbreak;\n\t\t\tcase 'LineString':\n\t\t\tcase 'MultiPoint':\n\t\t\t\tcoordinates = (coordinates as Position[]).map(roundCoord);\n\t\t\t\tbreak;\n\t\t\tcase 'Polygon':\n\t\t\tcase 'MultiLineString':\n\t\t\t\tcoordinates = (coordinates as Position[][]).map((ring: Position[]) => ring.map(roundCoord));\n\t\t\t\tbreak;\n\t\t\tcase 'MultiPolygon':\n\t\t\t\tcoordinates = (coordinates as unknown as Position[][][]).map((polygon: Position[][]) =>\n\t\t\t\t\tpolygon.map((ring: Position[]) => ring.map(roundCoord))\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn {\n\t\t\t...geometry,\n\t\t\tcoordinates: coordinates\n\t\t};\n\t}\n\n\t// Process each feature\n\treturn features.map((feature) => ({\n\t\t...feature,\n\t\tgeometry: processGeometry(feature.geometry) as GeoJSONStoreFeatures['geometry']\n\t}));\n};\n","import type { ControlPosition, IControl, Map, StyleSpecification } from 'maplibre-gl';\nimport { TerraDraw, TerraDrawExtend, TerraDrawRenderMode } from 'terra-draw';\nimport { TerraDrawMapLibreGLAdapter } from 'terra-draw-maplibre-gl-adapter';\nimport type {\n\tTerradrawControlOptions,\n\tEventType,\n\tTerradrawMode,\n\tTerradrawModeClass,\n\tEventArgs\n} from '../interfaces';\nimport { defaultControlOptions, getDefaultModeOptions } from '../constants';\nimport { capitalize, cleanMaplibreStyle, TERRADRAW_SOURCE_IDS } from '../helpers';\n\n/**\n * Maplibre GL Terra Draw Control\n */\nexport class MaplibreTerradrawControl implements IControl {\n\tprotected controlContainer?: HTMLElement;\n\tprotected map?: Map;\n\tprotected modeButtons: { [key: string]: HTMLButtonElement } = {};\n\tprotected _isExpanded = false;\n\n\t/**\n\t * get the state of whether the control is expanded or collapsed\n\t */\n\tpublic get isExpanded(): boolean {\n\t\treturn this._isExpanded;\n\t}\n\n\t/**\n\t * set the state of the control either expanded or collapsed.\n\t * terradraw mode will be reset if the state is changed.\n\t * either `expanded` or `collapsed` event is dispatched when changed\n\t */\n\tpublic set isExpanded(value: boolean) {\n\t\tthis._isExpanded = value;\n\t\tconst controls = document.getElementsByClassName('maplibregl-terradraw-add-control');\n\t\tfor (let i = 0; i < controls.length; i++) {\n\t\t\tconst item = controls.item(i);\n\t\t\tif (!item) continue;\n\t\t\tif (this.isExpanded) {\n\t\t\t\titem.classList.remove('hidden');\n\t\t\t} else {\n\t\t\t\titem.classList.add('hidden');\n\t\t\t}\n\t\t}\n\t\tconst addButton = document.getElementsByClassName('maplibregl-terradraw-render-button');\n\t\tif (addButton && addButton.length > 0) {\n\t\t\tif (this.isExpanded) {\n\t\t\t\taddButton.item(0)?.classList.add('enabled');\n\t\t\t} else {\n\t\t\t\taddButton.item(0)?.classList.remove('enabled');\n\t\t\t\tthis.resetActiveMode();\n\t\t\t}\n\t\t}\n\t\tthis.toggleDeleteSelectionButton();\n\t\tthis.toggleButtonsWhenNoFeature();\n\t\tif (this.isExpanded) {\n\t\t\tthis.dispatchEvent('expanded');\n\t\t} else {\n\t\t\tthis.dispatchEvent('collapsed');\n\t\t}\n\t}\n\n\tprotected terradraw?: TerraDraw;\n\tprotected options: TerradrawControlOptions = defaultControlOptions;\n\tprotected events: {\n\t\t[key: string]: [(event: EventArgs) => void];\n\t} = {};\n\n\tprotected defaultMode = 'render';\n\n\t/**\n\t * Constructor\n\t * @param options Plugin control options\n\t */\n\tconstructor(options?: TerradrawControlOptions) {\n\t\tthis.modeButtons = {};\n\n\t\tif (options) {\n\t\t\tthis.options = Object.assign(this.options, options);\n\t\t}\n\t}\n\n\t/**\n\t * Get the default control position\n\t * @returns default control position. Default is 'top-right'\n\t */\n\tpublic getDefaultPosition(): ControlPosition {\n\t\tconst defaultPosition = 'top-right';\n\t\treturn defaultPosition;\n\t}\n\n\t/**\n\t * add the plugin control to maplibre\n\t * @param map Maplibre Map object\n\t * @returns HTML Element\n\t */\n\tpublic onAdd(map: Map): HTMLElement {\n\t\tif (this.options && this.options.modes && this.options.modes.length === 0) {\n\t\t\tthrow new Error('At least a mode must be enabled.');\n\t\t}\n\t\tthis.map = map;\n\n\t\tconst defaultOptions = getDefaultModeOptions();\n\t\tconst modes: TerradrawModeClass[] = [];\n\n\t\tthis.options?.modes?.forEach((m) => {\n\t\t\tif (this.options.modeOptions && this.options.modeOptions[m]) {\n\t\t\t\tconst newOption = this.options.modeOptions[m];\n\n\t\t\t\tif (m === 'select') {\n\t\t\t\t\t// overwrite other select mode settings if new option does not contain.\n\t\t\t\t\tconst defaultOption = defaultOptions[m];\n\t\t\t\t\tif (defaultOption) {\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tconst flags = defaultOption.flags;\n\t\t\t\t\t\tObject.keys(flags).forEach((key) => {\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tif (newOption.flags[key]) return;\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tnewOption.flags[key] = flags[key];\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmodes.push(newOption);\n\t\t\t} else if (defaultOptions[m]) {\n\t\t\t\tmodes.push(defaultOptions[m]);\n\t\t\t}\n\t\t});\n\n\t\t// sometimes, an error of 'Can not register unless mode is unregistered' is thrown by terradraw,\n\t\t// thus, force reset mode state as unregistered\n\t\tmodes.forEach((m) => {\n\t\t\tif (m.state !== 'unregistered') {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\tm._state = 'unregistered';\n\t\t\t}\n\t\t});\n\n\t\t// if no render button is specified, it add hidden render mode\n\t\tif (!this.options?.modes?.includes('render')) {\n\t\t\tmodes.push(\n\t\t\t\tnew TerraDrawRenderMode({\n\t\t\t\t\tmodeName: 'default',\n\t\t\t\t\tstyles: {}\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis.defaultMode = 'default';\n\t\t}\n\n\t\tthis.isExpanded = this.options.open === true;\n\n\t\tthis.terradraw = new TerraDraw({\n\t\t\tadapter: new TerraDrawMapLibreGLAdapter({ map, ...this.options.adapterOptions }),\n\t\t\tmodes: modes\n\t\t});\n\n\t\tif (this.map?.loaded()) {\n\t\t\tthis.terradraw.start();\n\t\t} else {\n\t\t\tthis.map?.once('load', () => {\n\t\t\t\tthis.terradraw?.start();\n\t\t\t});\n\t\t}\n\n\t\tthis.controlContainer = document.createElement('div');\n\t\tthis.controlContainer.classList.add(`maplibregl-ctrl`);\n\t\tthis.controlContainer.classList.add(`maplibregl-ctrl-group`);\n\n\t\tmodes.forEach((m: TerradrawModeClass) => {\n\t\t\tif (m.mode === 'default') return;\n\t\t\tthis.addTerradrawButton(m.mode as TerradrawMode);\n\t\t});\n\n\t\tObject.values(this.modeButtons).forEach((ele) => {\n\t\t\tthis.controlContainer?.appendChild(ele);\n\t\t});\n\n\t\tthis.terradraw?.on('change', this.toggleButtonsWhenNoFeature.bind(this));\n\t\tthis.toggleButtonsWhenNoFeature();\n\t\treturn this.controlContainer;\n\t}\n\n\t/**\n\t * Remove the plugin control from maplibre\n\t * @returns void\n\t */\n\tpublic onRemove(): void {\n\t\tif (!this.controlContainer || !this.controlContainer.parentNode || !this.map) {\n\t\t\treturn;\n\t\t}\n\t\tthis.deactivate();\n\t\tthis.modeButtons = {};\n\t\tthis.terradraw = undefined;\n\t\tthis.map = undefined;\n\t\tthis.controlContainer.parentNode.removeChild(this.controlContainer);\n\t}\n\n\t/**\n\t * Register an event for the plugin\n\t * @param event event type\n\t * @param callback\n\t */\n\tpublic on(event: EventType, callback: (event: EventArgs) => void) {\n\t\tif (!this.events[event]) {\n\t\t\tthis.events[event] = [callback];\n\t\t} else {\n\t\t\tthis.events[event].push(callback);\n\t\t}\n\t}\n\n\t/**\n\t * Unregister an event for the plugin\n\t * @param event event type\n\t * @param callback\n\t * @returns\n\t */\n\tpublic off(event: EventType, callback: (event: EventArgs) => void) {\n\t\tif (!this.events[event]) return;\n\t\tconst index = this.events[event].findIndex((c) => c === callback);\n\t\tif (index !== -1) {\n\t\t\tthis.events[event].splice(index, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Dispatch an event. Pass the current snapshot of features and mode\n\t * @param event event type\n\t * @param args additional arguments\n\t */\n\tprotected dispatchEvent(event: EventType, args?: { [key: string]: unknown }) {\n\t\tif (this.events[event]) {\n\t\t\tthis.events[event].forEach((callback) => {\n\t\t\t\tconst snapshot = this.terradraw?.getSnapshot();\n\t\t\t\tconst currentFeature = snapshot?.filter((f) => f.properties.selected === true);\n\t\t\t\tcallback({\n\t\t\t\t\tfeature: currentFeature,\n\t\t\t\t\tmode: this.terradraw?.getMode() as TerradrawMode,\n\t\t\t\t\t...args\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Activate Terra Draw to start drawing\n\t */\n\tpublic activate() {\n\t\tif (!this.terradraw) return;\n\t\tif (!this.terradraw.enabled) {\n\t\t\tthis.terradraw.start();\n\t\t}\n\t}\n\n\t/**\n\t * Deactivate Terra Draw to stop drawing\n\t */\n\tpublic deactivate() {\n\t\tif (!this.terradraw) return;\n\t\tif (!this.terradraw.enabled) return;\n\t\tthis.resetActiveMode();\n\t\tthis.dispatchEvent('mode-changed');\n\t\tthis.terradraw.stop();\n\t}\n\n\t/**\n\t * Get the Terra Draw instance.\n\t * For the Terra Draw API, please refer to https://terradraw.io/#/api\n\t * @returns Terra Draw instance\n\t */\n\tpublic getTerraDrawInstance() {\n\t\treturn this.terradraw;\n\t}\n\n\t/**\n\t * Toggle editor control\n\t */\n\tprotected toggleEditor() {\n\t\tif (!this.terradraw) return;\n\t\tthis.isExpanded = !this.isExpanded;\n\t}\n\n\t/**\n\t * Reset active mode to back to render mode\n\t */\n\tprotected resetActiveMode() {\n\t\tif (!this.terradraw) return;\n\t\tif (!this.terradraw.enabled) {\n\t\t\tthis.terradraw.start();\n\t\t}\n\t\tconst controls = document.getElementsByClassName('maplibregl-terradraw-add-control');\n\t\tfor (let i = 0; i < controls.length; i++) {\n\t\t\tconst item = controls.item(i);\n\t\t\tif (!item) continue;\n\t\t\titem.classList.remove('active');\n\t\t}\n\t\tthis.terradraw?.setMode(this.defaultMode);\n\t}\n\n\t/**\n\t * Add Terra Draw drawing mode button\n\t * @param mode Terra Draw mode name\n\t */\n\tprotected addTerradrawButton(mode: TerradrawMode) {\n\t\tconst btn = document.createElement('button');\n\t\tbtn.type = 'button';\n\t\tthis.modeButtons[mode] = btn;\n\n\t\tif (mode === 'render') {\n\t\t\tbtn.classList.add(`maplibregl-terradraw-${mode}-button`);\n\n\t\t\tif (this.isExpanded) {\n\t\t\t\tbtn.classList.add('enabled');\n\t\t\t}\n\t\t\tbtn.type = 'button';\n\t\t\tbtn.title = capitalize('expand or collapse drawing tool');\n\t\t\tbtn.addEventListener('click', this.toggleEditor.bind(this));\n\t\t} else {\n\t\t\tbtn.classList.add('maplibregl-terradraw-add-control');\n\n\t\t\tif (!this.isExpanded) {\n\t\t\t\tbtn.classList.add('hidden');\n\t\t\t}\n\t\t\tbtn.title = capitalize(mode.replace(/-/g, ' '));\n\n\t\t\tif (mode === 'delete') {\n\t\t\t\tbtn.classList.add(`maplibregl-terradraw-${mode}-button`);\n\n\t\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\t\tif (!this.terradraw) return;\n\t\t\t\t\tif (!this.terradraw.enabled) return;\n\n\t\t\t\t\tthis.terradraw.clear();\n\t\t\t\t\tthis.deactivate();\n\t\t\t\t\tthis.toggleDeleteSelectionButton();\n\t\t\t\t\tthis.toggleButtonsWhenNoFeature();\n\t\t\t\t\tthis.dispatchEvent('feature-deleted');\n\t\t\t\t});\n\t\t\t} else if (mode === 'delete-selection') {\n\t\t\t\tbtn.classList.add(`maplibregl-terradraw-${mode}-button`);\n\t\t\t\tbtn.classList.add(`hidden-delete-selection`);\n\t\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\t\tif (!this.terradraw) return;\n\t\t\t\t\tif (!this.terradraw.enabled) return;\n\n\t\t\t\t\tconst snapshot = this.terradraw?.getSnapshot();\n\t\t\t\t\tconst selected = snapshot.filter((f) => f.properties.selected === true);\n\n\t\t\t\t\tif (selected.length > 0) {\n\t\t\t\t\t\t// if feature is selected, delete only selected feature\n\t\t\t\t\t\tconst ids = selected.map((f) => f.id) as TerraDrawExtend.FeatureId[];\n\n\t\t\t\t\t\tthis.terradraw.removeFeatures(ids);\n\t\t\t\t\t\tfor (const id of ids) {\n\t\t\t\t\t\t\tthis.terradraw.deselectFeature(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.dispatchEvent('feature-deleted', { deletedIds: ids });\n\t\t\t\t\t}\n\t\t\t\t\tthis.toggleDeleteSelectionButton();\n\t\t\t\t\tthis.toggleButtonsWhenNoFeature();\n\t\t\t\t});\n\t\t\t} else if (mode === 'download') {\n\t\t\t\tbtn.classList.add(`maplibregl-terradraw-${mode}-button`);\n\t\t\t\tbtn.addEventListener('click', this.handleDownload.bind(this));\n\t\t\t} else {\n\t\t\t\tbtn.classList.add(`maplibregl-terradraw-add-${mode}-button`);\n\n\t\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\t\tif (!this.terradraw) return;\n\n\t\t\t\t\tconst isActive = btn.classList.contains('active');\n\t\t\t\t\tthis.activate();\n\t\t\t\t\tthis.resetActiveMode();\n\n\t\t\t\t\tif (!isActive) {\n\t\t\t\t\t\tthis.terradraw.setMode(mode);\n\t\t\t\t\t\tbtn.classList.add('active');\n\t\t\t\t\t}\n\t\t\t\t\tthis.dispatchEvent('mode-changed');\n\t\t\t\t\tthis.toggleDeleteSelectionButton();\n\t\t\t\t\tthis.toggleButtonsWhenNoFeature();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * get GeoJSON features\n\t * @param onlySelected If true, returns only selected features. Default is false.\n\t * @returns FeatureCollection in GeoJSON format\n\t */\n\tpublic getFeatures(onlySelected = false) {\n\t\tif (!this.terradraw) return;\n\t\tconst snapshot = this.terradraw?.getSnapshot();\n\t\tconst features = snapshot.filter((f) => f.properties.mode !== 'select');\n\n\t\tconst fc = {\n\t\t\ttype: 'FeatureCollection',\n\t\t\tfeatures: features\n\t\t};\n\t\tif (onlySelected !== true) {\n\t\t\treturn fc;\n\t\t}\n\t\tfc.features = fc.features.filter((f) => f.properties.selected === true);\n\t\treturn fc;\n\t}\n\n\t/**\n\t * clean maplibre style to filter only for terradraw related layers or without them.\n\t * If options are not set, returns original style given to the function.\n\t *\n\t * This can be useful incase users only want to get terradraw related layers or without it.\n\t *\n\t * Usage:\n\t * `cleanStyle(map.getStyle, { excludeTerraDrawLayers: true})`\n\t * `cleanStyle(map.getStyle, { onlyTerraDrawLayers: true})`\n\t *\n\t * @param style maplibre style spec\n\t * @param options.excludeTerraDrawLayers return maplibre style without terradraw layers and sources\n\t * @param options.onlyTerraDrawLayers return maplibre style with only terradraw layers and sources\n\t * @returns\n\t */\n\tpublic cleanStyle(\n\t\tstyle: StyleSpecification,\n\t\toptions?: { excludeTerraDrawLayers?: boolean; onlyTerraDrawLayers?: boolean }\n\t) {\n\t\treturn cleanMaplibreStyle(style, options, TERRADRAW_SOURCE_IDS);\n\t}\n\n\t/**\n\t * Download button click event handler\n\t */\n\tprotected handleDownload() {\n\t\tconst fc = this.getFeatures(false);\n\n\t\tconst dataStr = 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(fc));\n\t\tconst download = document.createElement('a');\n\t\tdownload.setAttribute('href', dataStr);\n\t\tdownload.setAttribute('download', 'data.geojson');\n\t\tdocument.body.appendChild(download);\n\t\tdownload.click();\n\t\tdownload.remove();\n\t}\n\n\t/**\n\t * Toggle the state of buttons when there is no features\n\t */\n\tprotected toggleButtonsWhenNoFeature() {\n\t\tif (!this.controlContainer) return;\n\t\tconst fc = this.getFeatures(false);\n\t\tconst isActive = fc && fc.features.length > 0 ? true : false;\n\n\t\tconst targets = [\n\t\t\t`maplibregl-terradraw-add-select-button`,\n\t\t\t`maplibregl-terradraw-download-button`,\n\t\t\t`maplibregl-terradraw-delete-button`\n\t\t];\n\t\tfor (const className of targets) {\n\t\t\tconst btns = this.controlContainer.getElementsByClassName(className);\n\t\t\tfor (let i = 0; i < btns.length; i++) {\n\t\t\t\tconst btn = btns.item(i) as HTMLButtonElement;\n\t\t\t\tif (!btn) continue;\n\t\t\t\tbtn.disabled = !isActive;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Toggle the state of delete-select button\n\t */\n\tprotected toggleDeleteSelectionButton() {\n\t\tconst enabled = this.terradraw?.enabled || false;\n\t\tconst mode = this.terradraw?.getMode();\n\t\tconst fc = this.getFeatures(false);\n\t\tconst hasFeatures = fc && fc.features.length > 0;\n\t\tconst isActive = hasFeatures && enabled && mode === 'select';\n\t\tconst btns = document.getElementsByClassName(`maplibregl-terradraw-delete-selection-button`);\n\t\tfor (let i = 0; i < btns.length; i++) {\n\t\t\tconst btn = btns.item(i);\n\t\t\tif (!btn) continue;\n\t\t\tif (isActive) {\n\t\t\t\tbtn.classList.remove('hidden-delete-selection');\n\t\t\t} else {\n\t\t\t\tbtn.classList.add('hidden-delete-selection');\n\t\t\t}\n\t\t}\n\n\t\tif (!hasFeatures) {\n\t\t\tconst btns = document.getElementsByClassName(`maplibregl-terradraw-add-select-button`);\n\t\t\tfor (let i = 0; i < btns.length; i++) {\n\t\t\t\tconst btn = btns.item(i);\n\t\t\t\tif (!btn) continue;\n\t\t\t\tbtn.classList.remove('active');\n\t\t\t}\n\t\t}\n\t}\n}\n","// index.ts\nimport { point } from \"@turf/helpers\";\nimport { coordEach } from \"@turf/meta\";\nfunction centroid(geojson, options = {}) {\n  let xSum = 0;\n  let ySum = 0;\n  let len = 0;\n  coordEach(\n    geojson,\n    function(coord) {\n      xSum += coord[0];\n      ySum += coord[1];\n      len++;\n    },\n    true\n  );\n  return point([xSum / len, ySum / len], options.properties);\n}\nvar turf_centroid_default = centroid;\nexport {\n  centroid,\n  turf_centroid_default as default\n};\n//# sourceMappingURL=index.js.map","import {\n\tMap,\n\ttype CircleLayerSpecification,\n\ttype GeoJSONSource,\n\ttype GeoJSONSourceSpecification,\n\ttype StyleSpecification,\n\ttype SymbolLayerSpecification\n} from 'maplibre-gl';\nimport { MaplibreTerradrawControl } from './MaplibreTerradrawControl';\nimport { centroid } from '@turf/centroid';\nimport { defaultMeasureControlOptions } from '../constants';\nimport type { AreaUnit, DistanceUnit, MeasureControlOptions, TerradrawMode } from '../interfaces';\nimport { type GeoJSONStoreFeatures, TerraDrawExtend } from 'terra-draw';\nimport {\n\tcalcArea,\n\tcalcDistance,\n\tcleanMaplibreStyle,\n\tdebounce,\n\tqueryElevationByPoint,\n\tqueryElevationFromRasterDEM,\n\tTERRADRAW_SOURCE_IDS\n} from '../helpers';\n\n/**\n * Maplibre GL Terra Draw Measure Control\n */\nexport class MaplibreMeasureControl extends MaplibreTerradrawControl {\n\tprivate measureOptions: MeasureControlOptions;\n\n\t/**\n\t * The unit of distance can be degrees, radians, miles, or kilometers (default 'kilometers')\n\t * The measuring result will be recalculated once new value is set\n\t */\n\tget distanceUnit() {\n\t\treturn this.measureOptions.distanceUnit ?? 'kilometers';\n\t}\n\tset distanceUnit(value: DistanceUnit) {\n\t\tconst isSame = this.measureOptions.distanceUnit === value;\n\t\tthis.measureOptions.distanceUnit = value;\n\n\t\tif (this.measureOptions.distanceUnit === 'degrees') {\n\t\t\tthis.distancePrecision = 6;\n\t\t} else {\n\t\t\tthis.distancePrecision = 2;\n\t\t}\n\n\t\tif (!isSame) this.recalc();\n\t}\n\n\t/**\n\t * The precision of distance value. It will be set different value dwhen distance unit is changed. Using setter to override the value if you want.\n\t */\n\tget distancePrecision() {\n\t\treturn this.measureOptions.distancePrecision ?? 2;\n\t}\n\tset distancePrecision(value: number) {\n\t\tconst isSame = this.measureOptions.distancePrecision === value;\n\t\tthis.measureOptions.distancePrecision = value;\n\t\tif (!isSame) this.recalc();\n\t}\n\n\t/**\n\t * The unit of area can be metric (m², ha, km²) or imperial (yd², acre, mi²). Default is metric.\n\t * The measuring result will be recalculated once new value is set\n\t */\n\tget areaUnit() {\n\t\treturn this.measureOptions.areaUnit ?? 'metric';\n\t}\n\tset areaUnit(value: AreaUnit) {\n\t\tconst isSame = this.measureOptions.areaUnit === value;\n\t\tthis.measureOptions.areaUnit = value;\n\t\tif (!isSame) this.recalc();\n\t}\n\n\t/**\n\t * The precision of area value. Using setter to override the value if you want.\n\t */\n\tget areaPrecision() {\n\t\treturn this.measureOptions.areaPrecision ?? 2;\n\t}\n\tset areaPrecision(value: number) {\n\t\tconst isSame = this.measureOptions.areaPrecision === value;\n\t\tthis.measureOptions.areaPrecision = value;\n\t\tif (!isSame) this.recalc();\n\t}\n\n\t/**\n\t * The flag of whether computing elevation. Default is false.\n\t * Using setter to override the value if you want.\n\t */\n\tget computeElevation() {\n\t\treturn this.measureOptions.computeElevation ?? false;\n\t}\n\tset computeElevation(value: boolean) {\n\t\tconst isSame = this.measureOptions.computeElevation === value;\n\t\tthis.measureOptions.computeElevation = value;\n\t\tif (!isSame) this.recalc();\n\t}\n\n\t/**\n\t * Get/Set font glyph for measure control layers\n\t *\n\t * As default, this maesure control uses maplibre's default font glyphs(`Open Sans Regular,Arial Unicode MS Regular`) described at https://maplibre.org/maplibre-style-spec/layers/#text-font\n\t *\n\t * If you are using your own maplibre style or different map privider, you probably need to set the font glyphs to match your maplibre style.\n\t *\n\t * Font glyph availability depends on what types of glyphs are supported by your maplibre style (e.g., Carto, Openmap tiles, Protomap, Maptiler, etc.)\n\t * Please make sure the font glyphs are available in your maplibre style.\n\t *\n\t * Usage:\n\t *\n\t * ```js\n\t * const drawControl = new MaplibreMeasureControl()\n\t * drawControl.fontGlyphs = ['Open Sans Italic']\n\t * map.addControl(drawControl)\n\t * ```\n\t */\n\tget fontGlyphs() {\n\t\tconst layers = [\n\t\t\tthis.measureOptions.pointLayerLabelSpec,\n\t\t\tthis.measureOptions.lineLayerLabelSpec,\n\t\t\tthis.measureOptions.polygonLayerSpec\n\t\t];\n\t\tconst firstLayer = layers[0];\n\t\treturn (firstLayer &&\n\t\t\tfirstLayer.layout &&\n\t\t\tfirstLayer.layout['text-font']) as unknown as string[];\n\t}\n\n\tset fontGlyphs(fontNames: string[]) {\n\t\tconst layers = [\n\t\t\tthis.measureOptions.pointLayerLabelSpec,\n\t\t\tthis.measureOptions.lineLayerLabelSpec,\n\t\t\tthis.measureOptions.polygonLayerSpec\n\t\t];\n\t\tfor (const layer of layers) {\n\t\t\tif (layer && layer.layout) {\n\t\t\t\tlayer.layout['text-font'] = fontNames;\n\t\t\t}\n\t\t\t// layer exists in maplibre, update glyphs as well\n\t\t\tif (this.map && layer && this.map.getLayer(layer.id)) {\n\t\t\t\tthis.map.setLayoutProperty(layer.id, 'text-font', fontNames);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Constructor\n\t * @param options Plugin control options\n\t */\n\tconstructor(options?: MeasureControlOptions) {\n\t\tlet measureOptions: MeasureControlOptions = {\n\t\t\t...JSON.parse(JSON.stringify(defaultMeasureControlOptions)),\n\t\t\tmodeOptions: { ...defaultMeasureControlOptions.modeOptions }\n\t\t};\n\n\t\tif (options) {\n\t\t\tmeasureOptions = Object.assign(measureOptions, options);\n\t\t}\n\t\tsuper({\n\t\t\tmodes: measureOptions.modes,\n\t\t\topen: measureOptions.open,\n\t\t\tmodeOptions: measureOptions.modeOptions\n\t\t});\n\t\tthis.measureOptions = measureOptions;\n\t}\n\n\t/**\n\t * add the plugin control to maplibre\n\t * @param map Maplibre Map object\n\t * @returns HTML Element\n\t */\n\tpublic onAdd(map: Map): HTMLElement {\n\t\tthis.controlContainer = super.onAdd(map);\n\t\treturn this.controlContainer;\n\t}\n\n\t/**\n\t * Remove the plugin control from maplibre\n\t * @returns void\n\t */\n\tpublic onRemove(): void {\n\t\tthis.unregisterMesureControl();\n\t\tsuper.onRemove();\n\t}\n\n\t/**\n\t * Activate Terra Draw to start drawing\n\t */\n\tpublic activate() {\n\t\tsuper.activate();\n\t\tthis.registerMesureControl();\n\t}\n\n\t/**\n\t * Recalculate area and distance in TerraDraw snapshot\n\t *\n\t * if you use `addFeatures` to restore GeoJSON features to TerraDraw, this recalc method needs to be called to re-measure again.\n\t *\n\t * For example, the below code is an example usage.\n\t * ```\n\t * drawInstance?.addFeatures(initData);\n\t * map?.once('idle', ()=>{\n\t *   drawControl.recalc()\n\t * })\n\t * ```\n\t */\n\tpublic recalc() {\n\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\tif (drawInstance) {\n\t\t\tthis.registerMesureControl();\n\n\t\t\tconst snapshot = drawInstance.getSnapshot();\n\t\t\tfor (const feature of snapshot) {\n\t\t\t\tconst id: string = feature.id as string;\n\t\t\t\tconst geometryType = feature.geometry.type;\n\t\t\t\tconst mode = feature.properties.mode as TerradrawMode;\n\t\t\t\tif (mode === 'linestring' && geometryType === 'LineString') {\n\t\t\t\t\tthis.measureLine(id);\n\t\t\t\t\tthis.computeElevationByLineFeatureID(id);\n\t\t\t\t} else if (mode === 'point' && geometryType === 'Point') {\n\t\t\t\t\tthis.measurePoint(id);\n\t\t\t\t\tthis.computeElevationByPointFeatureID(id);\n\t\t\t\t} else if (\n\t\t\t\t\t!['point', 'linestring', 'select', 'render'].includes(mode) &&\n\t\t\t\t\tgeometryType === 'Polygon'\n\t\t\t\t) {\n\t\t\t\t\tthis.measurePolygon(id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * clean maplibre style to filter only for terradraw related layers or without them.\n\t * If options are not set, returns original style given to the function.\n\t *\n\t * This can be useful incase users only want to get terradraw related layers or without it.\n\t *\n\t * Usage:\n\t * `cleanStyle(map.getStyle, { excludeTerraDrawLayers: true})`\n\t * `cleanStyle(map.getStyle, { onlyTerraDrawLayers: true})`\n\t *\n\t * @param style maplibre style spec\n\t * @param options.excludeTerraDrawLayers return maplibre style without terradraw layers and sources\n\t * @param options.onlyTerraDrawLayers return maplibre style with only terradraw layers and sources\n\t * @returns\n\t */\n\tpublic cleanStyle(\n\t\tstyle: StyleSpecification,\n\t\toptions?: { excludeTerraDrawLayers?: boolean; onlyTerraDrawLayers?: boolean }\n\t) {\n\t\tconst sourceIds = TERRADRAW_SOURCE_IDS;\n\n\t\tconst polygonSource = this.measureOptions.polygonLayerSpec?.source;\n\t\tif (polygonSource) sourceIds.push(polygonSource);\n\n\t\tconst lineSource = this.measureOptions.lineLayerLabelSpec?.source;\n\t\tif (lineSource) sourceIds.push(lineSource);\n\n\t\tconst pointSource = this.measureOptions.pointLayerLabelSpec?.source;\n\t\tif (pointSource) sourceIds.push(pointSource);\n\n\t\treturn cleanMaplibreStyle(style, options, sourceIds);\n\t}\n\n\t/**\n\t * Register  measure control related maplibre sources and layers\n\t */\n\tprivate registerMesureControl() {\n\t\tif (!this.map) return;\n\n\t\tconst lineModes = this.options.modes?.filter((m) => ['linestring'].includes(m));\n\t\tconst pointMode = this.options.modes?.find((m) => m === 'point');\n\n\t\tif (pointMode) {\n\t\t\t// add GeoJSON source for distance label\n\t\t\tif (\n\t\t\t\t!this.map.getSource(\n\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.map.addSource(\n\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source,\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'geojson',\n\t\t\t\t\t\tdata: { type: 'FeatureCollection', features: [] }\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// add GeoJSON layer for distance label node appearance\n\t\t\tif (\n\t\t\t\t!this.map.getLayer((this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id)\n\t\t\t) {\n\t\t\t\tthis.map.addLayer(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification);\n\t\t\t}\n\t\t}\n\n\t\tif (lineModes && lineModes.length > 0) {\n\t\t\t// add GeoJSON source for distance label\n\t\t\tif (\n\t\t\t\t!this.map.getSource(\n\t\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.map.addSource(\n\t\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source,\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'geojson',\n\t\t\t\t\t\tdata: { type: 'FeatureCollection', features: [] }\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// add GeoJSON layer for distance label node appearance\n\t\t\tif (\n\t\t\t\t!this.map.getLayer((this.measureOptions.lineLayerNodeSpec as CircleLayerSpecification).id)\n\t\t\t) {\n\t\t\t\tthis.map.addLayer(this.measureOptions.lineLayerNodeSpec as CircleLayerSpecification);\n\t\t\t}\n\n\t\t\t// add GeoJSON layer for distance label appearance\n\t\t\tif (\n\t\t\t\t!this.map.getLayer((this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id)\n\t\t\t) {\n\t\t\t\tthis.map.addLayer(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification);\n\t\t\t}\n\t\t}\n\n\t\tconst polygonModes = this.options.modes?.filter((m) =>\n\t\t\t[\n\t\t\t\t'polygon',\n\t\t\t\t'rectangle',\n\t\t\t\t'angled-rectangle',\n\t\t\t\t'circle',\n\t\t\t\t'sector',\n\t\t\t\t'sensor',\n\t\t\t\t'freehand'\n\t\t\t].includes(m)\n\t\t);\n\t\tif (polygonModes && polygonModes.length > 0) {\n\t\t\t// add GeoJSON source for distance label\n\t\t\tif (\n\t\t\t\t!this.map.getSource(\n\t\t\t\t\t(this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).source\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.map.addSource(\n\t\t\t\t\t(this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).source,\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'geojson',\n\t\t\t\t\t\tdata: { type: 'FeatureCollection', features: [] }\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} // add GeoJSON layer for polygon area label appearance\n\t\t\tif (\n\t\t\t\t!this.map.getLayer((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).id)\n\t\t\t) {\n\t\t\t\tthis.map.addLayer(this.measureOptions.polygonLayerSpec as SymbolLayerSpecification);\n\t\t\t}\n\t\t}\n\n\t\tif ((lineModes && lineModes.length > 0) || (polygonModes && polygonModes.length > 0)) {\n\t\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\t\tif (drawInstance) {\n\t\t\t\t// subscribe change event of TerraDraw to calc distance\n\t\t\t\tdrawInstance.on('change', this.handleTerradrawFeatureChanged.bind(this));\n\t\t\t\tdrawInstance.on('finish', this.handleTerradrawFeatureReady.bind(this));\n\t\t\t\tdrawInstance.on('deselect', this.handleTerradrawDeselect.bind(this));\n\n\t\t\t\t// subscribe feature-deleted event for the plugin control\n\t\t\t\tthis.on('feature-deleted', this.onFeatureDeleted.bind(this));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handle deselect event of terradraw\n\t */\n\tprivate handleTerradrawDeselect = () => {\n\t\tif (!this.map) return;\n\t\tif (this.computeElevation === true && this.measureOptions.terrainSource !== undefined) {\n\t\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\t\tif (!drawInstance) return;\n\t\t\tconst snapshot = drawInstance.getSnapshot();\n\t\t\tconst lineFeatures = snapshot.filter(\n\t\t\t\t(f) => f.properties.mode === 'linestring' && f.geometry.type === 'LineString'\n\t\t\t);\n\t\t\tif (lineFeatures.length > 0) {\n\t\t\t\tfor (const f of lineFeatures) {\n\t\t\t\t\tthis.computeElevationByLineFeatureID(f.id as string);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst pointFeatures = snapshot.filter(\n\t\t\t\t(f) => f.properties.mode === 'point' && f.geometry.type === 'Point'\n\t\t\t);\n\t\t\tif (pointFeatures.length > 0) {\n\t\t\t\tfor (const f of pointFeatures) {\n\t\t\t\t\tthis.computeElevationByPointFeatureID(f.id as string);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Handle finish event of terradraw. It will be called after finishing adding a feature\n\t * @param id Feature ID\n\t */\n\tprivate handleTerradrawFeatureReady = debounce((id: TerraDrawExtend.FeatureId) => {\n\t\tif (!this.map) return;\n\t\tthis.computeElevationByLineFeatureID(id);\n\t\tthis.computeElevationByPointFeatureID(id);\n\t}, 300);\n\n\t/**\n\t * Handle change event of TerraDraw\n\t * @param ids Feature IDs\n\t */\n\tprivate handleTerradrawFeatureChanged(ids: TerraDrawExtend.FeatureId[], type: string) {\n\t\tif (!this.map) return;\n\t\t// skip if type is styling. Do continue if type is create, update or delete.\n\t\tif (type === 'styling') return;\n\n\t\tconst sources = [\n\t\t\tthis.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification,\n\t\t\tthis.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification,\n\t\t\tthis.measureOptions.lineLayerNodeSpec as CircleLayerSpecification,\n\t\t\tthis.measureOptions.polygonLayerSpec as SymbolLayerSpecification\n\t\t];\n\t\tconst sourceIds = sources.map((src) => src.source);\n\n\t\tif (type === 'delete') {\n\t\t\tthis.clearMeasureFeatures(sourceIds, ids);\n\t\t\treturn;\n\t\t}\n\n\t\t// type is create or update\n\n\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\tif (!drawInstance) return;\n\t\tconst snapshot = drawInstance.getSnapshot();\n\t\tfor (const id of ids) {\n\t\t\tconst feature = snapshot.find((f) => f.id === id);\n\t\t\tif (feature) {\n\t\t\t\tconst geometryType = feature.geometry.type;\n\t\t\t\tconst mode = feature.properties.mode as TerradrawMode;\n\t\t\t\tif (mode === 'linestring' && geometryType === 'LineString') {\n\t\t\t\t\tthis.measureLine(id);\n\t\t\t\t} else if (mode === 'point' && geometryType === 'Point') {\n\t\t\t\t\tthis.measurePoint(id);\n\t\t\t\t} else if (\n\t\t\t\t\t!['point', 'linestring', 'select', 'render'].includes(mode) &&\n\t\t\t\t\tgeometryType === 'Polygon'\n\t\t\t\t) {\n\t\t\t\t\tthis.measurePolygon(id);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// if editing ID does not exist, delete all related features from measure layers\n\t\t\t\tthis.clearMeasureFeatures(sourceIds, [id]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Unregister measure control related maplibre sources and layers\n\t */\n\tprivate unregisterMesureControl() {\n\t\tthis.off('feature-deleted', this.onFeatureDeleted.bind(this));\n\t\tif (!this.map) return;\n\t\tif (\n\t\t\tthis.map.getLayer((this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id)\n\t\t) {\n\t\t\tthis.map.removeLayer(\n\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\tthis.map.getLayer((this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id)\n\t\t) {\n\t\t\tthis.map.removeLayer((this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id);\n\t\t}\n\t\tif (this.map.getLayer((this.measureOptions.lineLayerNodeSpec as CircleLayerSpecification).id)) {\n\t\t\tthis.map.removeLayer((this.measureOptions.lineLayerNodeSpec as CircleLayerSpecification).id);\n\t\t}\n\t\tif (this.map.getLayer((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).id)) {\n\t\t\tthis.map.removeLayer((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).id);\n\t\t}\n\t\tif (\n\t\t\tthis.map.getSource(\n\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t)\n\t\t) {\n\t\t\tthis.map.removeSource(\n\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\tthis.map.getSource(\n\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t)\n\t\t) {\n\t\t\tthis.map.removeSource(\n\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\tthis.map.getSource((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).source)\n\t\t) {\n\t\t\tthis.map.removeSource(\n\t\t\t\t(this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).source\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Clear GeoJSON feature related to measure control by TerraDraw feature ID\n\t * @param sourceIds the array of source ID to delete\n\t * @param ids the array of feature ID. Optional, if undefined, delete all labels for source\n\t * @returns void\n\t */\n\tprivate clearMeasureFeatures(\n\t\tsourceIds: string[],\n\t\tids: TerraDrawExtend.FeatureId[] | undefined = undefined\n\t) {\n\t\tif (!this.map) return;\n\t\tfor (const sourceId of sourceIds) {\n\t\t\tconst geojsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\t\tsourceId\n\t\t\t] as GeoJSONSourceSpecification;\n\t\t\tif (geojsonSource) {\n\t\t\t\t// delete old nodes\n\t\t\t\tif (\n\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t) {\n\t\t\t\t\t// if ids is undefined, delete all labels for the source\n\t\t\t\t\tif (ids === undefined) {\n\t\t\t\t\t\tgeojsonSource.data.features = [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Delete label features if originalId does not exist anymore.\n\t\t\t\t\t\tgeojsonSource.data.features = geojsonSource.data.features.filter((f) => {\n\t\t\t\t\t\t\tif (f.properties?.originalId) {\n\t\t\t\t\t\t\t\treturn !ids.includes(f.properties.originalId);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn !ids.includes(f.id as string);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// update GeoJSON source with new data\n\t\t\t\t\t(this.map.getSource(sourceId) as GeoJSONSource)?.setData(geojsonSource.data);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Replace GeoJSON source with updated features for a given source ID\n\t * @param updatedFeatures Updated GeoJSON features\n\t * @param sourceId Source ID to update\n\t * @param type either 'linestring' or 'point'\n\t */\n\tprivate replaceGeoJSONSource(\n\t\tupdatedFeatures: GeoJSONStoreFeatures[],\n\t\tsourceId: string,\n\t\ttype: 'linestring' | 'point'\n\t) {\n\t\tif (!this.map) return;\n\t\tconst newGeoJsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\tsourceId\n\t\t] as GeoJSONSourceSpecification;\n\t\tif (newGeoJsonSource) {\n\t\t\tif (\n\t\t\t\ttypeof newGeoJsonSource.data !== 'string' &&\n\t\t\t\tnewGeoJsonSource.data.type === 'FeatureCollection'\n\t\t\t) {\n\t\t\t\t// check if feature id still exist in terradraw\n\t\t\t\t// in some conditions, features might already be deleted from terradraw\n\t\t\t\tconst updatedExistingFeatures: GeoJSONStoreFeatures[] = [];\n\t\t\t\tfor (const f of updatedFeatures) {\n\t\t\t\t\tif (this.terradraw?.getSnapshotFeature(f.id as TerraDrawExtend.FeatureId)) {\n\t\t\t\t\t\tupdatedExistingFeatures.push(f);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst ids = updatedExistingFeatures.map((f) => f.id);\n\t\t\t\tif (\n\t\t\t\t\ttypeof newGeoJsonSource.data !== 'string' &&\n\t\t\t\t\tnewGeoJsonSource.data.type === 'FeatureCollection'\n\t\t\t\t) {\n\t\t\t\t\tif (type === 'linestring') {\n\t\t\t\t\t\tnewGeoJsonSource.data.features = [\n\t\t\t\t\t\t\t...(newGeoJsonSource.data.features = newGeoJsonSource.data.features.filter(\n\t\t\t\t\t\t\t\t(f) => !(ids.includes(f.properties?.originalId) && f.geometry.type === 'Point')\n\t\t\t\t\t\t\t)),\n\t\t\t\t\t\t\t...updatedExistingFeatures\n\t\t\t\t\t\t];\n\t\t\t\t\t} else if (type === 'point') {\n\t\t\t\t\t\tnewGeoJsonSource.data.features = [\n\t\t\t\t\t\t\t...(newGeoJsonSource.data.features = newGeoJsonSource.data.features.filter(\n\t\t\t\t\t\t\t\t(f) => !(ids.includes(f.id) && f.geometry.type === 'Point')\n\t\t\t\t\t\t\t)),\n\t\t\t\t\t\t\t...updatedExistingFeatures\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\n\t\t\t\t\t// delete duplicate points\n\t\t\t\t\tconst featureMap: { [key: TerraDrawExtend.FeatureId]: GeoJSONStoreFeatures } = {};\n\t\t\t\t\tnewGeoJsonSource.data.features.forEach((feature) => {\n\t\t\t\t\t\tconst id = feature.id as TerraDrawExtend.FeatureId;\n\n\t\t\t\t\t\tif (!featureMap[id]) {\n\t\t\t\t\t\t\tfeatureMap[id] = feature as GeoJSONStoreFeatures;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst existingFeature = featureMap[id];\n\t\t\t\t\t\t\tif (!existingFeature.properties.elevation && feature.properties?.elevation) {\n\t\t\t\t\t\t\t\tfeatureMap[id] = feature as GeoJSONStoreFeatures;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tnewGeoJsonSource.data.features = Array.from(Object.values(featureMap));\n\n\t\t\t\t\t// update features\n\t\t\t\t\t(this.map.getSource(sourceId) as GeoJSONSource)?.setData(newGeoJsonSource.data);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Compute elevation by a LineString feature ID\n\t * @param id FeatureID\n\t */\n\tprivate computeElevationByLineFeatureID = async (id: TerraDrawExtend.FeatureId) => {\n\t\tif (!this.map) return;\n\t\tif (this.computeElevation === true) {\n\t\t\tconst geojsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t] as GeoJSONSourceSpecification;\n\t\t\tif (geojsonSource) {\n\t\t\t\tif (\n\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t) {\n\t\t\t\t\tconst points: GeoJSONStoreFeatures[] = geojsonSource.data.features.filter(\n\t\t\t\t\t\t(f) => f.properties?.originalId === id && f.geometry.type === 'Point'\n\t\t\t\t\t) as unknown as GeoJSONStoreFeatures[];\n\t\t\t\t\tif (points && points.length > 0) {\n\t\t\t\t\t\tconst updatedFeatures = await queryElevationFromRasterDEM(\n\t\t\t\t\t\t\tpoints as GeoJSONStoreFeatures[],\n\t\t\t\t\t\t\tthis.measureOptions.terrainSource\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tthis.replaceGeoJSONSource(\n\t\t\t\t\t\t\tupdatedFeatures,\n\t\t\t\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source,\n\t\t\t\t\t\t\t'linestring'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Compute elevation by a Point feature ID\n\t * @param id FeatureID\n\t */\n\tprivate computeElevationByPointFeatureID = async (id: TerraDrawExtend.FeatureId) => {\n\t\tif (!this.map) return;\n\t\tif (this.computeElevation === true) {\n\t\t\tconst geojsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t] as GeoJSONSourceSpecification;\n\t\t\tif (geojsonSource) {\n\t\t\t\tif (\n\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t) {\n\t\t\t\t\tconst points: GeoJSONStoreFeatures[] = geojsonSource.data.features.filter(\n\t\t\t\t\t\t(f) => f.id === id && f.geometry.type === 'Point' && f.properties?.mode === 'point'\n\t\t\t\t\t) as unknown as GeoJSONStoreFeatures[];\n\t\t\t\t\tif (points && points.length > 0) {\n\t\t\t\t\t\tconst updatedFeatures = await queryElevationFromRasterDEM(\n\t\t\t\t\t\t\tpoints as GeoJSONStoreFeatures[],\n\t\t\t\t\t\t\tthis.measureOptions.terrainSource\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.replaceGeoJSONSource(\n\t\t\t\t\t\t\tupdatedFeatures,\n\t\t\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source,\n\t\t\t\t\t\t\t'point'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * measure polygon area for given feature ID\n\t * @param id terradraw feature id\n\t */\n\tprivate measurePolygon(id: TerraDrawExtend.FeatureId) {\n\t\tif (!this.map) return;\n\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\tif (!drawInstance) return;\n\n\t\tconst snapshot = drawInstance.getSnapshot();\n\t\tlet feature = snapshot?.find((f) => f.id === id && f.geometry.type === 'Polygon');\n\t\tif (feature) {\n\t\t\tconst geojsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\t\t(this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).source\n\t\t\t] as GeoJSONSourceSpecification;\n\t\t\tif (geojsonSource) {\n\t\t\t\t// delete old nodes\n\t\t\t\tif (\n\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t) {\n\t\t\t\t\tgeojsonSource.data.features = geojsonSource.data.features.filter(\n\t\t\t\t\t\t(f) => f.properties?.originalId !== id\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst point = JSON.parse(JSON.stringify(feature));\n\t\t\t\tpoint.id = point.id + '-area-label';\n\t\t\t\tpoint.geometry = centroid(feature.geometry).geometry;\n\t\t\t\tpoint.properties.originalId = feature.id;\n\n\t\t\t\tfeature = calcArea(feature, this.areaUnit, this.areaPrecision);\n\t\t\t\tpoint.properties.area = feature.properties.area;\n\t\t\t\tpoint.properties.unit = feature.properties.unit;\n\n\t\t\t\tif (\n\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t) {\n\t\t\t\t\tgeojsonSource.data.features.push(point);\n\t\t\t\t}\n\t\t\t\t// update GeoJSON source with new data\n\t\t\t\t(\n\t\t\t\t\tthis.map.getSource(\n\t\t\t\t\t\t(this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).source\n\t\t\t\t\t) as GeoJSONSource\n\t\t\t\t)?.setData(geojsonSource.data);\n\n\t\t\t\tthis.map.moveLayer((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).id);\n\n\t\t\t\tif (\n\t\t\t\t\tthis.map.getLayer((this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id)\n\t\t\t\t) {\n\t\t\t\t\tthis.map.moveLayer(\n\t\t\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis.map.getLayer((this.measureOptions.lineLayerNodeSpec as CircleLayerSpecification).id)\n\t\t\t\t) {\n\t\t\t\t\tthis.map.moveLayer(\n\t\t\t\t\t\t(this.measureOptions.lineLayerNodeSpec as CircleLayerSpecification).id\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tthis.map.getLayer(\n\t\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis.map.moveLayer(\n\t\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * measure line distance for given feature ID\n\t * @param id terradraw feature id\n\t */\n\tprivate measureLine(id: TerraDrawExtend.FeatureId) {\n\t\tif (!this.map) return;\n\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\tif (!drawInstance) return;\n\n\t\tconst snapshot = drawInstance.getSnapshot();\n\t\tlet feature = snapshot?.find((f) => f.id === id && f.geometry.type === 'LineString');\n\t\tif (feature) {\n\t\t\tconst geojsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t] as GeoJSONSourceSpecification;\n\t\t\tif (geojsonSource) {\n\t\t\t\t// delete old nodes\n\t\t\t\tif (\n\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t) {\n\t\t\t\t\tgeojsonSource.data.features = geojsonSource.data.features.filter(\n\t\t\t\t\t\t(f) => f.properties?.originalId !== id\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tfeature = calcDistance(\n\t\t\t\t\tfeature,\n\t\t\t\t\tthis.distanceUnit,\n\t\t\t\t\tthis.distancePrecision,\n\t\t\t\t\tthis.map,\n\t\t\t\t\tthis.computeElevation,\n\t\t\t\t\tthis.measureOptions.terrainSource\n\t\t\t\t);\n\t\t\t\tconst segments = feature.properties.segments as unknown as GeoJSONStoreFeatures[];\n\t\t\t\tfor (let i = 0; i < segments.length; i++) {\n\t\t\t\t\tconst segment = segments[i];\n\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t\t) {\n\t\t\t\t\t\tgeojsonSource.data.features.push(segment);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst coordinates: number[][] = segment.geometry.coordinates as number[][];\n\t\t\t\t\tconst start = coordinates[0];\n\t\t\t\t\tconst end = coordinates[1];\n\n\t\t\t\t\t// node\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tconst startNode = JSON.parse(JSON.stringify(segment));\n\t\t\t\t\t\tstartNode.id = `${segment.id}-node-${i}`;\n\t\t\t\t\t\tstartNode.geometry = {\n\t\t\t\t\t\t\ttype: 'Point',\n\t\t\t\t\t\t\tcoordinates: start\n\t\t\t\t\t\t};\n\t\t\t\t\t\tstartNode.properties.distance = 0;\n\t\t\t\t\t\tstartNode.properties.total = 0;\n\n\t\t\t\t\t\tif (segment.properties.elevation_start) {\n\t\t\t\t\t\t\tstartNode.properties.elevation = segment.properties.elevation_start;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tgeojsonSource.data.features.push(startNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst endNode = JSON.parse(JSON.stringify(segment));\n\t\t\t\t\tendNode.id = `${segment.id}-node-${i + 1}`;\n\t\t\t\t\tendNode.geometry = {\n\t\t\t\t\t\ttype: 'Point',\n\t\t\t\t\t\tcoordinates: end\n\t\t\t\t\t};\n\n\t\t\t\t\tif (segment.properties.elevation_end) {\n\t\t\t\t\t\tendNode.properties.elevation = segment.properties.elevation_end;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t\t) {\n\t\t\t\t\t\tgeojsonSource.data.features.push(endNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// update GeoJSON source with new data\n\t\t\t\t(\n\t\t\t\t\tthis.map.getSource(\n\t\t\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t\t\t) as GeoJSONSource\n\t\t\t\t)?.setData(geojsonSource.data);\n\n\t\t\t\tif (\n\t\t\t\t\tthis.map.getLayer((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).id)\n\t\t\t\t) {\n\t\t\t\t\tthis.map.moveLayer((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).id);\n\t\t\t\t}\n\n\t\t\t\tthis.map.moveLayer((this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id);\n\t\t\t\tthis.map.moveLayer((this.measureOptions.lineLayerNodeSpec as CircleLayerSpecification).id);\n\n\t\t\t\tif (\n\t\t\t\t\tthis.map.getLayer(\n\t\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis.map.moveLayer(\n\t\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * measure point elevation for given feature ID\n\t * @param id terradraw feature id\n\t */\n\tprivate measurePoint(id: TerraDrawExtend.FeatureId) {\n\t\tif (!this.map) return;\n\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\tif (!drawInstance) return;\n\n\t\tconst snapshot = drawInstance.getSnapshot();\n\t\tlet feature = snapshot?.find((f) => f.id === id && f.geometry.type === 'Point');\n\t\tif (feature) {\n\t\t\tconst geojsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t] as GeoJSONSourceSpecification;\n\t\t\tif (geojsonSource) {\n\t\t\t\t// delete old nodes\n\t\t\t\tif (\n\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t) {\n\t\t\t\t\tgeojsonSource.data.features = geojsonSource.data.features.filter((f) => f.id !== id);\n\t\t\t\t}\n\n\t\t\t\tfeature = queryElevationByPoint(\n\t\t\t\t\tfeature,\n\t\t\t\t\tthis.map,\n\t\t\t\t\tthis.computeElevation,\n\t\t\t\t\tthis.measureOptions.terrainSource\n\t\t\t\t);\n\n\t\t\t\t// add elevation label feature if computeElevation is only enabled.\n\t\t\t\tif (this.computeElevation === true) {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t\t) {\n\t\t\t\t\t\tgeojsonSource.data.features.push(feature);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// update GeoJSON source with new data\n\t\t\t\t(\n\t\t\t\t\tthis.map.getSource(\n\t\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t\t\t) as GeoJSONSource\n\t\t\t\t)?.setData(geojsonSource.data);\n\n\t\t\t\tif (\n\t\t\t\t\tthis.map.getLayer((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).id)\n\t\t\t\t) {\n\t\t\t\t\tthis.map.moveLayer((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).id);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis.map.getLayer((this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id)\n\t\t\t\t) {\n\t\t\t\t\tthis.map.moveLayer(\n\t\t\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id\n\t\t\t\t\t);\n\t\t\t\t\tthis.map.moveLayer(\n\t\t\t\t\t\t(this.measureOptions.lineLayerNodeSpec as CircleLayerSpecification).id\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis.map.moveLayer(\n\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Event definition when feature is deleted by terradraw\n\t */\n\tprivate onFeatureDeleted(args: unknown) {\n\t\tif (!this.map) return;\n\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\tif (drawInstance) {\n\t\t\tlet deletedIds: string[] = [];\n\t\t\tif (typeof args === 'object' && args !== null && 'deletedIds' in args) {\n\t\t\t\tdeletedIds = (args as { deletedIds: string[] }).deletedIds;\n\t\t\t}\n\n\t\t\tconst sources = [\n\t\t\t\tthis.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification,\n\t\t\t\tthis.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification,\n\t\t\t\tthis.measureOptions.lineLayerNodeSpec as CircleLayerSpecification,\n\t\t\t\tthis.measureOptions.polygonLayerSpec as SymbolLayerSpecification\n\t\t\t];\n\t\t\tconst sourceIds = sources.map((src) => src.source);\n\t\t\tif (deletedIds && deletedIds.length > 0) {\n\t\t\t\t// delete only features by IDs\n\t\t\t\tthis.clearMeasureFeatures(sourceIds, deletedIds);\n\t\t\t} else {\n\t\t\t\t// delete all features\n\t\t\t\tthis.clearMeasureFeatures(sourceIds, undefined);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * get GeoJSON features\n\t * @param onlySelected If true, returns only selected features. Default is false.\n\t * @returns FeatureCollection in GeoJSON format\n\t */\n\tpublic getFeatures(onlySelected = false) {\n\t\tconst fc = super.getFeatures(onlySelected);\n\t\tif (!fc) return fc;\n\t\tif (!this.terradraw) return fc;\n\n\t\tfor (let i = 0; i < fc.features.length; i++) {\n\t\t\tconst feature = fc.features[i];\n\t\t\tif (!this.map) continue;\n\t\t\tif (!this.map.loaded()) continue;\n\t\t\tconst geomType = feature.geometry.type;\n\t\t\tif (geomType === 'LineString') {\n\t\t\t\tfc.features[i] = calcDistance(\n\t\t\t\t\tfeature,\n\t\t\t\t\tthis.distanceUnit,\n\t\t\t\t\tthis.distancePrecision,\n\t\t\t\t\tthis.map,\n\t\t\t\t\tthis.computeElevation,\n\t\t\t\t\tthis.measureOptions.terrainSource\n\t\t\t\t);\n\t\t\t} else if (geomType === 'Polygon') {\n\t\t\t\tfc.features[i] = calcArea(feature, this.areaUnit, this.areaPrecision);\n\t\t\t} else if (geomType === 'Point') {\n\t\t\t\tfc.features[i] = queryElevationByPoint(\n\t\t\t\t\tfeature,\n\t\t\t\t\tthis.map,\n\t\t\t\t\tthis.computeElevation,\n\t\t\t\t\tthis.measureOptions.terrainSource\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn fc;\n\t}\n}\n"],"names":["t","e","i","o","s","n","r","a","d","h","l","u","p","g$1","g","m","f","C","v","P","I","x","S","M","F","E","D","w","b","c","k","O","j","_","W","B","N","G","L","V","T","U","A","R","K","X","z","Y","H","q","$","Z","J","Q","tt","et","it","ot","st","nt","rt","at","y","dt","ht","lt","ct","ut","pt","gt","yt","mt","ft","Ct","vt","Pt","It","xt","St","Mt","Ft","Et","Dt","wt","bt","kt","Ot","_t","jt","Wt","Bt","Nt","Gt","Lt","Vt","Tt","Ut","At","Rt","Kt","Xt","zt","Yt","Ht","qt","$t","Zt","Jt","Qt","te","ee","ie","oe","se","ne","re","ye","ae","de","he","le","ce","ue","pe","ge","me","fe","Ce","ve","Pe","we","be","ke","Oe","_e","je","We","Be","Ne","Ge","Le","Ve","Te","Ue","Ae","Re","Xe","AvailableModes","defaultControlOptions","defaultMeasureControlOptions","TerraDrawPointMode","TerraDrawLineStringMode","TerraDrawPolygonMode","TerraDrawRectangleMode","TerraDrawAngledRectangleMode","TerraDrawCircleMode","TerraDrawFreehandMode","TerraDrawSensorMode","TerraDrawSectorMode","TerraDrawSelectMode","getDefaultModeOptions","TerraDrawRenderMode","feature","updateType","ValidateNotSelfIntersecting","earthRadius","factors","geom","properties","options","feat","point","coordinates","isNumber","radiansToLength","radians","units","factor","degreesToRadians","degrees","num","coordEach","geojson","callback","excludeWrapCoord","geometry","stopG","coords","geometryMaybeCollection","wrapShrink","coordIndex","isGeometryCollection","type","isFeatureCollection","isFeature","stop","featureIndex","geomIndex","multiFeatureIndex","geometryIndex","geomType","geomEach","featureProperties","featureBBox","featureId","geomReduce","initialValue","previousValue","currentGeometry","area","value","calculateArea","total","polygonArea","ringArea","FACTOR","PI_OVER_180","coordsLength","lower","middle","upper","lowerX","middleY","upperX","turf_area_default","convertAreaUnit","unit","outputArea","outputUnit","calcArea","areaUnit","areaPrecision","result","converted","getCoord","coord","distance","from","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","turf_distance_default","getDistanceUnitName","distanceUnit","convertMetricDistance","meters","calcDistance","distancePrecision","map","computeElevation","terrainSource","totalDistance","segments","start","end","segment","elevation_start","elevation_end","metricDistance","segmentDistance","segmentTotalDistance","capitalize","TERRADRAW_SOURCE_IDS","TERRADRAW_MEASURE_SOURCE_IDS","_a","_b","_c","cleanMaplibreStyle","style","sourceIds","cloned","key","debounce","delay","timeoutId","args","queryElevationByPoint","elevation","queryElevationFromRasterDEM","points","terrainDource","promises","resolve","url","encoding","tileSize","minzoom","maxzoom","tms","TerrainRGB","Terrarium","roundFeatureCoordinates","features","decimalPlaces","roundCoord","processGeometry","ring","polygon","MaplibreTerradrawControl","__publicField","controls","item","addButton","defaultOptions","modes","newOption","defaultOption","flags","_d","TerraDraw","TerraDrawMapLibreGLAdapter","_f","ele","_g","event","index","snapshot","currentFeature","mode","btn","selected","ids","id","isActive","onlySelected","fc","dataStr","download","targets","className","btns","enabled","hasFeatures","centroid","xSum","ySum","len","MaplibreMeasureControl","measureOptions","drawInstance","lineFeatures","pointFeatures","geojsonSource","updatedFeatures","isSame","firstLayer","fontNames","layers","layer","geometryType","polygonSource","lineSource","pointSource","lineModes","polygonModes","src","sourceId","newGeoJsonSource","updatedExistingFeatures","featureMap","startNode","endNode","deletedIds"],"mappings":"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","x_google_ignoreList":[0,1,6,7,8,11,12,20,24]}